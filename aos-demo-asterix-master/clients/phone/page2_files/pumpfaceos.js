this["AOS"] =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 	};
/******/
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"main": 0
/******/ 	};
/******/
/******/
/******/
/******/ 	// script path function
/******/ 	function jsonpScriptSrc(chunkId) {
/******/ 		return __webpack_require__.p + "" + chunkId + ".pumpfaceos.js"
/******/ 	}
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
/******/ 		var promises = [];
/******/
/******/
/******/ 		// JSONP chunk loading for javascript
/******/
/******/ 		var installedChunkData = installedChunks[chunkId];
/******/ 		if(installedChunkData !== 0) { // 0 means "already installed".
/******/
/******/ 			// a Promise means "currently loading".
/******/ 			if(installedChunkData) {
/******/ 				promises.push(installedChunkData[2]);
/******/ 			} else {
/******/ 				// setup Promise in chunk cache
/******/ 				var promise = new Promise(function(resolve, reject) {
/******/ 					installedChunkData = installedChunks[chunkId] = [resolve, reject];
/******/ 				});
/******/ 				promises.push(installedChunkData[2] = promise);
/******/
/******/ 				// start chunk loading
/******/ 				var head = document.getElementsByTagName('head')[0];
/******/ 				var script = document.createElement('script');
/******/ 				var onScriptComplete;
/******/
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.src = jsonpScriptSrc(chunkId);
/******/
/******/ 				onScriptComplete = function (event) {
/******/ 					// avoid mem leaks in IE.
/******/ 					script.onerror = script.onload = null;
/******/ 					clearTimeout(timeout);
/******/ 					var chunk = installedChunks[chunkId];
/******/ 					if(chunk !== 0) {
/******/ 						if(chunk) {
/******/ 							var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 							var realSrc = event && event.target && event.target.src;
/******/ 							var error = new Error('Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')');
/******/ 							error.type = errorType;
/******/ 							error.request = realSrc;
/******/ 							chunk[1](error);
/******/ 						}
/******/ 						installedChunks[chunkId] = undefined;
/******/ 					}
/******/ 				};
/******/ 				var timeout = setTimeout(function(){
/******/ 					onScriptComplete({ type: 'timeout', target: script });
/******/ 				}, 120000);
/******/ 				script.onerror = script.onload = onScriptComplete;
/******/ 				head.appendChild(script);
/******/ 			}
/******/ 		}
/******/ 		return Promise.all(promises);
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// on error function for async loading
/******/ 	__webpack_require__.oe = function(err) { console.error(err); throw err; };
/******/
/******/ 	var jsonpArray = window["webpackJsonpAOS"] = window["webpackJsonpAOS"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./lang/lang.json":
/*!************************!*\
  !*** ./lang/lang.json ***!
  \************************/
/*! exports provided: en, sv, default */
/***/ (function(module) {

eval("module.exports = {\"en\":{\"header-you-are-visiting\":\"you are visiting \\n **{0}**\",\"header-you-are-home\":\"**Home**\",\"security-establish-network\":\"establishing network connection...\",\"security-network-ok\":\"network ok\",\"security-invalid-credentials\":\"Invalid credentials supplied\",\"security-sccount-problem\":\"A problem has occurred with you account, signing out.\",\"space-loading-space\":\"on our way\",\"place-loading-msg\":\"ok, we're on our way\",\"place-roadieUrl-msg\":\"redirecting to requested location\",\"drive-site-refreshed\":\"site updated, it will be refreshed on next login\"},\"sv\":{\"header-you-are-visiting\":\"hos\\n **{0}**\",\"header-you-are-home\":\"**hemma**\",\"security-establish-network\":\"upprättandet nätverksanslutning ...\",\"security-network-ok\":\"nätverk o\",\"security-invalid-credentials\":\"Ogiltiga referenser levereras\",\"security-sccount-problem\":\" Ett problem har uppstått med ditt konto, logga ut.\",\"space-loading-space\":\"på väg\",\"place-loading-msg\":\"ok, vi är på väg\",\"place-roadieUrl-msg\":\"omdirigerar till önskad plats\",\"drive-site-refreshed\":\"webbplats uppdateras, kommer den att uppdateras vid nästa inloggning\"}};\n\n//# sourceURL=webpack://AOS/./lang/lang.json?");

/***/ }),

/***/ "./lib/datejs/date-en.js":
/*!*******************************!*\
  !*** ./lib/datejs/date-en.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("Date.CultureInfo={name:\"en-GB\",englishName:\"English (United Kingdom)\",nativeName:\"English (United Kingdom)\",dayNames:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],abbreviatedDayNames:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],shortestDayNames:[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"],firstLetterDayNames:[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],monthNames:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],abbreviatedMonthNames:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],amDesignator:\"AM\",pmDesignator:\"PM\",firstDayOfWeek:1,twoDigitYearMax:2029,dateElementOrder:\"dmy\",formatPatterns:{shortDate:\"dd/MM/yyyy\",longDate:\"dd MMMM yyyy\",shortTime:\"HH:mm\",longTime:\"HH:mm:ss\",fullDateTime:\"dd MMMM yyyy HH:mm:ss\",sortableDateTime:\"yyyy-MM-ddTHH:mm:ss\",universalSortableDateTime:\"yyyy-MM-dd HH:mm:ssZ\",rfc1123:\"ddd, dd MMM yyyy HH:mm:ss GMT\",monthDay:\"dd MMMM\",yearMonth:\"MMMM yyyy\"},regexPatterns:{jan:/^jan(uary)?/i,feb:/^feb(ruary)?/i,mar:/^mar(ch)?/i,apr:/^apr(il)?/i,may:/^may/i,jun:/^jun(e)?/i,jul:/^jul(y)?/i,aug:/^aug(ust)?/i,sep:/^sep(t(ember)?)?/i,oct:/^oct(ober)?/i,nov:/^nov(ember)?/i,dec:/^dec(ember)?/i,sun:/^su(n(day)?)?/i,mon:/^mo(n(day)?)?/i,tue:/^tu(e(s(day)?)?)?/i,wed:/^we(d(nesday)?)?/i,thu:/^th(u(r(s(day)?)?)?)?/i,fri:/^fr(i(day)?)?/i,sat:/^sa(t(urday)?)?/i,future:/^next/i,past:/^last|past|prev(ious)?/i,add:/^(\\+|aft(er)?|from|hence)/i,subtract:/^(\\-|bef(ore)?|ago)/i,yesterday:/^yes(terday)?/i,today:/^t(od(ay)?)?/i,tomorrow:/^tom(orrow)?/i,now:/^n(ow)?/i,millisecond:/^ms|milli(second)?s?/i,second:/^sec(ond)?s?/i,minute:/^mn|min(ute)?s?/i,hour:/^h(our)?s?/i,week:/^w(eek)?s?/i,month:/^m(onth)?s?/i,day:/^d(ay)?s?/i,year:/^y(ear)?s?/i,shortMeridian:/^(a|p)/i,longMeridian:/^(a\\.?m?\\.?|p\\.?m?\\.?)/i,timezone:/^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\\s*(\\+|\\-)\\s*\\d\\d\\d\\d?)|gmt|utc)/i,ordinalSuffix:/^\\s*(st|nd|rd|th)/i,timeContext:/^\\s*(\\:|a(?!u|p)|p)/i},timezones:[{name:\"UTC\",offset:\"-000\"},{name:\"GMT\",offset:\"-000\"},{name:\"EST\",offset:\"-0500\"},{name:\"EDT\",offset:\"-0400\"},{name:\"CST\",offset:\"-0600\"},{name:\"CDT\",offset:\"-0500\"},{name:\"MST\",offset:\"-0700\"},{name:\"MDT\",offset:\"-0600\"},{name:\"PST\",offset:\"-0800\"},{name:\"PDT\",offset:\"-0700\"}]},/**\n * @version: 1.0 Alpha-1\n * @author: Coolite Inc. http://www.coolite.com/\n * @date: 2008-04-13\n * @copyright: Copyright (c) 2006-2008, Coolite Inc. (http://www.coolite.com/). All rights reserved.\n * @license: Licensed under The MIT License. See license.txt and http://www.datejs.com/license/. \n * @website: http://www.datejs.com/\n */\nfunction(){var t=Date,e=t.prototype,n=function(t,e){return e||(e=2),(\"000\"+t).slice(e*-1)};e.clearTime=function(){return this.setHours(0),this.setMinutes(0),this.setSeconds(0),this.setMilliseconds(0),this},e.setTimeToNow=function(){var t=new Date;return this.setHours(t.getHours()),this.setMinutes(t.getMinutes()),this.setSeconds(t.getSeconds()),this.setMilliseconds(t.getMilliseconds()),this},t.today=function(){return(new Date).clearTime()},t.compare=function(t,e){if(isNaN(t)||isNaN(e))throw new Error(t+\" - \"+e);if(t instanceof Date&&e instanceof Date)return t<e?-1:t>e?1:0;throw new TypeError(t+\" - \"+e)},t.equals=function(t,e){return 0===t.compareTo(e)},t.getDayNumberFromName=function(e){for(var n=t.CultureInfo.dayNames,s=t.CultureInfo.abbreviatedDayNames,i=t.CultureInfo.shortestDayNames,r=e.toLowerCase(),o=0;o<n.length;o++)if(n[o].toLowerCase()==r||s[o].toLowerCase()==r||i[o].toLowerCase()==r)return o;return-1},t.getMonthNumberFromName=function(e){for(var n=t.CultureInfo.monthNames,s=t.CultureInfo.abbreviatedMonthNames,i=e.toLowerCase(),r=0;r<n.length;r++)if(n[r].toLowerCase()==i||s[r].toLowerCase()==i)return r;return-1},t.isLeapYear=function(t){return t%4===0&&t%100!==0||t%400===0},t.getDaysInMonth=function(e,n){return[31,t.isLeapYear(e)?29:28,31,30,31,30,31,31,30,31,30,31][n]},t.getTimezoneAbbreviation=function(e){for(var n=t.CultureInfo.timezones,s=0;s<n.length;s++)if(n[s].offset===e)return n[s].name;return null},t.getTimezoneOffset=function(e){for(var n=t.CultureInfo.timezones,s=0;s<n.length;s++)if(n[s].name===e.toUpperCase())return n[s].offset;return null},e.clone=function(){return new Date(this.getTime())},e.compareTo=function(t){return Date.compare(this,t)},e.equals=function(t){return Date.equals(this,t||new Date)},e.between=function(t,e){return this.getTime()>=t.getTime()&&this.getTime()<=e.getTime()},e.isAfter=function(t){return 1===this.compareTo(t||new Date)},e.isBefore=function(t){return this.compareTo(t||new Date)===-1},e.isToday=e.isSameDay=function(t){return this.clone().clearTime().equals((t||new Date).clone().clearTime())},e.addMilliseconds=function(t){return this.setMilliseconds(this.getMilliseconds()+1*t),this},e.addSeconds=function(t){return this.addMilliseconds(1e3*t)},e.addMinutes=function(t){return this.addMilliseconds(6e4*t)},e.addHours=function(t){return this.addMilliseconds(36e5*t)},e.addDays=function(t){return this.setDate(this.getDate()+1*t),this},e.addWeeks=function(t){return this.addDays(7*t)},e.addMonths=function(e){var n=this.getDate();return this.setDate(1),this.setMonth(this.getMonth()+1*e),this.setDate(Math.min(n,t.getDaysInMonth(this.getFullYear(),this.getMonth()))),this},e.addYears=function(t){return this.addMonths(12*t)},e.add=function(t){if(\"number\"==typeof t)return this._orient=t,this;var e=t;return e.milliseconds&&this.addMilliseconds(e.milliseconds),e.seconds&&this.addSeconds(e.seconds),e.minutes&&this.addMinutes(e.minutes),e.hours&&this.addHours(e.hours),e.weeks&&this.addWeeks(e.weeks),e.months&&this.addMonths(e.months),e.years&&this.addYears(e.years),e.days&&this.addDays(e.days),this};var s,i,r;e.getWeek=function(){var t,e,n,o,a,u,h,c,l,d;return s=s?s:this.getFullYear(),i=i?i:this.getMonth()+1,r=r?r:this.getDate(),i<=2?(t=s-1,e=(t/4|0)-(t/100|0)+(t/400|0),n=((t-1)/4|0)-((t-1)/100|0)+((t-1)/400|0),l=e-n,a=0,u=r-1+31*(i-1)):(t=s,e=(t/4|0)-(t/100|0)+(t/400|0),n=((t-1)/4|0)-((t-1)/100|0)+((t-1)/400|0),l=e-n,a=l+1,u=r+(153*(i-3)+2)/5+58+l),h=(t+e)%7,o=(u+h-a)%7,c=u+3-o|0,d=c<0?53-((h-l)/5|0):c>364+l?1:(c/7|0)+1,s=i=r=null,d},e.getISOWeek=function(){return s=this.getUTCFullYear(),i=this.getUTCMonth()+1,r=this.getUTCDate(),n(this.getWeek())},e.setWeek=function(t){return this.moveToDayOfWeek(1).addWeeks(t-this.getWeek())};var o=function(t,e,n,s){if(\"undefined\"==typeof t)return!1;if(\"number\"!=typeof t)throw new TypeError(t+\" is not a Number.\");if(t<e||t>n)throw new RangeError(t+\" is not a valid value for \"+s+\".\");return!0};t.validateMillisecond=function(t){return o(t,0,999,\"millisecond\")},t.validateSecond=function(t){return o(t,0,59,\"second\")},t.validateMinute=function(t){return o(t,0,59,\"minute\")},t.validateHour=function(t){return o(t,0,23,\"hour\")},t.validateDay=function(e,n,s){return o(e,1,t.getDaysInMonth(n,s),\"day\")},t.validateMonth=function(t){return o(t,0,11,\"month\")},t.validateYear=function(t){return o(t,0,9999,\"year\")},e.set=function(e){return t.validateMillisecond(e.millisecond)&&this.addMilliseconds(e.millisecond-this.getMilliseconds()),t.validateSecond(e.second)&&this.addSeconds(e.second-this.getSeconds()),t.validateMinute(e.minute)&&this.addMinutes(e.minute-this.getMinutes()),t.validateHour(e.hour)&&this.addHours(e.hour-this.getHours()),t.validateMonth(e.month)&&this.addMonths(e.month-this.getMonth()),t.validateYear(e.year)&&this.addYears(e.year-this.getFullYear()),t.validateDay(e.day,this.getFullYear(),this.getMonth())&&this.addDays(e.day-this.getDate()),e.timezone&&this.setTimezone(e.timezone),\"number\"==typeof e.timezoneOffset&&this.setTimezoneOffset(e.timezoneOffset),e.week&&o(e.week,0,53,\"week\")&&this.setWeek(e.week),this},e.moveToFirstDayOfMonth=function(){return this.set({day:1})},e.moveToLastDayOfMonth=function(){return this.set({day:t.getDaysInMonth(this.getFullYear(),this.getMonth())})},e.moveToNthOccurrence=function(t,e){var n=0;if(e>0)n=e-1;else if(e===-1)return this.moveToLastDayOfMonth(),this.getDay()!==t&&this.moveToDayOfWeek(t,-1),this;return this.moveToFirstDayOfMonth().addDays(-1).moveToDayOfWeek(t,1).addWeeks(n)},e.moveToDayOfWeek=function(t,e){var n=(t-this.getDay()+7*(e||1))%7;return this.addDays(0===n?n+=7*(e||1):n)},e.moveToMonth=function(t,e){var n=(t-this.getMonth()+12*(e||1))%12;return this.addMonths(0===n?n+=12*(e||1):n)},e.getOrdinalNumber=function(){return Math.ceil((this.clone().clearTime()-new Date(this.getFullYear(),0,1))/864e5)+1},e.getTimezone=function(){return t.getTimezoneAbbreviation(this.getUTCOffset())},e.setTimezoneOffset=function(t){var e=this.getTimezoneOffset(),n=Number(t)*-6/10;return this.addMinutes(n-e)},e.setTimezone=function(e){return this.setTimezoneOffset(t.getTimezoneOffset(e))},e.hasDaylightSavingTime=function(){return Date.today().set({month:0,day:1}).getTimezoneOffset()!==Date.today().set({month:6,day:1}).getTimezoneOffset()},e.isDaylightSavingTime=function(){return Date.today().set({month:0,day:1}).getTimezoneOffset()!=this.getTimezoneOffset()},e.getUTCOffset=function(){var t,e=this.getTimezoneOffset()*-10/6;return e<0?(t=(e-1e4).toString(),t.charAt(0)+t.substr(2)):(t=(e+1e4).toString(),\"+\"+t.substr(1))},e.getElapsed=function(t){return(t||new Date)-this},e.toISOString||(e.toISOString=function(){function t(t){return t<10?\"0\"+t:t}return'\"'+this.getUTCFullYear()+\"-\"+t(this.getUTCMonth()+1)+\"-\"+t(this.getUTCDate())+\"T\"+t(this.getUTCHours())+\":\"+t(this.getUTCMinutes())+\":\"+t(this.getUTCSeconds())+'Z\"'}),e._toString=e.toString,e.toString=function(e){var s=this;if(e&&1==e.length){var i=t.CultureInfo.formatPatterns;switch(s.t=s.toString,e){case\"d\":return s.t(i.shortDate);case\"D\":return s.t(i.longDate);case\"F\":return s.t(i.fullDateTime);case\"m\":return s.t(i.monthDay);case\"r\":return s.t(i.rfc1123);case\"s\":return s.t(i.sortableDateTime);case\"t\":return s.t(i.shortTime);case\"T\":return s.t(i.longTime);case\"u\":return s.t(i.universalSortableDateTime);case\"y\":return s.t(i.yearMonth)}}var r=function(t){switch(1*t){case 1:case 21:case 31:return\"st\";case 2:case 22:return\"nd\";case 3:case 23:return\"rd\";default:return\"th\"}};return e?e.replace(/(\\\\)?(dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|S)/g,function(e){if(\"\\\\\"===e.charAt(0))return e.replace(\"\\\\\",\"\");switch(s.h=s.getHours,e){case\"hh\":return n(s.h()<13?0===s.h()?12:s.h():s.h()-12);case\"h\":return s.h()<13?0===s.h()?12:s.h():s.h()-12;case\"HH\":return n(s.h());case\"H\":return s.h();case\"mm\":return n(s.getMinutes());case\"m\":return s.getMinutes();case\"ss\":return n(s.getSeconds());case\"s\":return s.getSeconds();case\"yyyy\":return n(s.getFullYear(),4);case\"yy\":return n(s.getFullYear());case\"dddd\":return t.CultureInfo.dayNames[s.getDay()];case\"ddd\":return t.CultureInfo.abbreviatedDayNames[s.getDay()];case\"dd\":return n(s.getDate());case\"d\":return s.getDate();case\"MMMM\":return t.CultureInfo.monthNames[s.getMonth()];case\"MMM\":return t.CultureInfo.abbreviatedMonthNames[s.getMonth()];case\"MM\":return n(s.getMonth()+1);case\"M\":return s.getMonth()+1;case\"t\":return s.h()<12?t.CultureInfo.amDesignator.substring(0,1):t.CultureInfo.pmDesignator.substring(0,1);case\"tt\":return s.h()<12?t.CultureInfo.amDesignator:t.CultureInfo.pmDesignator;case\"S\":return r(s.getDate());default:return e}}):this._toString()}}(),/**\n * @version: 1.0 Alpha-1\n * @author: Coolite Inc. http://www.coolite.com/\n * @date: 2008-04-13\n * @copyright: Copyright (c) 2006-2008, Coolite Inc. (http://www.coolite.com/). All rights reserved.\n * @license: Licensed under The MIT License. See license.txt and http://www.datejs.com/license/. \n * @website: http://www.datejs.com/\n */\nfunction(){var t=Date,e=t.prototype,n=Number.prototype;e._orient=1,e._nth=null,e._is=!1,e._same=!1,e._isSecond=!1,n._dateElement=\"day\",e.next=function(){return this._orient=1,this},t.next=function(){return t.today().next()},e.last=e.prev=e.previous=function(){return this._orient=-1,this},t.last=t.prev=t.previous=function(){return t.today().last()},e.is=function(){return this._is=!0,this},e.same=function(){return this._same=!0,this._isSecond=!1,this},e.today=function(){return this.same().day()},e.weekday=function(){return!!this._is&&(this._is=!1,!this.is().sat()&&!this.is().sun())},e.at=function(e){return\"string\"==typeof e?t.parse(this.toString(\"d\")+\" \"+e):this.set(e)},n.fromNow=n.after=function(t){var e={};return e[this._dateElement]=this,(t?t.clone():new Date).add(e)},n.ago=n.before=function(t){var e={};return e[this._dateElement]=this*-1,(t?t.clone():new Date).add(e)};var s,i=\"sunday monday tuesday wednesday thursday friday saturday\".split(/\\s/),r=\"january february march april may june july august september october november december\".split(/\\s/),o=\"Millisecond Second Minute Hour Day Week Month Year\".split(/\\s/),a=\"Milliseconds Seconds Minutes Hours Date Week Month FullYear\".split(/\\s/),u=\"final first second third fourth fifth\".split(/\\s/);e.toObject=function(){for(var t={},e=0;e<o.length;e++)t[o[e].toLowerCase()]=this[\"get\"+a[e]]();return t},t.fromObject=function(t){return t.week=null,Date.today().set(t)};for(var h=function(e){return function(){if(this._is)return this._is=!1,this.getDay()==e;if(null!==this._nth){this._isSecond&&this.addSeconds(this._orient*-1),this._isSecond=!1;var n=this._nth;this._nth=null;var s=this.clone().moveToLastDayOfMonth();if(this.moveToNthOccurrence(e,n),this>s)throw new RangeError(t.getDayName(e)+\" does not occur \"+n+\" times in the month of \"+t.getMonthName(s.getMonth())+\" \"+s.getFullYear()+\".\");return this}return this.moveToDayOfWeek(e,this._orient)}},c=function(e){return function(){var n=t.today(),s=e-n.getDay();return 0===e&&1===D.CultureInfo.firstDayOfWeek&&0!==n.getDay()&&(s+=7),n.addDays(s)}},l=0;l<i.length;l++)t[i[l].toUpperCase()]=t[i[l].toUpperCase().substring(0,3)]=l,t[i[l]]=t[i[l].substring(0,3)]=c(l),e[i[l]]=e[i[l].substring(0,3)]=h(l);for(var d=function(t){return function(){return this._is?(this._is=!1,this.getMonth()===t):this.moveToMonth(t,this._orient)}},f=function(e){return function(){return t.today().set({month:e,day:1})}},y=0;y<r.length;y++)t[r[y].toUpperCase()]=t[r[y].toUpperCase().substring(0,3)]=y,t[r[y]]=t[r[y].substring(0,3)]=f(y),e[r[y]]=e[r[y].substring(0,3)]=d(y);for(var m=function(t){return function(){if(this._isSecond)return this._isSecond=!1,this;if(this._same){this._same=this._is=!1;for(var e=this.toObject(),n=(arguments[0]||new Date).toObject(),s=\"\",i=t.toLowerCase(),r=o.length-1;r>-1;r--){if(s=o[r].toLowerCase(),e[s]!=n[s])return!1;if(i==s)break}return!0}return\"s\"!=t.substring(t.length-1)&&(t+=\"s\"),this[\"add\"+t](this._orient)}},g=function(t){return function(){return this._dateElement=t,this}},M=0;M<o.length;M++)s=o[M].toLowerCase(),e[s]=e[s+\"s\"]=m(o[M]),n[s]=n[s+\"s\"]=g(s);e._ss=m(\"Second\");for(var p=function(t){return function(e){return this._same?this._ss(arguments[0]):e||0===e?this.moveToNthOccurrence(e,t):(this._nth=t,2!==t||void 0!==e&&null!==e?this:(this._isSecond=!0,this.addSeconds(this._orient)))}},v=0;v<u.length;v++)e[u[v]]=p(0===v?-1:v)}(),/**\n * @version: 1.0 Alpha-1\n * @author: Coolite Inc. http://www.coolite.com/\n * @date: 2008-04-13\n * @copyright: Copyright (c) 2006-2008, Coolite Inc. (http://www.coolite.com/). All rights reserved.\n * @license: Licensed under The MIT License. See license.txt and http://www.datejs.com/license/. \n * @website: http://www.datejs.com/\n */\nfunction(){Date.Parsing={Exception:function(t){this.message=\"Parse error at '\"+t.substring(0,10)+\" ...'\"}};for(var t=Date.Parsing,e=t.Operators={rtoken:function(e){return function(n){var s=n.match(e);if(s)return[s[0],n.substring(s[0].length)];throw new t.Exception(n)}},token:function(t){return function(t){return e.rtoken(new RegExp(\"^s*\"+t+\"s*\"))(t)}},stoken:function(t){return e.rtoken(new RegExp(\"^\"+t))},until:function(t){return function(e){for(var n=[],s=null;e.length;){try{s=t.call(this,e)}catch(t){n.push(s[0]),e=s[1];continue}break}return[n,e]}},many:function(t){return function(e){for(var n=[],s=null;e.length;){try{s=t.call(this,e)}catch(t){return[n,e]}n.push(s[0]),e=s[1]}return[n,e]}},optional:function(t){return function(e){var n=null;try{n=t.call(this,e)}catch(t){return[null,e]}return[n[0],n[1]]}},not:function(e){return function(n){try{e.call(this,n)}catch(t){return[null,n]}throw new t.Exception(n)}},ignore:function(t){return t?function(e){var n=null;return n=t.call(this,e),[null,n[1]]}:null},product:function(){for(var t=arguments[0],n=Array.prototype.slice.call(arguments,1),s=[],i=0;i<t.length;i++)s.push(e.each(t[i],n));return s},cache:function(e){var n={},s=null;return function(i){try{s=n[i]=n[i]||e.call(this,i)}catch(t){s=n[i]=t}if(s instanceof t.Exception)throw s;return s}},any:function(){var e=arguments;return function(n){for(var s=null,i=0;i<e.length;i++)if(null!=e[i]){try{s=e[i].call(this,n)}catch(t){s=null}if(s)return s}throw new t.Exception(n)}},each:function(){var e=arguments;return function(n){for(var s=[],i=null,r=0;r<e.length;r++)if(null!=e[r]){try{i=e[r].call(this,n)}catch(e){throw new t.Exception(n)}s.push(i[0]),n=i[1]}return[s,n]}},all:function(){var t=arguments,e=e;return e.each(e.optional(t))},sequence:function(n,s,i){return s=s||e.rtoken(/^\\s*/),i=i||null,1==n.length?n[0]:function(e){for(var r=null,o=null,a=[],u=0;u<n.length;u++){try{r=n[u].call(this,e)}catch(t){break}a.push(r[0]);try{o=s.call(this,r[1])}catch(t){o=null;break}e=o[1]}if(!r)throw new t.Exception(e);if(o)throw new t.Exception(o[1]);if(i)try{r=i.call(this,r[1])}catch(e){throw new t.Exception(r[1])}return[a,r?r[1]:e]}},between:function(t,n,s){s=s||t;var i=e.each(e.ignore(t),n,e.ignore(s));return function(t){var e=i.call(this,t);return[[e[0][0],r[0][2]],e[1]]}},list:function(t,n,s){return n=n||e.rtoken(/^\\s*/),s=s||null,t instanceof Array?e.each(e.product(t.slice(0,-1),e.ignore(n)),t.slice(-1),e.ignore(s)):e.each(e.many(e.each(t,e.ignore(n))),px,e.ignore(s))},set:function(n,s,i){return s=s||e.rtoken(/^\\s*/),i=i||null,function(r){for(var o=null,a=null,u=null,h=null,c=[[],r],l=!1,d=0;d<n.length;d++){u=null,a=null,o=null,l=1==n.length;try{o=n[d].call(this,r)}catch(t){continue}if(h=[[o[0]],o[1]],o[1].length>0&&!l)try{u=s.call(this,o[1])}catch(t){l=!0}else l=!0;if(l||0!==u[1].length||(l=!0),!l){for(var f=[],y=0;y<n.length;y++)d!=y&&f.push(n[y]);a=e.set(f,s).call(this,u[1]),a[0].length>0&&(h[0]=h[0].concat(a[0]),h[1]=a[1])}if(h[1].length<c[1].length&&(c=h),0===c[1].length)break}if(0===c[0].length)return c;if(i){try{u=i.call(this,c[1])}catch(e){throw new t.Exception(c[1])}c[1]=u[1]}return c}},forward:function(t,e){return function(n){return t[e].call(this,n)}},replace:function(t,e){return function(n){var s=t.call(this,n);return[e,s[1]]}},process:function(t,e){return function(n){var s=t.call(this,n);return[e.call(this,s[0]),s[1]]}},min:function(e,n){return function(s){var i=n.call(this,s);if(i[0].length<e)throw new t.Exception(s);return i}}},n=function(t){return function(){var e=null,n=[];if(arguments.length>1?e=Array.prototype.slice.call(arguments):arguments[0]instanceof Array&&(e=arguments[0]),!e)return t.apply(null,arguments);for(var s=0,i=e.shift();s<i.length;s++)return e.unshift(i[s]),n.push(t.apply(null,e)),e.shift(),n}},s=\"optional not ignore cache\".split(/\\s/),i=0;i<s.length;i++)e[s[i]]=n(e[s[i]]);for(var o=function(t){return function(){return arguments[0]instanceof Array?t.apply(null,arguments[0]):t.apply(null,arguments)}},a=\"each any all\".split(/\\s/),u=0;u<a.length;u++)e[a[u]]=o(e[a[u]])}(),function(){var t=Date,e=(t.prototype,function(t){for(var n=[],s=0;s<t.length;s++)t[s]instanceof Array?n=n.concat(e(t[s])):t[s]&&n.push(t[s]);return n});t.Grammar={},t.Translator={hour:function(t){return function(){this.hour=Number(t)}},minute:function(t){return function(){this.minute=Number(t)}},second:function(t){return function(){this.second=Number(t)}},meridian:function(t){return function(){this.meridian=t.slice(0,1).toLowerCase()}},timezone:function(t){return function(){var e=t.replace(/[^\\d\\+\\-]/g,\"\");e.length?this.timezoneOffset=Number(e):this.timezone=t.toLowerCase()}},Z:function(t){return function(){this.timezone=\"UTC\"}},day:function(t){var e=t[0];return function(){this.day=Number(e.match(/\\d+/)[0])}},month:function(t){return function(){this.month=3==t.length?\"jan feb mar apr may jun jul aug sep oct nov dec\".indexOf(t)/4:Number(t)-1}},year:function(e){return function(){var n=Number(e);this.year=e.length>2?n:n+(n+2e3<t.CultureInfo.twoDigitYearMax?2e3:1900)}},rday:function(t){return function(){switch(t){case\"yesterday\":this.days=-1;break;case\"tomorrow\":this.days=1;break;case\"today\":this.days=0;break;case\"now\":this.days=0,this.now=!0}}},finishExact:function(e){e=e instanceof Array?e:[e];for(var n=0;n<e.length;n++)e[n]&&e[n].call(this);var s=new Date;if(!this.hour&&!this.minute||this.month||this.year||this.day||(this.day=s.getDate()),this.year||(this.year=s.getFullYear()),this.month||0===this.month||(this.month=s.getMonth()),this.day||(this.day=1),this.hour||(this.hour=0),this.minute||(this.minute=0),this.second||(this.second=0),this.meridian&&this.hour&&(\"p\"==this.meridian&&this.hour<12?this.hour=this.hour+12:\"a\"==this.meridian&&12==this.hour&&(this.hour=0)),this.day>t.getDaysInMonth(this.year,this.month))throw new RangeError(this.day+\" is not a valid value for days.\");var i=new Date(this.year,this.month,this.day,this.hour,this.minute,this.second);return this.timezone?i.set({timezone:this.timezone}):\"number\"==typeof this.timezoneOffset&&i.set({timezoneOffset:this.timezoneOffset}),i},finish:function(n){if(n=n instanceof Array?e(n):[n],0===n.length)return null;for(var s=0;s<n.length;s++)\"function\"==typeof n[s]&&n[s].call(this);var i=t.today();if(this.now&&!this.unit&&!this.operator)return new Date;this.now&&(i=new Date);var r,o,a,u=!!(this.days&&null!==this.days||this.orient||this.operator);if(a=\"past\"==this.orient||\"subtract\"==this.operator?-1:1,this.now||\"hour minute second\".indexOf(this.unit)==-1||i.setTimeToNow(),(this.month||0===this.month)&&\"year day hour minute second\".indexOf(this.unit)!=-1&&(this.value=this.month+1,this.month=null,u=!0),!u&&this.weekday&&!this.day&&!this.days){var h=Date[this.weekday]();this.day=h.getDate(),this.month||(this.month=h.getMonth()),this.year=h.getFullYear()}if(u&&this.weekday&&\"month\"!=this.unit&&(this.unit=\"day\",r=t.getDayNumberFromName(this.weekday)-i.getDay(),o=7,this.days=r?(r+a*o)%o:a*o),this.month&&\"day\"==this.unit&&this.operator&&(this.value=this.month+1,this.month=null),null!=this.value&&null!=this.month&&null!=this.year&&(this.day=1*this.value),this.month&&!this.day&&this.value&&(i.set({day:1*this.value}),u||(this.day=1*this.value)),this.month||!this.value||\"month\"!=this.unit||this.now||(this.month=this.value,u=!0),u&&(this.month||0===this.month)&&\"year\"!=this.unit&&(this.unit=\"month\",r=this.month-i.getMonth(),o=12,this.months=r?(r+a*o)%o:a*o,this.month=null),this.unit||(this.unit=\"day\"),!this.value&&this.operator&&null!==this.operator&&this[this.unit+\"s\"]&&null!==this[this.unit+\"s\"]?this[this.unit+\"s\"]=this[this.unit+\"s\"]+(\"add\"==this.operator?1:-1)+(this.value||0)*a:null!=this[this.unit+\"s\"]&&null==this.operator||(this.value||(this.value=1),this[this.unit+\"s\"]=this.value*a),this.meridian&&this.hour&&(\"p\"==this.meridian&&this.hour<12?this.hour=this.hour+12:\"a\"==this.meridian&&12==this.hour&&(this.hour=0)),this.weekday&&!this.day&&!this.days){var h=Date[this.weekday]();this.day=h.getDate(),h.getMonth()!==i.getMonth()&&(this.month=h.getMonth())}return!this.month&&0!==this.month||this.day||(this.day=1),this.orient||this.operator||\"week\"!=this.unit||!this.value||this.day||this.month?(u&&this.timezone&&this.day&&this.days&&(this.day=this.days),u?i.add(this):i.set(this)):Date.today().setWeek(this.value)}};var n,s=t.Parsing.Operators,i=t.Grammar,r=t.Translator;i.datePartDelimiter=s.rtoken(/^([\\s\\-\\.\\,\\/\\x27]+)/),i.timePartDelimiter=s.stoken(\":\"),i.whiteSpace=s.rtoken(/^\\s*/),i.generalDelimiter=s.rtoken(/^(([\\s\\,]|at|@|on)+)/);var o={};i.ctoken=function(e){var n=o[e];if(!n){for(var i=t.CultureInfo.regexPatterns,r=e.split(/\\s+/),a=[],u=0;u<r.length;u++)a.push(s.replace(s.rtoken(i[r[u]]),r[u]));n=o[e]=s.any.apply(null,a)}return n},i.ctoken2=function(e){return s.rtoken(t.CultureInfo.regexPatterns[e])},i.h=s.cache(s.process(s.rtoken(/^(0[0-9]|1[0-2]|[1-9])/),r.hour)),i.hh=s.cache(s.process(s.rtoken(/^(0[0-9]|1[0-2])/),r.hour)),i.H=s.cache(s.process(s.rtoken(/^([0-1][0-9]|2[0-3]|[0-9])/),r.hour)),i.HH=s.cache(s.process(s.rtoken(/^([0-1][0-9]|2[0-3])/),r.hour)),i.m=s.cache(s.process(s.rtoken(/^([0-5][0-9]|[0-9])/),r.minute)),i.mm=s.cache(s.process(s.rtoken(/^[0-5][0-9]/),r.minute)),i.s=s.cache(s.process(s.rtoken(/^([0-5][0-9]|[0-9])/),r.second)),i.ss=s.cache(s.process(s.rtoken(/^[0-5][0-9]/),r.second)),i.hms=s.cache(s.sequence([i.H,i.m,i.s],i.timePartDelimiter)),i.t=s.cache(s.process(i.ctoken2(\"shortMeridian\"),r.meridian)),i.tt=s.cache(s.process(i.ctoken2(\"longMeridian\"),r.meridian)),i.Z=s.cache(s.process(s.rtoken(/^Z/),r.Z)),i.z=s.cache(s.process(s.rtoken(/^((\\+|\\-)\\s*\\d\\d\\d\\d)|((\\+|\\-)\\d\\d\\:?\\d\\d)/),r.timezone)),i.zz=s.cache(s.process(s.rtoken(/^((\\+|\\-)\\s*\\d\\d\\d\\d)|((\\+|\\-)\\d\\d\\:?\\d\\d)/),r.timezone)),i.zzz=s.cache(s.process(i.ctoken2(\"timezone\"),r.timezone)),i.timeSuffix=s.each(s.ignore(i.whiteSpace),s.set([i.tt,i.zzz])),i.time=s.each(s.optional(s.ignore(s.stoken(\"T\"))),i.hms,i.timeSuffix),i.d=s.cache(s.process(s.each(s.rtoken(/^([0-2]\\d|3[0-1]|\\d)/),s.optional(i.ctoken2(\"ordinalSuffix\"))),r.day)),i.dd=s.cache(s.process(s.each(s.rtoken(/^([0-2]\\d|3[0-1])/),s.optional(i.ctoken2(\"ordinalSuffix\"))),r.day)),i.ddd=i.dddd=s.cache(s.process(i.ctoken(\"sun mon tue wed thu fri sat\"),function(t){return function(){this.weekday=t}})),i.M=s.cache(s.process(s.rtoken(/^(1[0-2]|0\\d|\\d)/),r.month)),i.MM=s.cache(s.process(s.rtoken(/^(1[0-2]|0\\d)/),r.month)),i.MMM=i.MMMM=s.cache(s.process(i.ctoken(\"jan feb mar apr may jun jul aug sep oct nov dec\"),r.month)),i.y=s.cache(s.process(s.rtoken(/^(\\d\\d?)/),r.year)),i.yy=s.cache(s.process(s.rtoken(/^(\\d\\d)/),r.year)),i.yyy=s.cache(s.process(s.rtoken(/^(\\d\\d?\\d?\\d?)/),r.year)),i.yyyy=s.cache(s.process(s.rtoken(/^(\\d\\d\\d\\d)/),r.year)),n=function(){return s.each(s.any.apply(null,arguments),s.not(i.ctoken2(\"timeContext\")))},i.day=n(i.d,i.dd),i.month=n(i.M,i.MMM),i.year=n(i.yyyy,i.yy),i.orientation=s.process(i.ctoken(\"past future\"),function(t){return function(){this.orient=t}}),i.operator=s.process(i.ctoken(\"add subtract\"),function(t){return function(){this.operator=t}}),i.rday=s.process(i.ctoken(\"yesterday tomorrow today now\"),r.rday),i.unit=s.process(i.ctoken(\"second minute hour day week month year\"),function(t){return function(){this.unit=t}}),i.value=s.process(s.rtoken(/^\\d\\d?(st|nd|rd|th)?/),function(t){return function(){this.value=t.replace(/\\D/g,\"\")}}),i.expression=s.set([i.rday,i.operator,i.value,i.unit,i.orientation,i.ddd,i.MMM]),n=function(){return s.set(arguments,i.datePartDelimiter)},i.mdy=n(i.ddd,i.month,i.day,i.year),i.ymd=n(i.ddd,i.year,i.month,i.day),i.dmy=n(i.ddd,i.day,i.month,i.year),i.date=function(e){return(i[t.CultureInfo.dateElementOrder]||i.mdy).call(this,e)},i.format=s.process(s.many(s.any(s.process(s.rtoken(/^(dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|zz?z?|Z)/),function(e){if(i[e])return i[e];throw t.Parsing.Exception(e)}),s.process(s.rtoken(/^[^dMyhHmstz]+/),function(t){return s.ignore(s.stoken(t))}))),function(t){return s.process(s.each.apply(null,t),r.finishExact)});var a={},u=function(t){return a[t]=a[t]||i.format(t)[0]};i.formats=function(t){if(t instanceof Array){for(var e=[],n=0;n<t.length;n++)e.push(u(t[n]));return s.any.apply(null,e)}return u(t)},i._formats=i.formats(['\"yyyy-MM-ddTHH:mm:ssZ\"',\"yyyy-MM-ddTHH:mm:ssZ\",\"yyyy-MM-ddTHH:mm:ssz\",\"yyyy-MM-ddTHH:mm:ss\",\"yyyy-MM-ddTHH:mmZ\",\"yyyy-MM-ddTHH:mmz\",\"yyyy-MM-ddTHH:mm\",\"ddd, MMM dd, yyyy H:mm:ss tt\",\"ddd MMM d yyyy HH:mm:ss zzz\",\"MMddyyyy\",\"ddMMyyyy\",\"Mddyyyy\",\"ddMyyyy\",\"Mdyyyy\",\"dMyyyy\",\"yyyy\",\"Mdyy\",\"dMyy\",\"d\"]),i._start=s.process(s.set([i.date,i.time,i.expression],i.generalDelimiter,i.whiteSpace),r.finish),i.start=function(t){try{var e=i._formats.call({},t);if(0===e[1].length)return e}catch(t){}return i._start.call({},t)},t._parse=t.parse,t.parse=function(e){var n=null;if(!e)return null;if(e instanceof Date)return e;try{n=t.Grammar.start.call({},e.replace(/^\\s*(\\S*(\\s+\\S+)*)\\s*$/,\"$1\"))}catch(t){return null}return 0===n[1].length?n[0]:null},t.getParseFunction=function(e){var n=t.Grammar.formats(e);return function(t){var e=null;try{e=n.call({},t)}catch(t){return null}return 0===e[1].length?e[0]:null}},t.parseExact=function(e,n){return t.getParseFunction(n)(e)}}();/**\n * @version: 1.0 Alpha-1\n * @author: Coolite Inc. http://www.coolite.com/\n * @date: 2008-04-13\n * @copyright: Copyright (c) 2006-2008, Coolite Inc. (http://www.coolite.com/). All rights reserved.\n * @license: Licensed under The MIT License. See license.txt and http://www.datejs.com/license/. \n * @website: http://www.datejs.com/\n */\nvar TimeSpan=function(t,e,n,s,i){for(var r=\"days hours minutes seconds milliseconds\".split(/\\s+/),o=function(t){return function(){return this[t]}},a=function(t){return function(e){return this[t]=e,this}},u=0;u<r.length;u++){var h=r[u],c=h.slice(0,1).toUpperCase()+h.slice(1);TimeSpan.prototype[h]=0,TimeSpan.prototype[\"get\"+c]=o(h),TimeSpan.prototype[\"set\"+c]=a(h)}if(4==arguments.length)this.setDays(t),this.setHours(e),this.setMinutes(n),this.setSeconds(s);else if(5==arguments.length)this.setDays(t),this.setHours(e),this.setMinutes(n),this.setSeconds(s),this.setMilliseconds(i);else if(1==arguments.length&&\"number\"==typeof t){var l=t<0?-1:1;this.setMilliseconds(Math.abs(t)),this.setDays(Math.floor(this.getMilliseconds()/864e5)*l),this.setMilliseconds(this.getMilliseconds()%864e5),this.setHours(Math.floor(this.getMilliseconds()/36e5)*l),this.setMilliseconds(this.getMilliseconds()%36e5),this.setMinutes(Math.floor(this.getMilliseconds()/6e4)*l),this.setMilliseconds(this.getMilliseconds()%6e4),this.setSeconds(Math.floor(this.getMilliseconds()/1e3)*l),this.setMilliseconds(this.getMilliseconds()%1e3),this.setMilliseconds(this.getMilliseconds()*l)}return this.getTotalMilliseconds=function(){return 864e5*this.getDays()+36e5*this.getHours()+6e4*this.getMinutes()+1e3*this.getSeconds()},this.compareTo=function(t){var e,n=new Date(1970,1,1,this.getHours(),this.getMinutes(),this.getSeconds());return e=null===t?new Date(1970,1,1,0,0,0):new Date(1970,1,1,t.getHours(),t.getMinutes(),t.getSeconds()),n<e?-1:n>e?1:0},this.equals=function(t){return 0===this.compareTo(t)},this.add=function(t){return null===t?this:this.addSeconds(t.getTotalMilliseconds()/1e3)},this.subtract=function(t){return null===t?this:this.addSeconds(-t.getTotalMilliseconds()/1e3)},this.addDays=function(t){return new TimeSpan(this.getTotalMilliseconds()+864e5*t)},this.addHours=function(t){return new TimeSpan(this.getTotalMilliseconds()+36e5*t)},this.addMinutes=function(t){return new TimeSpan(this.getTotalMilliseconds()+6e4*t)},this.addSeconds=function(t){return new TimeSpan(this.getTotalMilliseconds()+1e3*t)},this.addMilliseconds=function(t){return new TimeSpan(this.getTotalMilliseconds()+t)},this.get12HourHour=function(){return this.getHours()>12?this.getHours()-12:0===this.getHours()?12:this.getHours()},this.getDesignator=function(){return this.getHours()<12?Date.CultureInfo.amDesignator:Date.CultureInfo.pmDesignator},this.toString=function(t){this._toString=function(){return null!==this.getDays()&&this.getDays()>0?this.getDays()+\".\"+this.getHours()+\":\"+this.p(this.getMinutes())+\":\"+this.p(this.getSeconds()):this.getHours()+\":\"+this.p(this.getMinutes())+\":\"+this.p(this.getSeconds())},this.p=function(t){return t.toString().length<2?\"0\"+t:t};var e=this;return t?t.replace(/dd?|HH?|hh?|mm?|ss?|tt?/g,function(t){switch(t){case\"d\":return e.getDays();case\"dd\":return e.p(e.getDays());case\"H\":return e.getHours();case\"HH\":return e.p(e.getHours());case\"h\":return e.get12HourHour();case\"hh\":return e.p(e.get12HourHour());case\"m\":return e.getMinutes();case\"mm\":return e.p(e.getMinutes());case\"s\":return e.getSeconds();case\"ss\":return e.p(e.getSeconds());case\"t\":return(e.getHours()<12?Date.CultureInfo.amDesignator:Date.CultureInfo.pmDesignator).substring(0,1);case\"tt\":return e.getHours()<12?Date.CultureInfo.amDesignator:Date.CultureInfo.pmDesignator}}):this._toString()},this};Date.prototype.getTimeOfDay=function(){return new TimeSpan(0,this.getHours(),this.getMinutes(),this.getSeconds(),this.getMilliseconds())};var TimePeriod=function(t,e,n,s,i,r,o){for(var a=\"years months days hours minutes seconds milliseconds\".split(/\\s+/),u=function(t){return function(){return this[t]}},h=function(t){return function(e){return this[t]=e,this}},c=0;c<a.length;c++){var l=a[c],d=l.slice(0,1).toUpperCase()+l.slice(1);TimePeriod.prototype[l]=0,TimePeriod.prototype[\"get\"+d]=u(l),TimePeriod.prototype[\"set\"+d]=h(l)}if(7==arguments.length)this.years=t,this.months=e,this.setDays(n),this.setHours(s),this.setMinutes(i),this.setSeconds(r),this.setMilliseconds(o);else if(2==arguments.length&&arguments[0]instanceof Date&&arguments[1]instanceof Date){var f=t.clone(),y=e.clone(),m=f.clone(),g=f>y?-1:1;if(this.years=y.getFullYear()-f.getFullYear(),m.addYears(this.years),1==g?m>y&&0!==this.years&&this.years--:m<y&&0!==this.years&&this.years++,f.addYears(this.years),1==g)for(;f<y&&f.clone().addDays(Date.getDaysInMonth(f.getYear(),f.getMonth()))<y;)f.addMonths(1),this.months++;else for(;f>y&&f.clone().addDays(-f.getDaysInMonth())>y;)f.addMonths(-1),this.months--;var M=y-f;if(0!==M){var p=new TimeSpan(M);this.setDays(p.getDays()),this.setHours(p.getHours()),this.setMinutes(p.getMinutes()),this.setSeconds(p.getSeconds()),this.setMilliseconds(p.getMilliseconds())}}return this};\n\n//# sourceURL=webpack://AOS/./lib/datejs/date-en.js?");

/***/ }),

/***/ "./lib/jss/jss.js":
/*!************************!*\
  !*** ./lib/jss/jss.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * @license\n * Copyright (c) 2016 Pumpco Inc.\n * JSS.js is distributed by PumpCo Inc.\n */\n!function(){var t=!1,e=function(){};t&&(e=function(t){console.log(\"Time:\"+t.time)});var s=function(t){function Jss(t){t=t||{},this._version=\"0.0.1\",this._analyitcs=t.analyitcs||function(){}}return Jss.OBJECT=3,Jss.ARRAY=2,Jss.PRIM=1,Jss.prototype={},Jss.prototype.timer=function(){var t=Date.now();return function(){this._analyitcs({time:Date.now()-t+\"ms\"})}.bind(this)},Jss.prototype.isA=function(t){return t instanceof Object?Array.isArray(t)?Jss.ARRAY:Jss.OBJECT:Jss.PRIM},Jss.prototype.query=function(t,e){},Jss.prototype.direct=function(t,e){var s=this.timer(),i=this.each(e,t);return s(),i},Jss.prototype.each=function(t,e){var s=void 0,i=e[0],n=!1,r=void 0,o=void 0;\">\"===i&&(e=e.slice(1,e.length),i=e[0],n=!0),\":return\"===i&&(e=e.slice(1,e.length),i=e[0],r=t);var a=void 0;if(e[0]&&e[0].indexOf(\"=\")>=0){var c=e[0].split(\"=\");i=c[0],a=c[1]}else if(e[0]&&e[0].indexOf(\":\")>=0){var c=e[0].split(\":\");i=c[0],a=c[1]}if(t.hasOwnProperty(i))\"parent\"===a&&(o=t),s=this.perItem(t,e,i,a);else if(\"*\"===i){for(var f in t)if(s=this.perItem(t,e,f,a))break}else if(!n)for(var f in t)if(s=this.perItem(t,e,f,a,!0))break;return s&&(r&&(s=r),o&&(s.parent=o)),s},Jss.prototype.perItem=function(t,e,s,i,n){var r=void 0,o=t[s],a=1;switch(n&&(a=0),this.isA(o)){case Jss.OBJECT:r=0===e.length?o:this.each(o,e.slice(a,e.length));break;case Jss.ARRAY:for(var c=0;c<o.length&&!(r=this.each(o[c],e.slice(a,e.length)));c++);break;default:i?o===i&&(r=o):r=void 0}return r},Jss.prototype.toString=function(){return\"Jss:\"+this._version},Jss};!function(t){var s=t({});if(true)!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports,__webpack_require__], __WEBPACK_AMD_DEFINE_FACTORY__ = (new s({analyitcs:e})),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else { var i; }}(s)}();\n\n//# sourceURL=webpack://AOS/./lib/jss/jss.js?");

/***/ }),

/***/ "./lib/polyfils/es6-array.js":
/*!***********************************!*\
  !*** ./lib/polyfils/es6-array.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n * Pump API and Application 2.0.0\n * Copyright(c) 2014 Pumpco Inc.\n * licensing@pumpco.co.uk\n * http://www.pumpco.co.uk/license\n */\n\n/*\n    Array \"find\" implementation, to allow modern Array usage mechanisms.\n    Due to be deprecated when all browsers support this.  \n    AMONIS\n */\n(function(){\n\n    if (!Array.prototype.find) {\n        Array.prototype.find = function(predicate) {\n            if (this === null) {\n                throw new TypeError('Array.prototype.find called on null or undefined');\n            }\n            if (typeof predicate !== 'function') {\n                throw new TypeError('predicate must be a function');\n            }\n            var list = Object(this);\n            var length = list.length >>> 0;\n            var thisArg = arguments[1];\n            var value;\n\n            for (var i = 0; i < length; i++) {\n                value = list[i];\n                if (predicate.call(thisArg, value, i, list)) {\n                    return value;\n                }\n            }\n\n            return undefined;\n        };\n    }\n\n})();\n\n\n//# sourceURL=webpack://AOS/./lib/polyfils/es6-array.js?");

/***/ }),

/***/ "./lib/polyfils/es6-assign.js":
/*!************************************!*\
  !*** ./lib/polyfils/es6-assign.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n * Pump API and Application 2.0.0\n * Copyright(c) 2014 Pumpco Inc.\n * licensing@pumpco.co.uk\n * http://www.pumpco.co.uk/license\n */\n\n/*\n    Object.assign\n    Polyfil for the assign operation\n    AMONIS\n */\nif (typeof Object.assign != 'function') {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, \"assign\", {\n    value: function assign(target, varArgs) { // .length of function is 2\n      'use strict';\n      if (target == null) { // TypeError if undefined or null\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    },\n    writable: true,\n    configurable: true\n  });\n}\n\n\n//# sourceURL=webpack://AOS/./lib/polyfils/es6-assign.js?");

/***/ }),

/***/ "./lib/polyfils/es6-collections.js":
/*!*****************************************!*\
  !*** ./lib/polyfils/es6-collections.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n * Pump API and Application 2.0.0\n * Copyright(c) 2014 Pumpco Inc.\n * licensing@pumpco.co.uk\n * http://www.pumpco.co.uk/license\n */\n\n/*\n\tTaken from\n\thttps://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills\n\tWeapMap, Map, Set implementation by\n\thttps://github.com/EliSnow/Blitz-Collections/blob/master/blitzCollections.js\n\tby EliSnow\n */\n\n(function () {\n\t\"use strict\";\n\tvar random = Math.random,\n\t\tunique = 0,\n\t\tglobalWMKey = \"gwm\" + random(),\n\t\tinternalKey = {},\n\t\thasOwnProp = Object.prototype.hasOwnProperty,\n\t\tdefineProperty = Object.defineProperty,\n\t\tdefineProperties = Object.defineProperties,\n\t\tenumFalse = {\n\t\t\tenumerable : false\n\t\t};\n\n\tfunction WeakMap () {\n\t\tif (this instanceof WeakMap) {\n\t\t\tdefineProperty(this, \"__wm__\", {\n\t\t\t\tvalue : {}\n\t\t\t});\n\t\t\tthis.clear();\n\t\t} else {\n\t\t\treturn new WeakMap;\n\t\t}\n\t}\n\n\tWeakMap.prototype = {\n\t\tclear : function () {\n\t\t\tvar wm = this.__wm__;\n\t\t\twm.key = \"c\" + random() + unique++;\n\t\t\twm.keys = [];\n\t\t\twm.values = [];\n\t\t},\n\t\tget : function (key) {\n\t\t\treturn weakMapHelper(this, key);\n\t\t},\n\t\tset : function (key, value) {\n\t\t\tvar i,\n\t\t\t\twm = this.__wm__,\n\t\t\t\tkeys = wm.keys,\n\t\t\t\tvalues = wm.values,\n\t\t\t\twmObj = getCollObj(key, 1);\n\t\t\tif (!wmObj) {\n\t\t\t\t\ti = keys.indexOf(key);\n\t\t\t\t\tif (i < 0) {\n\t\t\t\t\t\tkeys.push(key);\n\t\t\t\t\t\tvalues.push(value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twmObj[wm.key] = value;\n\t\t\t}\n\t\t},\n\t\thas : function (key) {\n\t\t\treturn weakMapHelper(this, key, internalKey) !== internalKey;\n\t\t},\n\t\tdelete : function (key) {\n\t\t\tvar i,\n\t\t\t\twm = this.__wm__,\n\t\t\t\tkeys = wm.keys,\n\t\t\t\twmObj = getCollObj(key);\n\t\t\tif (!wmObj) {\n\t\t\t\ti = keys.indexOf(key);\n\t\t\t\tif (i >= 0) {\n\t\t\t\t\tkeys.splice(i, 1);\n\t\t\t\t\twm.values.splice(i, 1);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else if (wmObj[wm.key]) {\n\t\t\t\tdelete wmObj[wm.key];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tdefineProperties(WeakMap.prototype, {\n\t\tclear : enumFalse,\n\t\tget : enumFalse,\n\t\tset : enumFalse,\n\t\thas : enumFalse,\n\t\tdelete : enumFalse\n\t});\n\n\tfunction weakMapHelper (wm, o, defaultValue) {\n\t\twm = wm.__wm__;\n\t\tvar i,\n\t\t\tkey = wm.key,\n\t\t\twmObj = getCollObj(o);\n\t\tif (!wmObj) {\n\t\t\ti = wm.keys.indexOf(o);\n\t\t\treturn i < 0\n\t\t\t\t? defaultValue\n\t\t\t\t: wm.values[i];\n\t\t}\n\t\treturn wmObj && key in wmObj\n\t\t\t? wmObj[key]\n\t\t\t: defaultValue;\n\t}\n\n\tfunction getCollObj (o, create) {\n\t\tvar get, _get, set, con,\n\t\t\tdesc = Object.getOwnPropertyDescriptor(o, \"constructor\");\n\t\tif (desc && hasOwnProp.call(desc, \"get\")) {\n\t\t\tget = _get = desc.get;\n\t\t\tset = desc.set;\n\t\t\tif (hasOwnProp.call(get, globalWMKey)) {\n\t\t\t\treturn get[globalWMKey];\n\t\t\t}\n\t\t}\n\t\tif (create && !(Object.isSealed(o) || (desc && !desc.configurable))) {\n\t\t\tif (get) {\n\t\t\t\tget = get.bind();\n\t\t\t\tObject.getOwnPropertyNames(_get).forEach(function (key) {\n\t\t\t\t\tget[key] = _get[key];\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcon = o.constructor;\n\t\t\t\tget = function () {\n\t\t\t\t\treturn con;\n\t\t\t\t};\n\t\t\t\tset = function (newCon) {\n\t\t\t\t\tcon = newCon;\n\t\t\t\t};\n\t\t\t}\n\t\t\tdefineProperty(o, \"constructor\", {\n\t\t\t\tget : get,\n\t\t\t\tset : set\n\t\t\t});\n\t\t\treturn get[globalWMKey] = Object.create(null);\n\t\t}\n\t}\n\n\tfunction Map () {\n\t\tif (this instanceof Map) {\n\t\t\tdefineProperty(this, \"__wm__\", {\n\t\t\t\tvalue : {}\n\t\t\t});\n\t\t\tthis.clear();\n\t\t} else {\n\t\t\treturn new Map;\n\t\t}\n\t}\n\n\tMap.prototype = {\n\t\tclear : function () {\n\t\t\tWeakMap.prototype.clear.call(this);\n\t\t\tvar wm = this.__wm__;\n\t\t\twm._keys = [];\n\t\t\twm._values = [];\n\t\t\twm.primitives = {};\n\t\t},\n\t\tget : function (key) {\n\t\t\tvar wm = this.__wm__;\n\t\t\treturn wm._values[mapGetHelper(this, wm, key)];\n\t\t},\n\t\tset : function (key, value) {\n\t\t\tvar wm = this.__wm__,\n\t\t\t\ti = mapGetHelper(this, wm, key);\n\t\t\tif (i == void 0) {\n\t\t\t\ti = wm._keys.push(key) - 1;\n\t\t\t\tmapSetHelper(this, wm, key, i);\n\t\t\t}\n\t\t\twm._values[i] = value;\n\n\t\t},\n\t\thas : function (key) {\n\t\t\treturn mapGetHelper(this, this.__wm__, key) != void 0;\n\t\t},\n\t\tdelete : function (key) {\n\t\t\tvar wm = this.__wm__,\n\t\t\t\ti = mapGetHelper(this, wm, key);\n\t\t\tif (i != void 0) {\n\t\t\t\tmapSetHelper(this, wm, key, undefined);\n\t\t\t\tdelete wm._keys[i];\n\t\t\t\tdelete wm._values[i];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tforEach : function (callback, thisArg) {\n\t\t\tvar wm = this.__wm__;\n\t\t\twm._keys.forEach(function (key, i) {\n\t\t\t\tcallback.call(thisArg, wm._values[i], key, this);\n\t\t\t}, this);\n\t\t},\n\t\tget size () {\n\t\t\treturn Object.keys(this.__wm__._keys).length;\n\t\t}\n\t};\n\n\tfunction mapGetHelper (that, wm, key) {\n\t\t\tif (Object(key) !== key) { //primitive\n\t\t\t\treturn (1 / key == -Infinity ? wm : wm.primitives)[key];\n\t\t\t}\n\t\t\treturn WeakMap.prototype.get.call(that, key);\n\t}\n\n\tfunction mapSetHelper (that, wm, key, i) {\n\t\t\tif (Object(key) !== key) { //primitive\n\t\t\t\treturn (1 / key == -Infinity ? wm : wm.primitives)[key] = i;\n\t\t\t}\n\t\t\treturn WeakMap.prototype.set.call(that, key, i);\n\t}\n\n\tdefineProperties(Map.prototype, {\n\t\tclear : enumFalse,\n\t\tget : enumFalse,\n\t\tset : enumFalse,\n\t\thas : enumFalse,\n\t\tdelete : enumFalse,\n\t\tforEach : enumFalse,\n\t\tsize : enumFalse\n\t});\n\n\tfunction Set () {\n\t\tif (this instanceof Set) {\n\t\t\tdefineProperty(this, \"__wm__\", {\n\t\t\t\tvalue : {}\n\t\t\t});\n\t\t\tthis.clear();\n\t\t} else {\n\t\t\treturn new Set;\n\t\t}\n\t}\n\n\tSet.prototype = {\n\t\tadd : function (item) {\n\t\t\tvar wm = this.__wm__,\n\t\t\t\tmap = this.__wm__.map;\n\t\t\tif (!map.has(item)) {\n\t\t\t\tmap.set(item, wm.values.push(item) - 1);\n\t\t\t}\n\t\t},\n\t\tdelete : function (item) {\n\t\t\tvar wm = this.__wm__,\n\t\t\t\tmap = this.__wm__.map,\n\t\t\t\ti = map.get(item);\n\t\t\tif (i >= 0) {\n\t\t\t\tmap.delete(item);\n\t\t\t\twm.values.splice(i, 1);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\thas : function (item) {\n\t\t\treturn this.__wm__.map.has(item);\n\t\t},\n\t\tclear : function () {\n\t\t\tvar wm = this.__wm__;\n\t\t\twm.values = [];\n\t\t\twm.map = new Map;\n\t\t},\n\t\tforEach : function (callback, thisArg) {\n\t\t\tvar i = 0,\n\t\t\t\tvalues = this.__wm__.values;\n\t\t\twhile (i < values.length) {\n\t\t\t\tcallback.call(thisArg, values[i++], this);\n\t\t\t}\n\t\t},\n\t\tget size () {\n\t\t\treturn this.__wm__.values.length;\n\t\t}\n\t};\n\n\tdefineProperties(Set.prototype, {\n\t\tclear : enumFalse,\n\t\tadd : enumFalse,\n\t\thas : enumFalse,\n\t\tdelete : enumFalse,\n\t\tforEach : enumFalse,\n\t\tsize : enumFalse\n\t});\n\n    var env = this || window;\n\n    env[ \"WeakMap\" ] = env[ \"WeakMap\" ] || WeakMap.bind();\n    env[ \"Map\" ]     = env[ \"Map\" ] || Map.bind();\n    env[ \"Set\" ]     = env[ \"Set\" ] || Set.bind();\n})();\n\n\n//# sourceURL=webpack://AOS/./lib/polyfils/es6-collections.js?");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/apps/appbuilder/builder.html":
/*!*********************************************************************!*\
  !*** ./node_modules/text-loader!./src/apps/appbuilder/builder.html ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\r\\n\\tBuilder HTML. Implements the UI interface for the Builder App.\\r\\n-->\\r\\n<style>\\r\\n\\tbody { background-color: rgba(0,0,0,0.03); }\\r\\n\\t.builder-controls { position:fixed; z-index:1000; height:100%; width:45px; background-color:#333; left:0; vertical-align:top; }\\r\\n\\t.space { background-color:rgba(255,255,255,0.5); }\\r\\n\\t.builder-padding { padding-left:45px; }\\r\\n</style>\\r\\n<div data-bind=\\\"css:{'concealed':$data.hideControls}\\\" class=\\\"builder-controls\\\">\\r\\n\\t<!-- <button data-bind=\\\"click:$data.onStart\\\">Start</button> -->\\r\\n\\t<!-- <p data-bind=\\\"html:ko.toJSON( $data )\\\"></p> -->\\r\\n\\t<button data-bind=\\\"button:$data.start\\\" class=\\\"btn btn-link height2 widthauto\\\"></button>\\r\\n</div>\\r\\n\"\n\n//# sourceURL=webpack://AOS/./src/apps/appbuilder/builder.html?./node_modules/text-loader");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./views/header.html":
/*!******************************************************!*\
  !*** ./node_modules/text-loader!./views/header.html ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!-- HEADER -->\\r\\n\\r\\n<!-- ko if:$root.header().oVisible -->\\r\\n\\t<!-- ko with:$root.header -->\\r\\n\\t<div data-bind=\\\"header:$data, css:$data.status, css:{'concealed':$root.places().length<1}\\\" class=\\\"header concealed\\\">\\r\\n\\r\\n\\t\\t\\t<!--\\r\\n\\t\\t\\t\\tLEFT Panel\\r\\n\\t\\t\\t-->\\r\\n\\t\\t\\t<!-- <div class=\\\"span width3-nopad align-left\\\" style=\\\"min-width:80px;\\\"> -->\\r\\n\\t\\t\\t<!-- <div class=\\\"span left align-left\\\" style=\\\"min-width:80px;\\\"> -->\\r\\n\\t\\t\\t<div class=\\\"header-left\\\">\\r\\n\\t\\t\\t\\t<!-- Back Button -->\\r\\n\\t\\t\\t\\t<div class=\\\"header-left-back\\\">\\r\\n\\t\\t\\t\\t<!-- ko with:$root.header -->\\r\\n\\t\\t\\t\\t\\t<!-- ko with:$data.breadcrumb -->\\r\\n\\t\\t\\t\\t\\t\\t<!-- ko with:$data[$data.length-2] -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<button name=\\\"back\\\" class=\\\"btn btn-background btn-breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ico-ios7 ico-back\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t\\t<!-- ko if:$data.length<=1 -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<button name=\\\"back\\\" disabled class=\\\"btn btn-background\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ico-ios7 ico-back-inv\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t<!-- /ko-->\\r\\n\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<!-- User Picture -->\\r\\n\\t\\t\\t\\t<div class=\\\"header-left-you\\\">\\r\\n\\t\\t\\t\\t\\t<button data-bind=\\\"style:{'backgroundColor': true ? '' + $data.initialsColour() : '#ffffff' }\\\" id=\\\"header-user\\\" name=\\\"yourpicture\\\" class=\\\"btn btn-background btn-yourpicture\\\" tabindex=\\\"0\\\" style=\\\"line-height:48px;\\\">\\r\\n\\t\\t\\t\\t\\t\\t<img data-bind=\\\"attr:{src:$data.icon}, css:{'concealed':$data.initials()!==''}\\\" class=\\\"concealed\\\" style=\\\"width:40px; height:42px; margin:0;vertical-align:top;\\\"></img>\\r\\n\\t\\t\\t\\t\\t\\t<p data-bind=\\\"html:$data.initials, css:{'concealed':$data.initials()==''}\\\" class=\\\"concealed font12\\\">AM</p>\\r\\n\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<!-- Place Icon -->\\r\\n\\t\\t\\t\\t<div class=\\\"header-left-place\\\">\\r\\n\\t\\t\\t\\t\\t<!-- ko if:$data.placeIcon -->\\r\\n\\t\\t\\t\\t\\t<button data-bind=\\\"style:{'backgroundColor': true ? '' + $data.placeInitialsColour() : '#ffffff' }\\\" id=\\\"header-user\\\" name=\\\"yourpicture\\\" class=\\\"btn btn-background btn-placepicture\\\" tabindex=\\\"1\\\">\\r\\n\\t\\t\\t\\t\\t\\t<img data-bind=\\\"attr:{src:$data.placeIcon}, css:{'concealed':$data.placeInitials()!==''}\\\" class=\\\"concealed\\\" style=\\\"width:32px; height:32px; margin: 0px 0px;\\\" class=\\\"ico-ios7\\\"></img>\\r\\n\\t\\t\\t\\t\\t\\t<p data-bind=\\\"html:$data.placeInitials, css:{'concealed':$data.placeInitials()==''}\\\" class=\\\"concealed font10\\\"></p>\\r\\n\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<!--\\r\\n\\t\\t\\t\\tCENTRE Panel\\r\\n\\t\\t\\t-->\\r\\n\\t\\t\\t<!-- <div class=\\\"span width5-nopad\\\"> -->\\r\\n\\t\\t\\t<div class=\\\"header-centre\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"header-console\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<div data-bind=\\\"css:{'expanded':$data.consoleExpanded()}\\\" class=\\\"header-console-inner\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- Place Message -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<p data-bind=\\\"html:$data.placeMessage\\\" class=\\\"header-console-placemessage font10\\\"></p>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"font8\\\">recently visited</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div data-bind=\\\"foreach:$data.breadcrumbPlaces.array\\\" class=\\\"flex-row flex-wrap\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button data-bind=\\\"click:$parent.breadcrumbPlacesFn,text:$data.label\\\" class=\\\"btn btn-link font8\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"header-shortcuts desktop\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<!-- Contacts -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"header-shortcuts-contacts\\\">\\r\\n\\t\\t\\t\\t\\t\\t<button name=\\\"contacts\\\" class=\\\"btn btn-background btn-contacts\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ico-ios7 ico-contacts\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<!-- Notifications -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"header-shortcuts-notifications\\\" >\\r\\n\\t\\t\\t\\t\\t\\t<button name=\\\"notifications\\\" class=\\\"btn btn-background btn-notifications\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label data-bind=\\\"css:{'concealed':$data.notifications.count()<=0}, html:$data.notifications.count()\\\" class=\\\"lbl lbl-ball is-small is-error\\\"></label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ico-ios7 ico-flags\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<!-- Settings -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"header-shortcuts-settings\\\">\\r\\n\\t\\t\\t\\t\\t\\t<button name=\\\"settings\\\" class=\\\"btn btn-background btn-settings\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ico-ios7 ico-settings\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<!-- Help -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"header-shortcuts-help\\\">\\r\\n\\t\\t\\t\\t\\t\\t<button name=\\\"help\\\" class=\\\"btn btn-background btn-help\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"ico-ios7 ico-info\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t<!--\\r\\n\\t\\t\\t\\tRIGHT Panel\\r\\n\\t\\t\\t-->\\r\\n\\t\\t\\t<!-- <div class=\\\"span width2-nopad align-right\\\" style=\\\"\\\"> -->\\r\\n\\t\\t\\t<div class=\\\"header-right\\\">\\r\\n\\t\\t\\t\\t<!-- Flags -->\\r\\n\\t\\t\\t\\t<div class=\\\"header-small-flags phone\\\">\\r\\n\\t\\t\\t\\t\\t<div data-bind=\\\"css:{'new-notifications':$data.notifications.count()>0}\\\" class=\\\"ico-ios16 ico-flags\\\"></div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"\\\"><!-- Flags --></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<!-- More actions menu -->\\r\\n\\t\\t\\t\\t<div data-bind=\\\"buttonmenu:$data.actions\\\" class=\\\"header-more\\\">\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-background\\\"></button>\\r\\n\\t\\t\\t\\t\\t<ul class=\\\"menu menu-dropdown\\\" tabindex=\\\"99\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li><button data-bind=\\\"button:$data\\\" type=\\\"button\\\" class=\\\"btn btn-link\\\"></button></li>\\r\\n\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t</div>\\r\\n\\t<!-- /ko -->\\r\\n<!-- /ko -->\\r\\n\"\n\n//# sourceURL=webpack://AOS/./views/header.html?./node_modules/text-loader");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./views/main.html":
/*!****************************************************!*\
  !*** ./node_modules/text-loader!./views/main.html ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"\\r\\n<!-- Base Card - used as a fallback for all card rendering -->\\r\\n<script type=\\\"text/html\\\" id=\\\"card-default\\\">\\r\\n\\t<div class=\\\"span span1\\\">\\r\\n\\t\\t<p class=\\\"p width8 height2 text-clip\\\">Base Card</p>\\r\\n\\t</div>\\r\\n</script>\\r\\n\\r\\n<!-- HEADER -->\\r\\n<div id=\\\"insert-template-header\\\"></div>\\r\\n\\r\\n<!-- MASK -->\\r\\n<div id=\\\"mask\\\" class=\\\"concealed\\\" style=\\\"position:absolute;z-order:100;background-color:rgba(0,0,0,0.5);height:100%;width:100%;\\\"></div>\\r\\n\\r\\n<!-- TOAST -->\\r\\n<!-- Template for Toast-Message -->\\r\\n<script type=\\\"text/html\\\" id=\\\"toast-message\\\">\\r\\n\\t<div data-bind=\\\"css:{'removing':!$data.visible()}\\\" class=\\\"toast span2\\\" style=\\\"padding:2px 0px;\\\">\\r\\n\\t\\t<p data-bind=\\\"html:$data.msg\\\"></p>\\r\\n\\t\\t<div class=\\\"toast-btns\\\">\\r\\n\\t\\t\\t<!-- ko if:$data.auto===false -->\\r\\n\\t\\t\\t\\t<!-- ko if:$data.btnCancel -->\\r\\n\\t\\t\\t\\t\\t<button data-bind=\\\"click:$data.btnCancel\\\" class=\\\"btn is-error\\\">cancel</button>\\r\\n\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t<button data-bind=\\\"click:$data.btnOk\\\" class=\\\"btn is-success\\\">ok</button>\\r\\n\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</script>\\r\\n<div id=\\\"toast\\\" data-bind=\\\"toast:$data.toast\\\"></div>\\r\\n\\r\\n<!-- LOADERBAR -->\\r\\n<div data-bind=\\\"loader:$data.loader\\\" class=\\\"loaderbar\\\"></div>\\r\\n\\r\\n<!-- MAIN site i.e. main web flow content -->\\r\\n<div class=\\\"centralise\\\" >\\r\\n\\t<!-- PLACES -->\\r\\n\\t<!-- ko foreach:$data.places -->\\r\\n\\t\\t<div data-bind=\\\"place:$data\\\">\\r\\n\\r\\n\\t\\t\\t<!-- AMONIS: 21/08/2015: Removed old ( incorrect ) header references, as the purpose has moved to the header console -->\\r\\n\\r\\n\\t\\t\\t<!-- SPACES -->\\r\\n\\t\\t\\t<!-- ko foreach:$root.getSpaces( $data.id ) -->\\r\\n\\t\\t\\t\\t<div data-bind=\\\"space:$data\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<!-- COGS -->\\r\\n\\t\\t\\t\\t\\t<!-- ko foreach:$root.getCogs( $data.id ) -->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div data-bind=\\\"cog:$data\\\"></div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t<!-- /ko -->\\r\\n\\r\\n\\t\\t</div>\\r\\n\\t<!-- /ko -->\\r\\n\\r\\n\\t<!-- SnackBar -->\\r\\n\\t<script type=\\\"text/html\\\" id=\\\"snackbar-template\\\">\\r\\n\\t\\t<p data-bind=\\\"html:$data.msg\\\"></p>\\r\\n\\t</script>\\r\\n\\t<div data-bind=\\\"snackbar:$data.snackBar\\\" class=\\\"snackbar concealed\\\"></div>\\r\\n</div>\\r\\n\"\n\n//# sourceURL=webpack://AOS/./views/main.html?./node_modules/text-loader");

/***/ }),

/***/ "./src/aos.config.js":
/*!***************************!*\
  !*** ./src/aos.config.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n    Feature Switches\n    Maps a User Spec into a Bean, please refer to user-profile-get-response for structure\n    @author Andy Monis\n    @date   09/07/2014\n*/\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n    var aos_config = {\n      // Goblal Switches are used by the platform to enable / disable functionality\n      switches: {\n        // Settings\n        coreIoPulseGapTimeout: 60000 * 60,\n        // Config\n        useBrowserNotifications: true,\n        useAppBuilder: false\n      },\n      // Domain Switches\n      domain: {\n        \"dev.cnect.to\": {\n          useAppBuilder: true\n        },\n        \"pumpco.cnect.to\": {}\n      },\n      // Libraries are referenced by the Cog Loader ( services/cog.js/#363 )\n      libraries: {\n        \"test\": \"test.js\",\n        \"jquery.scrollto\": \"node_modules/jquery.scrollintoview/jquery.scrollintoview.js\",\n        // Graphing\n        \"d3\": \"node_modules/d3/d3.min.js\",\n        \"graphing\": \"node_modules/d3/d3.min.js\",\n        // UI Model / state\n        \"redux\": \"node_modules/redux/dist/redux.js\"\n      }\n    };\n\n    /**\n     * ### get\n     * gets a switch value\n     * @param  {[type]} name\n     * @param  {[type]} domain\n     * @return {[type]}        [description]\n     */\n    aos_config.getSwitch = function(name, domain) {\n      var result = undefined;\n      // try global switches\n      result = this.switches[name];\n      // try domain switches overrides\n      if (domain && this.domain[domain]) {\n        result = this.domain[domain][name];\n      }\n      // return result\n      return result;\n    };\n\n    /**\n     * getLibraryPath\n     * Provides a full library path for a short name reference\n     * Usually from resources.json\n     * @param  {[type]} name\n     * @return {[type]}      [description]\n     */\n    aos_config.getLibraryPath = function(name) {\n      var result = undefined;\n      // try global switches\n      result = this.libraries[name.toLowerCase()];\n      // return result\n      return result;\n    };\n\n    return aos_config;\n  }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/aos.config.js?");

/***/ }),

/***/ "./src/aos.utils.js":
/*!**************************!*\
  !*** ./src/aos.utils.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n    Boot utilites used mainly by live.js\n    @author Andy Monis\n    @date   20/04/2018\n*/\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! utils/params */ \"./src/utils/params.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( Params, Log ) {\n        var setup = {};\n\n        /**\n         * basicAppStyles\n         * HTML Scaffold ( Inject body html as soon as possible )\n         * @param  {[type]} name\n         * @return {[type]}      [description]\n         */\n        setup.basicAppStyles = function( html, appParams ){\n            // Get the document body ( after load )\n            var el = document.body;\n            // Inject 'main.html' template into the body\n            el.innerHTML = html;\n            // Set two default styles for background placement\n            el.setAttribute( 'data-bind', 'body:$data' );\n            el.setAttribute( 'style', 'background-attachment:fixed;' );\n        };\n\n        /**\n         * ### queryAppParams\n         * @param  {[type]} startupParams [description]\n         * @return {[type]}               [description]\n         */\n        setup.queryAppParams = function(){\n            var res = {};\n\n            var startupParams = window.params || {};\n\n            // AMONIS: 15/03/2018: All responsive now, so no Desktop / Mobile sites anymore.\n            res.platform = \"Desktop\";\n\n            // **param** useSocket {boolean} &socket=false disables websocket(default) and uses xhr\n            res.useSocket = Params.getParam( \"socket\", startupParams, true );\n\n            // **param** cogDebug {string} &cog=<cogname> command line parameter. sets the cog to debug ( cogname can be found by sniffing the DOM )\n            res.cogDebug = Params.getParam( \"cog\", startupParams, true );\n\n            // **param** appParams {string} &app=<appname> sets which app manifest to load\n            res.appParams = Params.getParam( \"app\", startupParams, undefined  );\n\n            // **param** driveParams {string} &drive=prefer sets the drive cache to prefer caching\n            res.driveParams = Params.getParam( \"drive\", startupParams, undefined );\n\n            // **param** buildParams {string} &build=0.1 overwrites the build version ( which is useful to clear the cache for native app / pwa )\n            res.buildParams = Params.getParam( \"build\", startupParams, \"0.1\"  );\n\n            // **param** wrappedParams {booeal} &wrapped=true used to force app to be in cordova 'wrapped' mode\n            res.wrappedParams = Params.getParam( \"wrapped\", startupParams, undefined );\n\n            // **param** pwaParams {booeal} &pwa=true used to infoem that the mode is pwa\n            res.pwaParams = Params.getParam( \"pwa\", startupParams, undefined );\n\n            // **param** minimalParams {booeal} &minimal=true used to force app to stop using minimal\n            res.minimalParams = Params.getParam( \"minimal\", startupParams, true );\n\n            // **param** launchParams {booeal} &launch=gaia.convCentre navigates directly to space and loads full screen\n            res.launchParams = Params.getParam( \"launch\", startupParams, undefined );\n\n            // **param** roadieParams {boolean} &roadieUrl=visit/cog/571e3e3bb014b446cf94c89a/571e3e3bb014b446cf94c89d/571e3e3bb014b446cf94c8a2/571e3e3eb014b446cf94c8f8\n            res.roadieParams = Params.getParam( \"roadieUrl\", startupParams, undefined );\n\n            // **param** consoleParams {boolean} &console=true enables the console interface\n            res.consoleParams = Params.getParam( \"console\", startupParams, undefined );\n\n            // **param** debugParams {boolean} &debug=true uses the debug files and works with continuous build\n            res.debugParams = Params.getParam( \"debug\", startupParams, undefined );\n\n            // **param** logConfig {number}&log=1|2|3|4 command line parameter. sets the logging to higher.\n            res.logConfig = Params.getParam( \"log\", startupParams, 0 );\n\n            // **param** location {json} A collection of location information\n            res.location = Params.getLocation( window.params );\n\n            return res;\n        };\n\n        /**\n         * ### configureLogging\n         * @param  {[type]} logConfig [description]\n         * @return {[type]}           [description]\n         */\n        setup.configureLogging = function( logConfig ){\n            //\n            var logger = { level:parseInt( logConfig ) || 0, ns:\"\" };\n            // AMONIS: 13/10/2016:: Set log Level and Namespace via the url params\n            if( logConfig && logConfig.indexOf( \"|\" ) > -1 ){\n            \t// support new method log=4|system.navigationCog\n            \tvar values = logConfig.split( \"|\" );\n            \tlogger.level = values[ 0 ];\n            \tlogger.ns    = values[ 1 ];\n            }\n\n            // camelet.Log.setLevel(0);\t// Set the Camelet ( Routing ) logging to 0\n            Log.level( logger.level );\t// Set the main logging to 0 or param.log\n            Log.namespace( logger.ns );\t// Set the NameSpace to only include\n\n            // Set all references to the.log to the new OS2 Require Logger.\n            the.log.debug     = Log.debug.bind( Log );\n            the.log.error     = Log.error.bind( Log );\n            the.log.warning   = Log.warning.bind( Log );\n            the.log.info      = Log.info.bind( Log );\n            the.log.emergency = Log.emergency.bind( Log );\n            // AMONIS: 13/10/2016: Implement namespace only logging. The cogs provide a namespace by default. ( fixture name )\n            the.log.just \t  = Log.namespace.bind( Log );\n        };\n\n        /**\n         * ### configurePhil\n         * @param  {[type]} phil [description]\n         * @return {[type]}      [description]\n         */\n        setup.configurePhil = function( location ){\n            // 02/06/2017: Set the basepath in Phil ( used for templating correctly )\n            // 15/03/2018: This should be done using Knockout Components, then we won't need to\n            // worry about paths. Also MLD need to configure everything has disappeared.\n            // WARNING: phil is a (legacy) global property\n            phil._paths[ \"phil\" ] \t\t= location.pumpface + \"templates/phil\";\n            phil._paths[ \"aos\" ] \t\t= location.pumpface + \"templates/aos\";\n            phil._paths[ \"fixture\" ] \t= location.fixtures;\n        };\n\n        /**\n         * ###\n         * @return {[type]} [description]\n         */\n        setup.serviceWorkers = function(){\n          if('serviceWorker' in navigator) {\n            navigator.serviceWorker\n              .register('/sw.js')\n              .then(function() {\n                console.log(\"Service Worker Registered\");\n              });\n          }\n        };\n\n        return setup;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/aos.utils.js?");

/***/ }),

/***/ "./src/apps/app.js":
/*!*************************!*\
  !*** ./src/apps/app.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n * Copyright(c) 2015 Pumpco Inc.\r\n */\r\n\r\n/* # apps.App\r\n * ## _A base App which is extended to create PFOS Apps_\r\n * Cannot be created independently. Must be extended as part of a bigger App.\r\n * Sets up some of the basic properties that an App will have access to.\r\n *\r\n * ####Usage in Kernel App config:\r\n *\r\n * ```js\r\n *     \"apps\"       : [\r\n *         { \"cls\":ClassName, \"params\":{ Optional Params as JSON } }\r\n *         ...\r\n *     ]\r\n * ```\r\n *\r\n */\r\n\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! utils/log */ \"./src/utils/log.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( log ){\r\n\r\n        /**\r\n         * ## App\r\n         * A base object for constructing PFOS Apps from.\r\n         * @param {object} config Object containing all options '{ kernel, model, pump }'\r\n         */\r\n        function App ( params ) {\r\n            // @property name.      {override this}\r\n            this.name    = \"baseApp\";\r\n\r\n            // @property html stores the html property for the App. This is used to render the UI via the binding.\r\n            this.html    = \"<div>override me</div>\";\r\n\r\n            // @property kernel: Internal pointer to the kernel for OS level talkback & events.\r\n            this._kernel  = params.kernel || undefined;\r\n\r\n            // @property model: Internal pointer to the model to add Service model requirements to in oganised manner.\r\n            this.model   = {};\r\n\r\n            // @property pump: Internal pointer to the pump to allow pulsing and routing.\r\n            this._pump    = params.pump || undefined;\r\n\r\n            // Add the console API for controlling cogs\r\n            this.createAPI();\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        App.prototype = {};\r\n\r\n\r\n        /**\r\n         * ###createAPI\r\n         * AMONIS: 16/08/2016: Needs to be broken out of here\r\n         * The cogs are booted in the Developer App with the hardcoded ID of 00001, which allows\r\n         * them to be targeted easily.\r\n         */\r\n        App.prototype.createAPI = function(){\r\n            window[ \"set\" ] = {\r\n                \"permission\": {\r\n                    \"none\":         function(){ window[ \"00001\" ].attrs.permission.level = \"none\"; },\r\n                    \"subscribe\":    function(){ window[ \"00001\" ].attrs.permission.level = \"subscribe\"; },\r\n                    \"visit\":        function(){ window[ \"00001\" ].attrs.permission.level = \"visit\"; },\r\n                    \"comment\":      function(){ window[ \"00001\" ].attrs.permission.level = \"comment\"; },\r\n                    \"edit\":         function(){ window[ \"00001\" ].attrs.permission.level = \"edit\"; },\r\n                    \"proxy\":        function(){ window[ \"00001\" ].attrs.permission.level = \"proxy\"; },\r\n                    \"owner\":        function(){ window[ \"00001\" ].attrs.permission.level = \"owner\"; }\r\n                }\r\n            };\r\n\r\n        };\r\n\r\n\r\n        /**\r\n         * ## toString\r\n         * @return {string} the name of this object\r\n         */\r\n        App.prototype.toString = function(){\r\n            // if name == baseApp then the App has not correctly overridden the name and may fail.\r\n            return this.name;\r\n        };\r\n\r\n        return App;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/apps/app.js?");

/***/ }),

/***/ "./src/apps/appbuilder/appconfig.js":
/*!******************************************!*\
  !*** ./src/apps/appbuilder/appconfig.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n * Copyright(c) 2015 Pumpco Inc.\r\n */\r\n\r\n /**\r\n * # apps.appbuilder.builder\r\n * ## _A static App Builder for creating Apps in PFOS_\r\n * Runs a single instance of an App in a Designer window, using all of the regular PFOS insfratructure. This allows an App\r\n * to be designed and built locally, without having to rely on PumpHouse and also in a static manner.\r\n * Incorporates a simple testing mechanism that can send messages to the App to simulate events etc.\r\n *\r\n * ####Usage in Kernel App config:\r\n *\r\n * ```js\r\n *     { \"cls\":Builder,     \"params\":{} }\r\n * ```\r\n *\r\n */\r\n\r\n// IS THIS USED???\r\n// AMONIS:04/03/2014: Yes it is, and needs to match appmap.js config\r\n\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){\r\n\r\n        /**\r\n         * PATHS allows specific mappings to be applied for each organisation.\r\n         * Add a new path in here for an organisation if created.\r\n         */\r\n        var PATHS = {\r\n        \t\"test\":            \"../pumpfacesystem/fixtures\",\r\n            \"system\": \t\t   \"/Os/fixtures\",\r\n        \t\"myhealthtag\": \t   \"../pumpfacesystem/Hydra/fixtures\",\r\n            \"mylifedigital\":   \"../pumpfacesystem/Hydra/fixtures\",\r\n            \"rugby\":           \"../pumpfacesystem/Hydra/fixtures\",\r\n            \"sharedwell\":      \"../pumpfacesystem/Hydra/fixtures\",\r\n            \"trialbee\":        \"../pumpfacesystem/Hydra/fixtures\",\r\n            \"healthsolutions\": \"../healthsolutions/fixtures\"\r\n        };\r\n\r\n        /**\r\n         * ###resolve\r\n         * e.g. \"/system/navigationCog/main.js\"\r\n         * @param {JSON} path [description]\r\n         * @return {JSON}      [description]\r\n         */\r\n        function resolve( path ){\r\n            var fullPath = \"\";\r\n\r\n            if( !path )\r\n                return fullPath;\r\n\r\n            var re = /[\\/]*([\\w]*)(.*)/;\r\n\r\n            // ignore leading /\r\n            var base = path.split( \"/\" );\r\n            var match = re.exec( path );\r\n\r\n            if( match.length > 2 ){\r\n                var path = PATHS[ match[ 1 ] ];\r\n\r\n                fullPath = path + match[ 0 ];\r\n            }\r\n\r\n            return fullPath;\r\n        };\r\n\r\n        /**\r\n         * ###AppConfig\r\n         * @params resources {JSON} the resources file for the cog as a json object\r\n         */\r\n        function AppConfig( name, resources ) {\r\n            // Attempt to build path dyanimcally\r\n            var localpath = name.replace( \".\", \"/\" );\r\n\r\n            var pathParts = name.split( \".\" );\r\n            var basePath = PATHS[ pathParts[ 0 ] ];\r\n\r\n            var fullPath = undefined;\r\n            if( basePath ){\r\n                fullPath = basePath + \"/\" + localpath;\r\n            }\r\n\r\n            // **html** {string}\r\n            // this.html       = resources.html ? basePath + resources.html : \"\";\r\n            this.html = resolve( resources.html );\r\n            // **js** {string} or [strings]\r\n            if( !the.isArray( resources.script ) ){\r\n                // Simple String\r\n                // this.js     = resources.script ? basePath + resources.script : \"\";\r\n                this.js = resolve( resources.script );\r\n            } else {\r\n                // Array of Strings\r\n                this.js     = [];\r\n                // var re = /[\\/]*([\\w]*)(.*)/;\r\n\r\n                for( var i=0; i<resources.script.length; i++ ){\r\n                \t// var scr = resources.script[ i ];\r\n                    //\r\n                \t// var match = re.exec( scr );\r\n                    //\r\n                \t// var path = PATHS[ match[ 1 ] ];\r\n                    //\r\n                    // // this.js.push( basePath + resources.script[ i ] );\r\n                    // console.log( \"V1: \" + basePath + resources.script[ i ] );\r\n                    // console.log( \"V2: \" + path + match[ 0 ]);\r\n\r\n                    this.js.push( resolve( resources.script[ i ] ) );\r\n                    // this.js.push( path + match[ 0 ] );\r\n                }\r\n            }\r\n\r\n            // **css** {string}\r\n            // this.css        = resources.style ? basePath + resources.style : \"\";\r\n            this.css = resolve( resources.style );\r\n            // **lang** {string}\r\n            // this.lang       = resources.lang ? basePath + resources.lang : \"\";\r\n            this.lang = resolve( resources.lang );\r\n\r\n            // **responses** {string}\r\n            this.responses  = fullPath + \"/test/responses.js\";\r\n            // **resources** {object} the data used here. Important to reset this, as the loader re-requests the files.\r\n            this.resources  = fullPath + \"/resources.json\";\r\n            this.capability = resources.capability;\r\n        };\r\n\r\n        AppConfig.prototype = {};\r\n\r\n        AppConfig.getPathFor = function( name ){\r\n            var pathParts = name.split( \".\" );\r\n            return PATHS[ pathParts[ 0 ] ];\r\n        };\r\n\r\n        return AppConfig;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\r\n\n\n//# sourceURL=webpack://AOS/./src/apps/appbuilder/appconfig.js?");

/***/ }),

/***/ "./src/apps/appbuilder/appmap.js":
/*!***************************************!*\
  !*** ./src/apps/appbuilder/appmap.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n * Copyright(c) 2015 Pumpco Inc.\r\n */\r\n\r\n /**\r\n * # apps.appbuilder.builder\r\n * ## _A static App Builder for creating Apps in PFOS_\r\n * Runs a single instance of an App in a Designer window, using all of the regular PFOS insfratructure. This allows an App\r\n * to be designed and built locally, without having to rely on PumpHouse and also in a static manner.\r\n * Incorporates a simple testing mechanism that can send messages to the App to simulate events etc.\r\n *\r\n * ####Usage in Kernel App config:\r\n *\r\n * ```js\r\n *     { \"cls\":Builder,     \"params\":{} }\r\n * ```\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function(  ){\r\n\r\n        // Static reference to the object, used to create a singleton instance\r\n        var _appmap = undefined;\r\n\r\n        /**\r\n         * PATHS allows specific mappings to be applied for each organisation.\r\n         * Add a new path in here for an organisation if created.\r\n         */\r\n        // https://dev.cnect.to/PumpHouse/fixture/system/convCentreCog2017/main.js\r\n        var PATHS = {\r\n            \"test\":            \"../pumpfacesystem/fixtures/\",\r\n        \t\"system\": \t\t   \"/PumpHouse/fixture/\",\r\n        \t\"myhealthtag\": \t   \"../pumpfacesystem/Hydra/fixtures/\",\r\n            \"mylifedigital\":   \"../pumpfacesystem/Hydra/fixtures/\",\r\n            \"rugby\":           \"../pumpfacesystem/Hydra/fixtures/\",\r\n            \"sharedwell\":      \"../pumpfacesystem/Hydra/fixtures/\",\r\n            \"trialbee\":        \"../pumpfacesystem/Hydra/fixtures/\",\r\n            \"healthsolutions\": \"../healthsolutions/fixtures/\"\r\n        };\r\n\r\n        // Constructor\r\n        function AppMap () {\r\n        \t// Declare the Apps managed by builder\r\n        \tthis.apps = {};\r\n\r\n\t\t\t// Add Test Navigation cog\r\n\t\t\t// this.add.call( this,\r\n\t\t\t// \t\"system.navigationCog\",\r\n\t\t\t// \t\"../pumpface/os/src/apps/appbuilder/navigationCog/main.html\",\r\n\t\t\t// \t\"../pumpface/os/src/apps/appbuilder/navigationCog/main.js\",\r\n\t\t\t// \t\"../pumpface/os/src/apps/appbuilder/navigationCog/main.css\",\r\n\t\t\t// \t\"../pumpface/os/src/apps/appbuilder/navigationCog/lang.json\",\r\n\t\t\t// \t\"../pumpface/os/src/apps/appbuilder/navigationCog/resources.json\",\r\n\t\t\t// \t\"\"\r\n\t\t\t// );\r\n\r\n\r\n\t\t\t// Example of overriding the specification\r\n\t\t\t// this.add.call( this,\r\n\t\t\t// \t\"myhealthtag.riskStratificationDetailCog\",\r\n\t\t\t// \t\"../pumpfacesystem/Hydra/fixtures/myhealthtag/riskStratificationDetailCog/main.html\",\r\n\t\t\t// \t\"../pumpfacesystem/Hydra/fixtures/myhealthtag/riskStratificationDetailCog/main.js\",\r\n\t\t\t// \t\"../pumpfacesystem/Hydra/fixtures/myhealthtag/riskStratificationDetailCog/main.css\",\r\n\t\t\t// \t\"../pumpfacesystem/Hydra/fixtures/myhealthtag/riskStratificationDetailCog/lang.json\",\r\n\t\t\t// \t\"../pumpfacesystem/Hydra/fixtures/myhealthtag/riskStratificationDetailCog/resources.json\",\r\n            //  \"../pumpfacesystem/Hydra/fixtures/myhealthtag/riskStratificationDetailCog/test/responses.js\",\r\n\t\t\t// \t\"\"\r\n\t\t\t// );\r\n        };\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        AppMap.prototype = {};\r\n\r\n        /**\r\n         * ###add\r\n         * Adds a new Cog configuration to the builder.\r\n         * @params {string} html \t  Path to the HTML file\r\n         * @params {string} js \t\t  Path to the JS file\r\n         * @params {string} css \t  Path to the CSS file\r\n         * @params {string} lang \t  Path to the LANG file\r\n         * @params {string} resources Path to the RESOURCES file\r\n         * @params {object} responses Path to mock RESPONSES file ( usually under /test )\r\n         */\r\n        AppMap.prototype.add = function( name, html, js, css, lang, resources, responses ){\r\n        \tvar app = this.apps[ name ] = {};\r\n\r\n            // AMONIS: 11/06/2015: Updated with reduced set of load data initially.\r\n            // Just request the resources file initially, every cog should have one.\r\n\r\n        \t//app.html \t\t= html;\r\n        \t//app.js   \t\t= js;\r\n        \t//app.css  \t\t= css;\r\n        \t//app.lang \t\t= lang;\r\n        \tapp.resources \t= resources;\r\n        \t//app.responses \t= responses;\r\n\r\n        \treturn app;\r\n        };\r\n\r\n        /**\r\n         * ###get\r\n         * Gets an app definition from the AppMap.\r\n         * If no path is specified it \"attempts\" to guess the correct paths. This is based on the assumptions\r\n         * of main.js, main.html & main.css etc. If the filenames differ this WILL NOT work.\r\n         * In that case you will need to override the files as in the first examples in the constructor.\r\n         * @params {string} name The appName in form of system.navigationCog\r\n         * @returns {json} The App configuration object\r\n         */\r\n        AppMap.prototype.get = function( name ){\r\n        \tif( this.apps[ name ] ){\r\n        \t\tvar app = this.apps[ name ];\r\n        \t\treturn app;\r\n        \t} else {\r\n        \t\t// Attempt to build path dyanimcally\r\n        \t\tvar localpath = name.replace( \".\", \"/\" );\r\n\r\n        \t\tvar pathParts = name.split( \".\" );\r\n        \t\tvar basePath = PATHS[ pathParts[ 0 ] ];\r\n\r\n        \t\tvar fullPath = undefined;\r\n        \t\tif( basePath ){\r\n        \t\t\tfullPath = basePath + localpath;\r\n\r\n        \t\t\t// Cache the path;\r\n        \t\t\tthis.add.call( this,\r\n\t\t\t\t\t\tname,\r\n\t\t\t\t\t\tfullPath + \"/main.html\",\r\n\t\t\t\t\t\tfullPath + \"/main.js\",\r\n\t\t\t\t\t\tfullPath + \"/main.css\",\r\n\t\t\t\t\t\tfullPath + \"/lang.json\",\r\n\t\t\t\t\t\tfullPath + \"/resources.json\",\r\n\t\t\t\t\t\tfullPath + \"/test/responses.js\"\t\t// load any mock responses\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t// Retreive the App Path ( Just Set )\r\n\t\t\t\t\tvar app = this.apps[ name ];\r\n\t\t\t\t\treturn app;\r\n        \t\t}\r\n        \t}\r\n        };\r\n\r\n        // Return the Animal function\r\n        if( !_appmap )\r\n            _appmap = new AppMap();\r\n\r\n        return _appmap;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/apps/appbuilder/appmap.js?");

/***/ }),

/***/ "./src/apps/appbuilder/builder.js":
/*!****************************************!*\
  !*** ./src/apps/appbuilder/builder.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n */\r\n\r\n/**\r\n * # apps.appbuilder.builder\r\n * ## _A static App Builder for creating Apps in PFOS_\r\n * Runs a single instance of an App in a Designer window, using all of the regular PFOS insfratructure. This allows an App\r\n * to be designed and built locally, without having to rely on PumpHouse and also in a static manner.\r\n * Incorporates a simple testing mechanism that can send messages to the App to simulate events etc.\r\n *\r\n * ####Usage in Kernel App config:\r\n *\r\n * ```js\r\n *     { \"cls\":Builder,     \"params\":{} }\r\n * ```\r\n *\r\n */\r\n\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n        __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"),\r\n        __webpack_require__(/*! core/events */ \"./src/core/events.js\"),\r\n        __webpack_require__(/*! core/kernel */ \"./src/core/kernel.js\"),\r\n        __webpack_require__(/*! services/drive */ \"./src/services/drive.js\"),\r\n        __webpack_require__(/*! services/cog */ \"./src/services/cog.js\"),\r\n\r\n        __webpack_require__(/*! apps/app */ \"./src/apps/app.js\"),\r\n        __webpack_require__(/*! text!apps/appbuilder/builder.html */ \"./node_modules/text-loader/index.js!./src/apps/appbuilder/builder.html\"),\r\n        __webpack_require__(/*! apps/appbuilder/loader */ \"./src/apps/appbuilder/loader.js\"),\r\n        __webpack_require__(/*! apps/appbuilder/spec */ \"./src/apps/appbuilder/spec.js\"),\r\n\r\n        __webpack_require__(/*! apps/appbuilder/appmap */ \"./src/apps/appbuilder/appmap.js\"),\r\n        __webpack_require__(/*! apps/appbuilder/appconfig */ \"./src/apps/appbuilder/appconfig.js\")\r\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( log, events, Kernel, Drive, Cog, App, Html, Loader, Spec, AppMap, AppConfig ){\r\n\r\n        // *_this*      a reference to the created instance for use in callbacks if scope if lost.\r\n        var _this;\r\n\r\n        //  *_super*    a reference to the parent object should functionality need to be directly accessed.\r\n        var _super = App.prototype;\r\n\r\n        /**\r\n         * ## Builder\r\n         * Extends apps.App and creates a new Builder instance\r\n         * @param {object} config Object containing all options\r\n         */\r\n        function Builder( config ) {\r\n            _this = this;\r\n\r\n            // Construct this object from an instance of its parent.\r\n            App.call( this, config );\r\n\r\n            // Register Event Listener(s)\r\n            events.on( \"builder.load.cog\", this.loadCog , this );\r\n\r\n            // Set this apps name.\r\n            this.name = \"Builder\";\r\n            this.id   = \"app-builder\";\r\n\r\n            // **appName** using \"?app=system.nagigationCog\" querystring param\r\n            this.appName = the.getQueryStringParam( \"app\" );\r\n\r\n            // **autoRun** using \"?auto=true\" querystring param\r\n            this.autoRun = the.getQueryStringParam( \"auto\" );\r\n\r\n            // **hideControls** using \"?hide=true\" querystring param\r\n            this.hideControls = the.getQueryStringParam( \"hide\" );\r\n\r\n            // **spaceConfig** using \"?space={\"layout\":\"fullOne\"}\" querystring param\r\n            this.spaceConfig = the.getQueryStringParam( \"space\" );\r\n            if( this.spaceConfig ){\r\n                var _unencoded = phil.unencode( this.spaceConfig );\r\n                this.spaceConfig = JSON.parse( _unencoded );\r\n            } else {\r\n                this.spaceConfig = { \"layout\":\"flow\" }\r\n            }\r\n\r\n            // Add padding to the body to allow the controls to be shown\r\n            if( !this.hideControls ){\r\n                $(\"body\").addClass( \"builder-padding\" );\r\n            }\r\n\r\n            // @property model: Internal pointer to the model to add Service model requirements to in oganised manner.\r\n            this.model = {\r\n                \"hideControls\": phil.observe( this.hideControls ),\r\n                \"spaceConfig\": phil.observe( this.spaceConfig ),\r\n                \"start\": phil.model.Button( { \"value\":'go', \"handler\":function(){ events.fire( \"builder.load.cog\", {} ); } } )\r\n            };\r\n\r\n            // Set the apps html ( i.e. create the ui )\r\n            this.html = Html;\r\n\r\n            // Define UI properties and handlers\r\n            this.init();\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        Builder.prototype = Object.create( _super );\r\n\r\n        /**\r\n         * ## init\r\n         * initialise the Builder App with properties and handlers for the UI\r\n         */\r\n        Builder.prototype.init = function(){\r\n        \t// If autorun, trigger the \"start\" button handler.\r\n            if( this.autoRun )\r\n            \tthis.model.start.handler();\r\n        };\r\n\r\n        /**\r\n         * ###loadCog\r\n         * Starts the loading process which retreives the cog and loads it into Drive and Cog services\r\n         * Called in response to Start button being pressed\r\n         */\r\n        Builder.prototype.loadCog = function(){\r\n        \tif( !this.appName ){\r\n        \t\talert( \"No App specified, use ?app=system.nagigationCog to load.\")\r\n        \t} else {\r\n        \t\t// Start the loading process\r\n            \tthis.loadApp.call( this );\r\n        \t}\r\n        };\r\n\r\n        /**\r\n         * ###loadApp\r\n         * Loads the application into the drive ( as if it has been pulsed in )\r\n         */\r\n        Builder.prototype.loadApp= function( json ){\r\n        \t// Get the App specification from the AppMap\r\n        \tvar appSpec = AppMap.get( this.appName );\r\n\r\n            // Load the Cog specifics\r\n            //var results = new Loader( this.populateDrive.bind( this ) ).load( appSpec );\r\n            var results = new Loader( this.loadAppFromResources.bind( this ) ).load( appSpec );\r\n        };\r\n\r\n        /**\r\n         * ###loadAppFromResources\r\n         */\r\n        Builder.prototype.loadAppFromResources = function( json ){\r\n            var strippedResources = Spec.stripComments( json.resources );\r\n            try{\r\n\t            var resources = JSON.parse( strippedResources );\r\n\t            var appConfig = new AppConfig( this.appName, resources );\r\n\t            var results = new Loader( this.populateDrive.bind( this ) ).load( appConfig );\r\n            } catch ( ex ){\r\n            \tlog.emergency( \"FAILED to load / parse resources.json: \" + this.appName );\r\n            \tlog.emergency( ex.stack );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###populateDrive\r\n         * Takes the JSON and populates the Drive with the results. This simulates the process used by the OS when\r\n         * a Site Spec is loaded.\r\n         * Then triggers the loading process ( which would normally be done on Space.show() ).\r\n         * @params {json} json The HTML, JS & CSS to load in to the drive.\r\n         */\r\n        Builder.prototype.populateDrive = function( json ){\r\n            // Get the local path to pass in as \"basePath\" for the cogs\r\n            var localPath = AppConfig.getPathFor( this.appName );\r\n\r\n            // Generate a Cog Spec that replicates what is received from PumpHouse\r\n            var spec = Spec.generateCog(\r\n                this.appName,\r\n                json[ \"html\" ],\r\n                json[ \"js\" ],\r\n                json[ \"css\" ],\r\n                json[ \"lang\" ],\r\n                json[ \"resources\" ],\r\n                json[ \"responses\" ],\r\n                \"../\" + localPath\r\n            );\r\n\r\n            // Load the JSON into the Drive ( this would normally be done by an XHR request from the drive )\r\n            this._kernel.invoke( \"drive.cache\", { \"key\":\"00001\", \"obj\":spec } );\r\n\r\n            // Request the Cog Service to load the cog using the same id.\r\n            events.fire( \"cog.add\", { \"id\":\"00001\" } );\r\n        };\r\n\r\n        return Builder;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/apps/appbuilder/builder.js?");

/***/ }),

/***/ "./src/apps/appbuilder/loader.js":
/*!***************************************!*\
  !*** ./src/apps/appbuilder/loader.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n */\r\n\r\n/**\r\n * # apps.appbuilder.loader\r\n * ## _An async 'local' file loader_\r\n * Loads files from the local file system as if requested via http\r\n *\r\n * ####Usage:\r\n *\r\n * ```js\r\n *     tbc\r\n * ```\r\n *\r\n */\r\n\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! utils/log */ \"./src/utils/log.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( log ){\r\n\r\n        // *_this* is a reference to the created instance for use in callbacks if scope if lost.\r\n        var _this;\r\n\r\n        //  *_super* is a reference to the parent object should functionality need to be directly accessed.\r\n        var _super = {};\r\n\r\n        /**\r\n         * ## Builder\r\n         * Extends apps.App and creates a new Builder instance\r\n         * @param {object} config Object containing all options\r\n         */\r\n        function Loader( callback ) {\r\n            // Store a reference to this for now.\r\n            _this = this;\r\n\r\n            // **property** internal store of downloaded files\r\n            this.files = {};\r\n\r\n            // Set the completed callback\r\n            this.finishedCallback = callback;\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        Loader.prototype = Object.create( _super );\r\n\r\n        /**\r\n         * ###load\r\n         * Async loads the files specified\r\n         * @params [filepaths] files An array of paths to files\r\n         * @returns {} A collection containing all of the data loaded\r\n         */\r\n        Loader.prototype.load = function( files ){\r\n\r\n            this.files = files;\r\n\r\n        \t// Only a JS file is really mandatory ( otherwise the cog will do nothing ).\r\n        \t// Load mandatory files, and skip anything not required.\r\n\r\n            for( var key in files ){\r\n\r\n                var file = files[ key ];\r\n\r\n                if( !file || file === \"\" ){\r\n                \t// No file specified. Don't attempt load of this. e.g. no main.css etc ( which is not mandatory )\r\n\r\n                \t// Add a placeholder to the files list\r\n\t                this.files[ key ] = \"\";\r\n                } else {\r\n                \t// Load the file specified\r\n                    if( the.isArray( file ) ){\r\n                        for( var i=0; i<file.length; i++ ){\r\n                            // Add a placeholder to the files list\r\n                            this.files[ key ] = [];\r\n                            // Load the files asynchronously\r\n                            this.asyncLoad.call( this, key, file[ i ], files );\r\n                        }\r\n                    } else {\r\n                        // Add a placeholder to the files list\r\n                        this.files[ key ] = undefined;\r\n\r\n                        // Load the files asynchronously\r\n                        this.asyncLoad.call( this, key, file, files );\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        /**\r\n         * ###asyncLoad\r\n         +-----\r\n         *\r\n         */\r\n        Loader.prototype.asyncLoad = function( filename, fileurl, files ){\r\n            // Fire the async request\r\n            //var uri = \"read.php?file=\" + fileurl;\r\n            // var uri = \"fixture?file=\" + fileurl; // NODE JS test\r\n            var uri = fileurl;\r\n            $.ajax( {\r\n                dataType: \"text\",\r\n                url: uri\r\n            } )\r\n            .done( function( content ){\r\n                _this.loaded.call( _this, filename, content, files );\r\n            } )\r\n            .fail( function( xhr, status, err ){\r\n            \t_this.loaded.call( _this, filename, \"\", files );\r\n            } );\r\n\r\n        };\r\n\r\n        /**\r\n         * ###loaded\r\n         */\r\n        Loader.prototype.loaded = function( name, content, files ){\r\n            // AMONIS: 06/07/2015: Modified to load an array of files for JS\r\n            if( the.isArray( this.files[ name ] ) ){\r\n                this.files[ name ].push( content );\r\n            } else {\r\n                // Update the content for the Url;\r\n                this.files[ name ] = content;\r\n            }\r\n\r\n            the.log.debug( \"builder.Loader\", \"loaded [\" + name + \"]\" );\r\n\r\n            // Fire finished that checks for all downloads\r\n            this.finished( );\r\n        };\r\n\r\n        /**\r\n         * ###finished\r\n         */\r\n        Loader.prototype.finished = function( url, content ){\r\n            var finished = true;\r\n            for( var key in this.files ){\r\n                if( this.files[ key ] === undefined ){\r\n                    finished = false;\r\n                }\r\n            }\r\n\r\n            if( !finished )\r\n                return false;\r\n\r\n            // trigger callback\r\n            this.finishedCallback( this.files );\r\n\r\n            return true;\r\n        };\r\n\r\n        return Loader;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/apps/appbuilder/loader.js?");

/***/ }),

/***/ "./src/apps/appbuilder/spec.js":
/*!*************************************!*\
  !*** ./src/apps/appbuilder/spec.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n */\r\n\r\n/**\r\n * # apps.appbuilder.spec\r\n * ## _A Spec generator_\r\n * Creates a common spec which is useful for mocking, from a collection of cog files\r\n *\r\n */\r\n\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! utils/log */ \"./src/utils/log.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( log ){\r\n\r\n        // *_this* is a reference to the created instance for use in callbacks if scope if lost.\r\n        var _this;\r\n\r\n        //  *_super* is a reference to the parent object should functionality need to be directly accessed.\r\n        var _super = {};\r\n\r\n        /**\r\n         * ## Builder\r\n         * Extends apps.App and creates a new Builder instance\r\n         * @param {object} config Object containing all options\r\n         */\r\n        function Spec() {\r\n            // Store a reference to this for now.\r\n            _this = this;\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        Spec.prototype = Object.create( _super );\r\n\r\n        /**\r\n         * ###stripComments\r\n         */\r\n        Spec.prototype.stripComments = function( input ){\r\n            var stripMultiline  = input.replace( /\\/\\*([\\s\\S])*?\\*\\//g, \"\" );\r\n\r\n            //var stripSingleline = stripMultiline.replace( /\\/\\/.*/g, \"\" );\r\n            // AMONIS: 15/06/2015: Updated with better regex to check for :// ( e.g. a url ) and not strip, unlike comments //\r\n            var stripSingleline = stripMultiline.replace( /(?:^|\\s)\\/\\/([^'\"]*?).*/g, \"\" );\r\n\r\n            return stripSingleline;\r\n        };\r\n\r\n        /**\r\n         * ###generateCog\r\n         * Generates an approximate Cog spec given fresh inputs\r\n         * @params {string} name\r\n         * @params {string} js\r\n         * @parmas {string} html\r\n         * @returns {json} cog spec\r\n         */\r\n        Spec.prototype.generateCog = function( name, html, js, css, lang, resources, responses, basePath ){\r\n            var resourcesObj = {};\r\n            var langObj \t = {};\r\n\r\n            if( resources && resources !== \"\" ){\r\n\t            // Strip comments from JSON \"resources\"\r\n\t            var resources1 = resources.replace( /\\/\\*([\\s\\S])*?\\*\\//g, \"\" );\r\n\t            var resources2 = resources1.replace( /\\/\\/.*/g, \"\" );\r\n\t            resourcesObj = JSON.parse( resources2 );\r\n\r\n\t            // Add in the responses to the params\r\n\t            resourcesObj.params = resourcesObj.params || {};\r\n\t            resourcesObj.params[ \"_appbuilder\" ] = true;\r\n                resourcesObj.params[ \"basePath\" ] = basePath;\r\n\r\n\t            if( responses ){\r\n\t            \tresourcesObj.params = resourcesObj.params || {};\r\n                    // Strip the comments out of resources\r\n                    var strippedResources = this.stripComments.call( this, responses );\r\n\r\n                    // AMONIS: 15/12/2016: Enhanced to support Function in JSON Responses. ( as opposed to regular static response up until now )\r\n                    if( strippedResources.indexOf( \"responses = {\" ) > -1 ){\r\n                        // Version 2: Allows functions so use Eval mechanism\r\n                        var result = eval( strippedResources );\r\n                        resourcesObj.params[ \"_responses\" ] = result;\r\n                    } else {\r\n                        // Version 1: Basic JSON.\r\n                        resourcesObj.params[ \"_responses\" ] = JSON.parse( strippedResources );\r\n                    }\r\n\r\n\t            }\r\n\t        }\r\n\r\n\t        if( lang && lang !== \"\" ){\r\n\t        \t// Strip comments from JSON \"lang\"\r\n\t            var lang1 = lang.replace( /\\/\\*([\\s\\S])*?\\*\\//g, \"\" );\r\n\t            var lang2 = lang1.replace( /\\/\\/.*/g, \"\" );\r\n\t            langObj = JSON.parse( lang2 );\r\n\t        }\r\n\r\n            // Cog Spec template ( Roughly matches what is returned from PumpHouse )\r\n            var template = {\r\n                \"name\":             \"\",\r\n                \"componentType\":    \"cog\",\r\n                \"id\":               \"00001\",\r\n                \"label\":            \"\",\r\n                \"description\":      \"\",\r\n                \"dataType\":         { \"type\": \"\", \"subTypes\": [], \"partition\": \"\" },\r\n                \"capability\":       [ ],\r\n                \"state\":            { \"trusted\": {},\"untrusted\": {} },\r\n                \"articleType\":      \"article\",\r\n                \"cogType\":          \"system\",\r\n                \"template\":         \"default\",\r\n                \"params\":           resourcesObj.params || {},\r\n                \"permission\":       { \"level\":\"owner\" },\r\n                \"script\":           \"\",\r\n                \"html\":             \"\",\r\n                \"style\":            \"\",\r\n                \"layout\":           {},\r\n                \"lang\":             langObj,\r\n                \"cards\":            resourcesObj.cards || {},\r\n\r\n                \"parentId\":         \"0000a\"\r\n            }\r\n\r\n            // Update the template with the custom loaded data\r\n            template.name   = name;\r\n            template.script = js;\r\n            template.html   = html;\r\n            template.style  = css || \"\";\r\n\r\n            return template;\r\n        }\r\n\r\n        return new Spec();\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/apps/appbuilder/spec.js?");

/***/ }),

/***/ "./src/beans/cog.js":
/*!**************************!*\
  !*** ./src/beans/cog.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n        __webpack_require__(/*! knockout */ \"knockout\"),\r\n        __webpack_require__(/*! the */ \"the\"),\r\n        __webpack_require__(/*! mixins/map */ \"./src/mixins/map.js\"),\r\n        __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"),\r\n        __webpack_require__(/*! cog/my */ \"./src/cog/my.js\"),\r\n        __webpack_require__(/*! cog/script */ \"./src/cog/script.js\"),\r\n        __webpack_require__(/*! cog/endpoint */ \"./src/cog/endpoint.js\")\r\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko, The, Map, log, My, Script, Endpoint ){\r\n\r\n        /*\r\n            # beans.cog\r\n            Maps a Cog spec into a usable bean. Used in Knockout model for Cog and layout.\r\n\r\n            ```js\r\n// Example Resources.json\r\n{\r\n    \"script\":   [ \"/<namespace>/<cogname>/main.js\" ],\r\n    \"html\":     \"/<namespace>/<cogname>/main.html\",\r\n    \"style\":    \"/<namespace>/<cogname>/main.css\",\r\n    \"lang\":     \"/<namespace>/<cogname>/lang.json\",\r\n    \"image\":    [],\r\n    \"cogType\":  \"system\",\r\n    \"params\": {\r\n        \"basePath\": \"/PumpHouse/uploads/images\"\r\n    },\r\n    \"capability\": [\r\n        // Capability V1 - Producer Route\r\n        { \"direction\": \"PRODUCER\", \"trait\": \"pumpCo.user.calendar.tag.list.request\", \"version\": \"0.1\" },\r\n        // Capabilitiy V1 - Consumer Route\r\n        { \"direction\": \"CONSUMER\", \"trait\": \"pumpCo.user.calendar.tag.list.response\", \"version\": \"0.1\" },\r\n        // Capability V2 - Rich registering of Routes, Libraries, Security etc as configured by the platform\r\n        { \"name\":\"graphing\", \"version\":\"1\", \"options\":{} }\r\n    ]\r\n}\r\n\r\n            ```\r\n            @author Andy Monis\r\n            @date   09/07/2014\r\n        */\r\n        function Cog(){\r\n            // **capability** [objects]\r\n            // originally the was just for pulses in the format of\r\n            // { \"direction\": \"CONSUMER\", \"trait\": \"internal.actor.details.reply\", \"version\": \"0.1\" },\r\n            // The new mechanism allows larger capabilities to be passed in such as \"graphing\" e.g.\r\n            // { \"name\":\"graphing\", \"version\":\"1\", \"options\":{} }\r\n            // which would auto-wire in any extra pulses and libraries ( such as D3 ), but could also\r\n            // set security, permissions etc\r\n            this.capability     = [ { \"*\":\"*\" } ];\r\n            // **cogType** {string} User (lowest), Platform or System (highest) priority. Only system used at present\r\n            this.cogType        = \"\";\r\n            // **componentType** {string}\r\n            this.componentType  = \"\";\r\n            // **description** {string} A textual description of the cog\r\n            this.description    = \"\";\r\n            // **html** {string} Important: The html string used to describe the UI\r\n            this.html           = \"\";\r\n            // **htmlUrl** {string} Path to a valid html file\r\n            this.htmlUrl        = \"\";\r\n            // **icon** {string} Path to a valid icon file on the backend\r\n            this.icon           = \"\";\r\n            // **id** {string} A guid for the cog\r\n            this.id             = \"\";\r\n            // **label** {string} An i18n label for presentational use\r\n            this.label          = \"\";\r\n            // **lang** {object} An i18n language pack for the cog.\r\n            this.lang           = { \"*\":\"*\" };\r\n            // **langUrl** {string} Important: Paths to the Lang files\r\n            this.langUrl        = \"\";\r\n            // **layout** {object/json} Custom layout parameters usually specified in the Cog Fixture\r\n            this.layout         = { \"*\":\"*\" };\r\n            // **name** {string} A textual name for the Cog. Not for display. Appended to the element for easier location of cog in DOM.\r\n            this.name           = \"\";\r\n            // **params** {object/json} A completely custom unmanaged object, which can be used to inject properties into the cog dynamically or from fixture.\r\n            this.params         = { \"*\":\"*\" };\r\n            // **permission** {object/json} Contains details of the cogs permissions. { level:\"owner\" }.\r\n            this.permission     = { \"*\":\"*\" };\r\n            // **script** {string} Important: The main javascript for the Cog. must have a the.App.onReady() function.\r\n            this.script         = \"\";\r\n            // **scriptUrl** {string} Important: Paths to the JavaScript files\r\n            this.scriptUrl      = [ { \"*\":\"*\"} ];\r\n            // **state** {object/json} A state object for the cog which allows state information to be preserved betweem sessions.\r\n            this.state          = { \"*\":\"*\" };\r\n            // **style** {string} Valid CSS that is namespaced and injected into the DOM to help layout the cog.\r\n            this.style          = \"\";\r\n            // **styleUrl** {string} Important: Paths to the CSS files\r\n            this.styleUrl       = \"\";\r\n            // **template** {string} ??\r\n            this.template       = \"\";\r\n            // **cards** {object/json} A valid set of card names\r\n            this.cards          = [];\r\n            // **parentId** _internal_ {string} The Id of the parent element. In this case it will be a Space id.\r\n            this.parentId       = \"\";\r\n            // **booted** _internal_ {boolean} Flag to identify if the cog has been booted ( has the closure code been run and My generated ).\r\n            this.booted         = false;\r\n            // **repaint** _internal_ {Observable(boolean)} Flag to get the binding to re-render the HTML from the bean.\r\n            this.repaint        = ko.observable( true );\r\n            // **isValid** _internal_ {boolean} true if HTML and SCRIPT are valid, otherwise false.\r\n            this.isValid        = true;\r\n            // **isValid** _observable_ {boolean} used for running & displaying as part of the OS.\r\n            this.oVisible       = ko.observable( false );\r\n            // **oOrder** _observable_ {string} used to apply an ordering to the cogs.\r\n            this.oOrder         = ko.observable( \"\" );\r\n            // **oEditMode** _observable_ {boolean} used to make the cog flip into edit mode.\r\n            this.oEditMode      = ko.observable( false );\r\n\r\n            // The following should all ideally be \"required\" in. This will come in the future. AMONIS: 11/02/2015\r\n\r\n            // ###mixin pumpco.core.ui.cog.My\r\n            __mixin( this, My );\r\n            // ###mixin pumpco.core.ui.cog.Script\r\n            __mixin( this, Script );\r\n            // ###mixin pumpco.core.ui.cog.Endpoint\r\n            __mixin( this, Endpoint );\r\n        }\r\n\r\n        // **DEFAULT_SCRIPT** {string} the default value for undefined cog script\r\n        Cog.DEFAULT_SCRIPT = \"the.App.onReady(function() {}); \";\r\n\r\n        // **DEFAULT_HTML** {string} the default value for undefined cog html\r\n        Cog.DEFAULT_HTML   = \"<!-- -->\";\r\n\r\n        Cog.prototype = {};\r\n\r\n        /**\r\n         * ###update\r\n         * Update takes a COG json spec and parses into the cog structure defined above.\r\n         * [ { \"direction\":\"\", \"version\":\"\", \"trait\":\"\" } ]; means parse an array and extract the properties named.\r\n         * this.template = \"\"; means extract this property\r\n         * this.state = { \"*\":\"*\" }; means extract everything below this point.\r\n         * The purpose is to provide a strimmed Cog, without all the unneccessary hierarchy.\r\n         * @params spec {json} the cog spec as provided by the pulses\r\n         */\r\n        Cog.prototype.update = function( spec ){\r\n            Map.fromJS( this, spec );\r\n\r\n            // AMONIS: 06/10/2016: Add system.core.cog capability to the cog. ( this is used to communicate between the Cog Service and the Cogs and is required. )\r\n            this.capability.push( { \"direction\": \"CONSUMER\", \"trait\": \"pumpco.system.core.cog\", \"version\": \"0.1\" } );\r\n\r\n            // AMONIS: 08/06/2015: This is a really quick solution that simply unrolls the array to a string.\r\n            // A better ( longer term ) solution would be to support a require type format or dynamic loading...\r\n            // Support new format Script as an array. Join the array in to a single script object.\r\n            // Not supporting fancier loading yet.\r\n            if( the.isArray( spec.script ) ){\r\n                this.script = spec.script.join( \"\\n\" );\r\n            }\r\n\r\n            // AMONIS: 02/09/2015: Unroll HTML\r\n            if( the.isArray( spec.html ) ){\r\n                this.html = spec.html.join( \"\\n\" );\r\n            }\r\n\r\n            // AMONIS: 02/09/2015: Unroll style\r\n            if( the.isArray( spec[ \"style\" ] ) ){\r\n                this[ \"style\" ] = spec[ \"style\" ].join( \"\\n\" );\r\n            }\r\n\r\n            // Check the validity of the Cog. Does it have valid data ( even if populated ). HTML and SCRIPT are pretty essential.\r\n            var htmlCheck, scriptCheck = true;\r\n\r\n            if( this.html===\"\" || this.html===Cog.DEFAULT_HTML )\r\n                htmlCheck = false;\r\n\r\n            // AMONIS: 13/11/2015: Rugby Attendace fix. They have placed references in the head section of the embedded html that need to be stripped to prevent errors.\r\n            // Trim out the body of the html ( ignore head etc )\r\n            var start = this.html.indexOf( \"<body\" );\r\n            if( start > -1 ){\r\n                this.html = this.html.substring( start + 5 );\r\n                var closer = this.html.indexOf( \">\" );\r\n                var end = this.html.indexOf( \"</body\" );\r\n\r\n                this.html = this.html.substring( closer + 1, end );\r\n            }\r\n\r\n            if( this.script===\"\" || this.script===Cog.DEFAULT_SCRIPT )\r\n                scriptCheck = false;\r\n\r\n            if( !htmlCheck && !scriptCheck )\r\n                this.isValid = false;\r\n\r\n            // AMONIS: 10/10/2016: Apply the cards.\r\n            // I couldn't get this property working through the mapping as it has to be empty if not specified.\r\n            if( spec.cards && spec.cards.length >= 1 ){\r\n                this.cards = spec.cards;\r\n            }\r\n\r\n            // AMONIS: 24/08/2016: Wrap the json.order as an observable to allow it to be changed dynamically.\r\n            this.oOrder( spec.order );\r\n\r\n            // **property** Custom property only set via Drive.Static if this Cog is scaffolded for use offline.\r\n            this.params.baseUrl = this.params.baseUrl || \"\";\r\n\r\n            // **property** Custom property set using the location of the browser.\r\n            this.params.location = this.params.location || {};\r\n\r\n\t\t\t// **property** Custom property used to indicate if the baseUrl should be used.\r\n\t\t\tthis.params.fqdn = this.params.fqdn || false;\r\n\r\n            // **property** Custom property of the full path ( including the PH baseUrl )\r\n\t\t\tthis.params.fullPath = this.params.fqdn ? this.params.baseUrl + this.params.basePath : this.params.basePath;\r\n        };\r\n\r\n        Cog.prototype.editMode = function( mode ){\r\n            this.oEditMode( mode || false );\r\n        };\r\n\r\n        /**\r\n         * ###getCapabilities\r\n         * @return [Strings] array of the libraries required.\r\n         */\r\n        Cog.prototype.getCapabilities = function(){\r\n            var capabilities = [];\r\n            for( var i=0; i<this.capability.length; i++ ){\r\n                if( this.capability[ i ].hasOwnProperty( \"name\" ) ){\r\n                    capabilities.push( this.capability[ i ] );\r\n                }\r\n            }\r\n            return capabilities;\r\n        };\r\n\r\n        /**\r\n         * ###getLibraries\r\n         * @return [Strings] array of the libraries required.\r\n         */\r\n        Cog.prototype.getPulseRegistrations = function(){\r\n            var capabilities = [];\r\n            for( var i=0; i<this.capability.length; i++ ){\r\n                if( this.capability[ i ].hasOwnProperty( \"direction\" ) ){\r\n                    capabilities.push( this.capability[ i ] );\r\n                }\r\n            }\r\n            return capabilities;\r\n        };\r\n\r\n        return Cog;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/beans/cog.js?");

/***/ }),

/***/ "./src/beans/header.js":
/*!*****************************!*\
  !*** ./src/beans/header.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n    Place bean\n    Maps a Place spec into a usable bean. Used in Knockout model for Site and layout.\n    @author Andy Monis\n    @date   09/07/2014\n*/\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! knockout */ \"knockout\"), __webpack_require__(/*! mixins/map */ \"./src/mixins/map.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! utils/i18n */ \"./src/utils/i18n.js\"), __webpack_require__(/*! utils/hash */ \"./src/utils/hash.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(ko, Map, log, i18n, Hash) {\n        // This runs before Main has been called.\n\n        var _this = undefined;\n\n        function Header(config) {\n            _this = this;\n\n            config = config || {};\n\n            // A bit of hardcoded looking for user icons\n            this.testPaths = [\"member.jpg\", \"staff.jpg\", \"volunterr.jpg\", \"andym\"];\n\n            this.id = \"header\";\n\n            // **property** {string} initials: Only set if the icon is invalid\n            this.initials = ko.observable(\"\");\n\n            // **property** {string} initialsColour: Set to a hex ref to colour the user badge\n            this.initialsColour = ko.observable(\"\");\n\n            // **property** {string} icon: The path to a PH image for the user\n            this.icon = ko.observable(\"\");\n\n            // **property** extra classes to be added by the binding\n            this.oSingleApp = ko.observable(false);\n\n            // Add in singleapp if the header \"appParams\" is specified\n            if (config.appParams !== undefined) {\n                this.oSingleApp(true);\n            }\n\n            // Basic bean structure that mirrors the Spec\n            this.place = ko.observable(\"\");\n            this.placeIcon = ko.observable(\"\");\n            this.placeInitials = ko.observable(\"\");\n            this.placeInitialsColour = ko.observable(\"\");\n            this.placeMessage = ko.observable(\"\");\n            this.visiting = ko.observable(false);\n            this.placeAccent = ko.observable(undefined);\n\n            this.space = ko.observable(\"\");\n\n            this.currentPlace = undefined;\n            this.breadcrumbs = {};\n            this.breadcrumb = ko.observableArray([]);\n\n            // AMONIS: 06/01/2017: Implement a Place BreadCrumb\n            this.breadcrumbPlaces = new Hash();\n            this.breadcrumbPlacesFn = config.breadcrumbPlacesFn || function() {};\n\n            // Create a notifications object\n            this.notifications = {\n                \"count\": ko.observable(0)\n            };\n\n            // ##consoleExpanded : boolean to indicate\n            this.consoleExpanded = ko.observable(false);\n\n            this.status = ko.observable(\"is-success\");\n\n            this._signoutFn = config.signoutFn || function() {};\n            this._settingsFn = config.settingsFn || function() {};\n            this._contactsFn = config.contactsFn || function() {};\n            this._yourPlaceFn = config.yourPlaceFn || function() {};\n            this._notificationsFn = config.notificationsFn || function() {};\n            this._helpFn = config.helpFn || function() {};\n\n            this.actions = phil.model.ButtonMenu({\n                button: {\n                    value: \"<span class=\\\"ico-ios7 ico-more\\\"></span>\"\n                },\n                menu: {\n                    items: [\n                        phil.model.Button({\n                            name: \"yourplace\",\n                            value: \"your place\",\n                            handler: function(obj, event) {\n                                $(event.currentTarget).parents(\"ul.menu\").triggerHandler(\"blur\");\n                                _this._yourPlaceFn();\n                            }\n                        }),\n                        phil.model.Button({\n                            name: \"contacts\",\n                            value: \"contacts\",\n                            handler: function(obj, event) {\n                                $(event.currentTarget).parents(\"ul.menu\").triggerHandler(\"blur\");\n                                _this._contactsFn();\n                            }\n                        }),\n                        phil.model.Button({\n                            name: \"notifications\",\n                            value: \"notifications\",\n                            handler: function(obj, event) {\n                                $(event.currentTarget).parents(\"ul.menu\").triggerHandler(\"blur\");\n                                _this._notificationsFn();\n                            }\n                        }),\n                        phil.model.Button({\n                            name: \"settings\",\n                            value: \"settings\",\n                            handler: function(obj, event) {\n                                $(event.currentTarget).parents(\"ul.menu\").triggerHandler(\"blur\");\n                                _this._settingsFn();\n                            }\n                        }),\n                        phil.model.Button({\n                            name: \"signout\",\n                            value: \"signout\",\n                            handler: function(obj, event) {\n                                $(event.currentTarget).parents(\"ul.menu\").triggerHandler(\"blur\");\n                                _this._signoutFn();\n                            }\n                        }),\n                        phil.model.Button({\n                            name: \"help\",\n                            value: \"help\",\n                            handler: function(obj, event) {\n                                $(event.currentTarget).parents(\"ul.menu\").triggerHandler(\"blur\");\n                                _this._helpFn();\n                            }\n                        })\n                    ]\n                }\n            });\n\n            // Custom structure, used for running & displaying\n            this.oVisible = ko.observable(false); // Don't show header by default\n        }\n\n        Header.prototype = {};\n\n        /**\n         * ###\n         */\n        Header.prototype.refreshI18n = function() {\n            this.refreshPlace(this.place);\n        };\n\n        /**\n         * @method isError\n         * Sets the is-error class for the header.\n         */\n        Header.prototype.isError = function() {\n            this.status(\"is-error\");\n        };\n\n\n        Header.prototype.chopBreadcrumb = function(breadcrumb, index) {\n            if (index > -1) {\n                breadcrumb.splice(index, breadcrumb.length - index);\n            }\n        };\n\n        Header.prototype.findInBreadcrumb = function(breadcrumb, id) {\n            var index = -1;\n            for (var i = 0; i < breadcrumb.length; i++) {\n                if (breadcrumb[i].id === id) {\n                    index = i;\n                    break;\n                }\n            }\n\n            return index;\n        };\n\n        Header.prototype.updateBreadCrumbWithSpace = function(space) {\n            var bc = this.breadcrumbs[this.currentPlace];\n\n            // Set the space property for display in header\n            this.space(space.label);\n\n            // See if this space already exists in breadcrumb\n            var index = this.findInBreadcrumb(bc, space.id);\n\n            // Chop the breadcrumb down to the minimum.\n            this.chopBreadcrumb(bc, index);\n\n            // Push this space on to the breadcrumb\n            if (space.label) {\n                bc.push(space);\n            }\n\n            // Update the displayed breadcrumb\n            this.breadcrumb(bc);\n        };\n\n        Header.prototype.switchBreadCrumbToPlace = function(placeId) {\n            // Update the breadcrumb to point to the current place breadcrumb\n            //this.breadcrumb = this.breadcrumbs[ placeId ];\n            // Notify knockout that the breadcrumb has changed\n            //this.breadcrumb.valueHasMutated();\n        };\n\n        /**\n         * ### addBreadCrumbForPlace\n         * This creates a new BreadCrumb for each place visited and allows separate\n         * back actions in each.\n         * @param {type} placeId\n         */\n        Header.prototype.addBreadCrumbForPlace = function(place, owner) {\n            var placeId = place.id;\n\n            this.currentPlace = placeId;\n\n            if (!this.breadcrumbs[placeId])\n                this.breadcrumbs[placeId] = []; //= ko.observableArray( [] );\n\n            // Update the displayed breadcrumb\n            var bc = this.breadcrumbs[this.currentPlace];\n            this.breadcrumb(bc);\n\n            // AMONIS: 06/01/2017: Create a new entry in the Breadcrumb places list\n            if (this.breadcrumbPlaces.indexOf(placeId) === -1) {\n                // AMONIS: 10/01/2017: Test for Login Place exception\n                if (place.owner && place.owner.id !== \"\") {\n                    var label = owner !== undefined ? owner.fn : place.desc;\n                    // Add in the id of placeid to allow indexOf to work\n                    this.breadcrumbPlaces.push({\n                        ownerId: place.owner.id,\n                        placeId: place.id,\n                        label: label,\n                        id: place.id,\n                        initialSpace: place.initialSpace\n                    });\n\n                    // AMONIS: 16/06/2017: Add first entry of space\n                    // This remedies the problem of the deeplinking Roadie.\n                    // Adds the ROOT record when the Place is loaded.\n                    var space = place.space[0];\n                    if (place.initialSpace && place.initialSpace.length > 0) {\n                        // Check for an initialSpace which overrides the \"first space\" in the place.space list.\n                        for (var i = 0; i < place.space.length; i++) {\n                            if (place.space[i].name === place.initialSpace[0]) {\n                                // Update the space\n                                space = {\n                                    id: place.space[i].id,\n                                    name: place.space[i].name\n                                };\n                                break;\n                            }\n                        }\n                    }\n                    // Push the record directly on to the newly create BreacdCrumb list\n                    bc.push(space);\n                }\n            }\n        };\n\n        /**\n         * ###spliceBreadcrumbForPlace\n         * Trims the breadcrumb ( when an item is clicked ), removing the newer items.\n         * @param  {type} placeId\n         * @return {type}         [description]\n         */\n        Header.prototype.trimBreadcrumbForPlace = function(placeId) {\n            // AMONIS: 06/01/2017: Create a new entry in the Breadcrumb places list\n            var index = this.breadcrumbPlaces.indexOf(placeId);\n            if (index !== -1) {\n                var length = this.breadcrumbPlaces.length();\n                // Check if this is the last item in the breadcrumb. Ignore if it is.\n                if (length > index) {\n                    // Remove the trailing items after this place\n                    this.breadcrumbPlaces.splice(index + 1, this.breadcrumbPlaces.length() - (index - 1));\n                }\n            }\n        };\n\n        /**\n         * ###refreshPlace\n         * Updates the place specific properties in the Header.\n         * @param {PlaceBean} place a valid place\n         * @param {Contact} owner: the Contact object for the owner of the place\n         */\n        Header.prototype.refreshPlace = function(place, owner) {\n            if (!place)\n                return -1;\n\n            // Update the place Title\n            this.place(place.label);\n\n            // AMONIS: 22/01/16: Remove the Place Icon ( if there is one ) when not visiting\n            this.placeIcon(\"\");\n\n            this.placeInitials(\"\");\n\n            // AMONIS: 25/11/2016: Apply the customisation accent colour when changing place\n            var accentColour = __get(\"customisation.accent\", place);\n            this.placeAccent(accentColour);\n\n            // Update the Place message to show an appropriate \"visiting\" message. This could be enhanced in the future\n            // to show a number of different messages ...\n            if (this.visiting()) {\n                var match = this.testForPaths(place.icon);\n\n                if (match) {\n                    var _fn = __get(\"fn\", owner);\n\n                    if (_fn) {\n                        // If a match is found, set the Initials, which should trigger the showing of these over the image\n                        this.placeInitials(the.abbreviate(_fn));\n\n                        // Generate a background colour for the icon\n                        this.placeInitialsColour(this.generateHexFrom(this.placeInitials()));\n                    }\n\n                }\n\n                // AMONIS: 22/01/16: Only add placeIcon if Visitin. Add the Place Icon ( if there is one ) to the header\n                this.placeIcon(place.icon);\n\n                // AMONIS: 21/02/16: Create the message and markup to remove any escaping issues.\n                var whom = owner !== undefined ? owner.fn : place.description;\n\n                var message = phil.markupify(phil.printf(i18n.resolve(\"header-you-are-visiting\"), whom));\n                this.placeMessage(message);\n            } else {\n\n\n                var message = phil.markupify(phil.printf(i18n.resolve(\"header-you-are-home\")));\n                this.placeMessage(message);\n            }\n        };\n\n\n        /**\n         * ###testForPaths\n         */\n        Header.prototype.testForPaths = function(src) {\n            var match = false;\n\n            if (!src)\n                return match;\n\n            // Test for matches from the testPaths\n            for (var i = 0; i < this.testPaths.length; i++) {\n                if (src.indexOf(this.testPaths[i]) > -1) {\n                    match = true;\n                    break;\n                }\n            }\n\n            return match;\n        }\n\n        /**\n         * ###generateHexFrom\n         */\n        Header.prototype.generateHexFrom = function(str) {\n            // Generate hex colour for badge\n            var _hex = [\"#\"];\n            for (var i = 0; i < str.length; i++) {\n                _hex.push(str.charCodeAt(i));\n            }\n\n            // Add a final entry for 2 digit initals to make the form #000000\n            if (_hex.length < 4) {\n                _hex.push(\"00\");\n            }\n\n            return _hex.join(\"\");\n        };\n\n        /**\n         * ###setIcon\n         */\n        Header.prototype.setIcon = function(user) {\n\n            // Safely extract the icon from the user bean\n            var imageSrc = \"\";\n            if (user.profileImage && user.profileImage.referenceID)\n                imageSrc = user.profileImage.referenceID;\n\n            // reset initials\n            this.initials(\"\");\n\n            var match = this.testForPaths(imageSrc);\n\n            if (match) {\n                // If a match is found, set the Initials, which should trigger the showing of these over the image\n                this.initials(user.getInitials());\n\n                // Generate a background colour for the icon\n                this.initialsColour(this.generateHexFrom(this.initials()));\n            } else {\n                this.icon(imageSrc);\n            }\n\n        }\n\n        return Header;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/beans/header.js?");

/***/ }),

/***/ "./src/beans/place.js":
/*!****************************!*\
  !*** ./src/beans/place.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n    Place bean\r\n    Maps a Place spec into a usable bean. Used in Knockout model for Site and layout.\r\n    @author Andy Monis\r\n    @date   09/07/2014\r\n*/\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! knockout */ \"knockout\"), __webpack_require__(/*! mixins/map */ \"./src/mixins/map.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (ko, Map) {\r\n        // This runs before Main has been called.\r\n\r\n        /**\r\n         * ###isIn\r\n         * Tests is an \"id\" is in an array of items\r\n         * @returns {boolean} true or false\r\n         */\r\n        function isIn(arr, id) {\r\n            for (var i = 0; i < arr.length; i++) {\r\n                if (arr[i].id === id) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        /**\r\n         * ###hash\r\n         * Given a Place, generates a unique hash for easy comparison testing.\r\n         * At present only uses the Place.id and number of Spaces. Could be enhanced to do a more complex check if required.\r\n         * @returns {boolean} true or false\r\n         */\r\n        function hash(p) {\r\n            var hash = [];\r\n            hash.push(p.id);\r\n            hash.push(\"-\");\r\n            hash.push(p.space.length);\r\n\r\n            p.hash = hash.join(\"\");\r\n        }\r\n\r\n        /**\r\n         * ##Place\r\n         */\r\n        function Place() {\r\n            // Basic bean structure that mirrors the Spec\r\n            this.icon = \"\";\r\n            this.id = \"\";\r\n            this.name = \"\";\r\n            this.label = \"\";\r\n            this.description = \"\";\r\n            this.initialSpace = []; // AMONIS: 26/04/2016: New property ( Sprint 84 ), used to indicate that a sapce should be shown first.\r\n            // Uses the new Desired mapping, as initialSpace is a String ( but PH will be making it an [ \"string \"] ) soon.\r\n            // This allows the bean to adapt the input and accept either undefined, \"string\" or [ \"string\" ] now and in the future\r\n            this.owner = {\r\n                \"id\": \"\",\r\n                \"fn\": \"\"\r\n            }; // Just store the ownerId and FN ( for ease of use ) for the place.\r\n\r\n            this.space = [\r\n                // Updated to include \"id\" && \"name\" propreties as the \"name\" is used to help load specific Spaces ( e.g. using \"launch\" param )\r\n                {\r\n                    \"id\": \"\",\r\n                    \"name\": \"\"\r\n                }\r\n            ];\r\n\r\n            // AMONIS: 16/11/2016: new property to contain \"accent\" & \"primary\" properties for CSS styling of the place\r\n            this.customisation = {\r\n                \"*\": \"*\"\r\n            };\r\n\r\n            // namespace: Used by the drive to request object\r\n            this.ns = \"pumpCo.user.place.request\";\r\n\r\n            // Pumpco property, added according to structure in spec.\r\n            this.parentId = \"\";\r\n\r\n            // Custom structure, used for running & displaying\r\n            this.oVisible = ko.observable(false);\r\n\r\n            // Custom property set by the Place Service, if this is the Owners Home\r\n            this.ownersPlace = false;\r\n\r\n            // Custom Property - Used by the Contacts Service to get the contacts for this Place.\r\n            this.contactCompId = undefined;\r\n\r\n            this.hash = \"\";\r\n        }\r\n\r\n\r\n        /**\r\n         * ###compare **static**\r\n         * Compares two Places for equality using the \"hash\" property.\r\n         * @returns {boolean} true or false\r\n         */\r\n        Place.compare = function (p1, p2) {\r\n            if (p1 instanceof Place && p2 instanceof Place) {\r\n                if (p1.hash === p2.hash) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            return false;\r\n        };\r\n\r\n        Place.prototype = {};\r\n\r\n        /**\r\n         * @method getContactsApp\r\n         * Searches through the Place Spec for a Contacts Book App. If one if found the property is added stored against the Place.\r\n         * This is used by the Contact Service to request the Contacts for this place.\r\n         * For example, the Users place has a different ContactApp-ComponentId to the Hubs ContactApp-ComponentId, so the\r\n         * routing returns just the correct set of users.\r\n         */\r\n        Place.prototype.getContactsApp = function (spec) {\r\n            if (!spec || !spec.space)\r\n                return undefined;\r\n\r\n            var contactBook = undefined;\r\n\r\n            var spaces = spec.space;\r\n            for (var i = 0; i < spaces.length; i++) {\r\n                var components = spaces[i].component;\r\n\r\n                // If there are no components specified, stop.\r\n                if (!components)\r\n                    break;\r\n\r\n                for (var j = 0; j < components.length; j++) {\r\n                    // var component = components[ j ];\r\n\r\n                    var appName = __get(\"params.appName\", components[j]);\r\n                    if (appName === \"ContactBook\") {\r\n                        contactBook = components[j];\r\n                        break;\r\n                    }\r\n                }\r\n                if (contactBook)\r\n                    break;\r\n            }\r\n\r\n            if (contactBook)\r\n                this.contactCompId = contactBook.id;\r\n        };\r\n\r\n        Place.prototype.getPulseBody = function () {\r\n            return {\r\n                \"place\": {\r\n                    \"ownerId\": this.owner.id || \"\",\r\n                    \"name\": this.name\r\n                }\r\n            };\r\n        };\r\n\r\n        Place.prototype.update = function (spec) {\r\n            var result = {\r\n                \"deleted\": [],\r\n                \"updated\": []\r\n            };\r\n\r\n            // Map, applies the spec directly the object, adding new properties and updating existing properties.\r\n            Map.fromJS(this, spec);\r\n\r\n            this.getContactsApp(spec);\r\n\r\n            // If the Spec contains spaces, remove any existing spaces that are not explicitly mentioned\r\n            // in the Spec. New spaces will be automatically added, this allows removal of spaces.\r\n            if (spec.space) {\r\n                for (var j = this.space.length; j > 0; j--) {\r\n                    var space = this.space[j - 1];\r\n                    if (isIn(spec.space, space.id)) {\r\n                        // Space is updated or new. Update the resultset\r\n                        result.updated.push(space.id);\r\n                    } else {\r\n                        // Space has been deleted\r\n                        this.space.splice(j, 1);\r\n                        // Space is deleted. Update the resultset\r\n                        result.deleted.push(space.id);\r\n                    }\r\n                }\r\n            }\r\n\r\n            hash(this);\r\n\r\n            // Return the results of the update process\r\n            return result;\r\n        };\r\n\r\n        /**\r\n         * ###getType\r\n         * AMONIS: 03/05/2016:\r\n         * Legacy function ( from Ext days ) to provide backwards Roadie capability.\r\n         * Allows this to be queried for its Type.\r\n         * This could be done more elegantly via \"bean instanceOf Place\"\r\n         */\r\n        Place.prototype.getType = function () {\r\n            return \"place\";\r\n        };\r\n\r\n        return Place;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://AOS/./src/beans/place.js?");

/***/ }),

/***/ "./src/beans/site.js":
/*!***************************!*\
  !*** ./src/beans/site.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n    Site bean\r\n    Maps a Site spec into a usable bean. Used in Knockout model for Site and layout.\r\n    @author Andy Monis\r\n    @date   09/07/2014\r\n*/\r\n// beans.site\r\n// ----------\r\n\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! knockout */ \"knockout\"), __webpack_require__(/*! mixins/map */ \"./src/mixins/map.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (ko, Map) {\r\n        // This runs before Main has been called.\r\n\r\n        // Site()\r\n        // constructor\r\n        function Site() {\r\n            // Basic bean structure that mirrors the Spec\r\n            this.application = {\r\n                \"*\": \"*\"\r\n            }; // Stores the known Applications for this user ( useful if the minimal sitespec is returned as not all spaes will neccessarily be shown. )\r\n            this.bootstrapSite = \"\",\r\n            this.bootstrapPath = \"\",\r\n            this.id = \"\";\r\n            this.name = \"\";\r\n            this.style = ko.observable(\"\");\r\n            this.title = ko.observable(\"\");\r\n            this.wallpaper = ko.observable(\"\");\r\n            this.owner = {\r\n                \"*\": \"*\"\r\n            };\r\n            this.place = {\r\n                // Get just the ID of the place to link to child;\r\n                Home: {\r\n                    id: \"\"\r\n                },\r\n                Mobile: {\r\n                    id: \"\"\r\n                }\r\n            };\r\n\r\n            // Pumpco property, added according to structure in spec.\r\n            this.parentId = \"\";\r\n\r\n            // Custom structure, used for running & displaying\r\n            this.oVisible = ko.observable(false);\r\n        }\r\n\r\n        Site.prototype = {};\r\n\r\n        Site.prototype.update = function (spec) {\r\n            Map.fromJS(this, spec);\r\n        };\r\n\r\n        return Site;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://AOS/./src/beans/site.js?");

/***/ }),

/***/ "./src/beans/space.js":
/*!****************************!*\
  !*** ./src/beans/space.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n    Space bean\r\n    Maps a Space spec into a usable bean. Used in Knockout model for Site and layout.\r\n    @author Andy Monis\r\n    @date   09/07/2014\r\n*/\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! knockout */ \"knockout\"), __webpack_require__(/*! mixins/map */ \"./src/mixins/map.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko, Map, log ){\r\n        // This runs before Main has been called.\r\n\r\n        function Space(){\r\n            // Basic bean structure that mirrors the Spec\r\n            this.description    = \"\";\r\n            //this.height       : ignored. Old Ext thing.\r\n            this.icon           = \"\";\r\n            this.id             = \"\";\r\n            this.label          = \"\";\r\n            this.lang           = { \"*\":\"*\" };\r\n            this.layout         = { \"*\":\"*\" };\r\n            this.name           = \"\";\r\n            this.params         = { \"*\":\"*\" };\r\n\r\n            // With an array of items, use the first item as a template. This will be removed when loaded\r\n            this.component      = [\r\n                { \"id\": \"\" }\r\n            ];\r\n\r\n            // Pumpco property, added according to structure in spec.\r\n            this.parentId       = \"\";\r\n\r\n            // Custom structure, used for running & displaying\r\n            this.oVisible       = ko.observable( false );\r\n\r\n            // Custom property used to store the count of successfully Added cogs ( booted )\r\n            // Updated by SpaceService.added()\r\n            this.added          = 0;\r\n\r\n            // Custom property used to allow a cog to set a background attribute for the space.\r\n            this.oBackground    = ko.observable( \"\" );\r\n\r\n            this.oEditMode      = ko.observable( false );\r\n        }\r\n\r\n        Space.prototype = {};\r\n\r\n        Space.prototype._nestedI18n = function( token, lang, locale ){\r\n            if( !lang || !locale )\r\n                return token;\r\n\r\n            // Get the desired language pack\r\n            var language = lang[ locale ];\r\n\r\n            if( language ){\r\n                if( language[ token ] ){\r\n                    return language[ token ];\r\n                }\r\n            }\r\n\r\n            //var hasParent = locale.indexOf( \"-\" );\r\n            var parent = locale.substring( 0, locale.indexOf( \"-\" ) );\r\n            return parent === \"\" ? token : this._nestedI18n( token, lang, parent );\r\n        };\r\n\r\n        /**\r\n         * Apply i18n to my fields\r\n         */\r\n        Space.prototype.i18n = function( locale ){\r\n            this.description = this._nestedI18n( this.description, this.lang, locale );\r\n            this.label       = this._nestedI18n( this.label, this.lang, locale );\r\n        };\r\n\r\n        Space.prototype.update = function( spec ){\r\n            Map.fromJS( this, spec );\r\n        };\r\n\r\n        /**\r\n         * ###editmode\r\n         * @param {JSON} mode [description]\r\n         * @return {JSON}      [description]\r\n         */\r\n        Space.prototype.editMode = function( mode ){\r\n            this.oEditMode( mode || false );\r\n        };\r\n\r\n        /**\r\n         * ###forEach\r\n         * Iterates over the collections of Components in this Space\r\n         * @param  {Function} callback [description]\r\n         */\r\n        Space.prototype.each = function( callback ){\r\n            for( var i=0; i<this.component.length; i++ ){\r\n                callback.call( this, i, this.component[ i ] );\r\n            }\r\n        };\r\n\r\n        return Space;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/beans/space.js?");

/***/ }),

/***/ "./src/beans/user.js":
/*!***************************!*\
  !*** ./src/beans/user.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n    User bean\n    Maps a User Spec into a Bean, please refer to user-profile-get-response for structure\n    @author Andy Monis\n    @date   09/07/2014\n*/\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! knockout */ \"knockout\"), __webpack_require__(/*! mixins/map */ \"./src/mixins/map.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(ko, Map, log) {\n        // This runs before Main has been called.\n\n        function User() {\n            // Basic bean structure that mirrors the Spec\n            this.profileImage = {\n                \"*\": \"*\"\n            };\n            this.profileBody = {\n                \"*\": \"*\"\n            };\n            this.contactDetails = {\n                \"*\": \"*\"\n            };\n            this.extensions = {\n                \"*\": \"*\"\n            };\n            this.visibility = {\n                \"*\": \"*\"\n            };\n            this.vcard = {\n                \"*\": \"*\"\n            };\n            this.team = {\n                \"*\": \"*\"\n            };\n            // Create localation property and default the values.\n            this.location = {\n                \"tz\": {\n                    \"label\": \"time zone\",\n                    \"type\": \"tz\",\n                    \"value\": \"Europe/London\"\n                },\n                \"locale\": {\n                    \"label\": \"locale\",\n                    \"type\": \"locale\",\n                    \"value\": \"en-gb\"\n                }\n            };\n            // AMONIS: 18/11/2016: Adding in the current property to the user profile\n            this.current = {\n                \"*\": \"*\"\n            };\n        }\n\n        User.prototype = {};\n\n        /**\n         * @method setLocation\n         * Sets the location property for the User\n         \"  location\": [{\n                \"label\": \"time zone\",\n                \"type\": \"tz\",\n                \"value\": \"Europe/London\"\n            },\n            {\n                \"label\": \"locale\",\n                \"type\": \"locale\",\n                \"value\": \"en-gb\"\n            }],\n         */\n        User.prototype.setLocation = function(location) {\n            for (var i = 0; i < location.length; i++) {\n                this.location[location[i].type] = location[i];\n            }\n        };\n\n\n        User.prototype.update = function(spec) {\n            Map.fromJS(this, spec);\n\n            // Create an easy access identifier\n            this.id = this.profileBody.username;\n\n            return this;\n        };\n\n        /**\n         * ###getTeams\n         */\n        User.prototype.getTeams = function() {\n            return this.team || [];\n        };\n\n        /**\n         * ###getInitials\n         * Gets the users Initials from the Bean ( vcard.fn property )\n         * @returns {string} capitalised initials or \"\"\n         */\n        User.prototype.getInitials = function() {\n            // Test for the existence of the FN property\n            var _fn = __get(\"vcard.fn\", this);\n            if (!_fn)\n                return \"\";\n\n            return the.abbreviate(_fn);\n        };\n\n        return User;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/beans/user.js?");

/***/ }),

/***/ "./src/bindings/app.js":
/*!*****************************!*\
  !*** ./src/bindings/app.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//\r\n// Pump API and Application 2.0.0.\r\n//\r\n// Copyright(c) 2015 Pumpco Inc.\r\n//\r\n\r\n// # bindings.app\r\n// ## *A Knockout binding to render an OS LEVEL APP to the display*\r\n// Note this is NOT an App in the Place / Space / Cog sense!\r\n// OS Apps are used to perform low-level interactions, mainly for development.\r\n\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! knockout */ \"knockout\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko ){\r\n    \tko.bindingHandlers.app = {\r\n            // ### template\r\n            // Creates the html template for the container\r\n            template: function( name, html, style ){\r\n                // Create the Cog template\r\n                var tmpl = \"\";\r\n\r\n                // Add the local cog styles if any are defined i.e. do nothing for \"\"\r\n                if( style && style !== \"\" ){\r\n                    var constrainedStyle = DOM.constrain( id, style );\r\n                    tmpl +=  \"<style type=\\\"text/css\\\">\" + constrainedStyle + \"</style>\";\r\n                }\r\n\r\n                // Add the main Cog container\r\n                tmpl += \"<div id='\" + name + \"' name='\" + name + \"'>\" + html + \"</div>\";\r\n\r\n                // return the template\r\n                return tmpl;\r\n            },\r\n\r\n\t\t    init: function( element, valueAccessor, allBindingsAccessor, context, bindingContext ) {\r\n                var data = valueAccessor();\r\n\r\n                // Add the \"app\" class to the element\r\n                ko.utils.toggleDomNodeCssClass( element, \"os-app\", true );\r\n\r\n                // Set the inner html to be as specified in the App Html property\r\n                element.innerHTML = ko.bindingHandlers.app.template( data.name, data.html, data.style );\r\n\r\n                function getModel(){\r\n                    return data.model;\r\n                }\r\n\r\n                // ko.bindingHandlers[ \"with\" ].init( element, getModel, allBindingsAccessor, context, bindingContext );\r\n                ko.bindingHandlers[ \"with\" ].init( element, valueAccessor, allBindingsAccessor, context, bindingContext );\r\n\r\n                // Notify that this does not control descendants i.e. carry on binding as normal on sub elements\r\n\t\t        return { controlsDescendantBindings: true };\r\n\t\t    },\r\n\r\n            update: function( element, valueAccessor, allBindingsAccessor, context, bindingContext ) {\r\n                var data = valueAccessor();\r\n\r\n                // re-apply the concealed class\r\n                //ko.utils.toggleDomNodeCssClass( element, \"concealed\", !data.oVisible() );\r\n\r\n                function getModel(){\r\n                    return data.model;\r\n                }\r\n\r\n                // ko.bindingHandlers[ \"with\" ].update( element, getModel, allBindingsAccessor, context, bindingContext );\r\n                ko.bindingHandlers[ \"with\" ].update( element, valueAccessor, allBindingsAccessor, context, bindingContext );\r\n\r\n                // Notify that this does not control descendants i.e. carry on binding as normal on sub elements\r\n                return { controlsDescendantBindings: true };\r\n            }\r\n\t\t};\r\n\r\n        return ko.bindingHandlers.stopBinding;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/bindings/app.js?");

/***/ }),

/***/ "./src/bindings/body.js":
/*!******************************!*\
  !*** ./src/bindings/body.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//data-bind=\"css:{'os-loading':$data.sites().length==0,'os-background':$data.sites().length>0 }\"\r\n/*\r\n    Events\r\n    An events controller for passing information between processing in the system.\r\n    Aimed at complex Aysnchronous events, not DOM events.\r\n\r\n    // AMONIS: 10/01/2017:\r\n    This is a 'root' level binding on the model. I have tested that this is only called\r\n    when changes are mode to the root properties of the model. This is correctly handled\r\n    by Knockout and performs well.\r\n\r\n    @author Andy Monis\r\n*/\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! knockout */ \"knockout\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko ){\r\n    \tko.bindingHandlers.body = {\r\n\t\t    init: function( element, valueAccessor, allBindingsAccessor, context, bindingContext ) {\r\n                var data = valueAccessor();\r\n                if( data && data.sites ){\r\n                    if( data.sites().length === 0 )\r\n                    \tko.utils.toggleDomNodeCssClass( element, \"os-loading\", true );\r\n                    else\r\n                    \tko.utils.toggleDomNodeCssClass( element, \"os-background\", true );\r\n                }\r\n                // Notify that this does not control descendants i.e. carry on binding as normal on sub elements\r\n\t\t        return { controlsDescendantBindings: false };\r\n\t\t    },\r\n            update: function( element, valueAccessor, allBindingsAccessor, context, bindingContext ) {\r\n                var data = valueAccessor();\r\n\r\n                if( data && data.sites ){\r\n                    if( data.sites().length === 0 ){\r\n                    \tko.utils.toggleDomNodeCssClass( element, \"os-loading\", true );\r\n                        ko.utils.toggleDomNodeCssClass( element, \"os-background\", false );\r\n                    }\r\n                    else{\r\n                        ko.utils.toggleDomNodeCssClass( element, \"os-loading\", false );\r\n                        ko.utils.toggleDomNodeCssClass( element, \"os-background\", true );\r\n                    }\r\n\r\n                    var platform = __get( \"kernel.platform\", data );\r\n                    if( platform && platform.size !== null ){\r\n                        // Set the size css property\r\n                        ko.utils.toggleDomNodeCssClass( element, \"os-small\", false );\r\n                        ko.utils.toggleDomNodeCssClass( element, \"os-medium\", false );\r\n                        ko.utils.toggleDomNodeCssClass( element, \"os-large\", false );\r\n                        ko.utils.toggleDomNodeCssClass( element, \"os-\" + platform.size, true );\r\n                        // Set the orientation property\r\n                        ko.utils.toggleDomNodeCssClass( element, \"os-landscape\", false );\r\n                        ko.utils.toggleDomNodeCssClass( element, \"os-portrait\", false );\r\n                        ko.utils.toggleDomNodeCssClass( element, \"os-\" + platform.orient, true );\r\n                    }\r\n                }\r\n                // Notify that this does not control descendants i.e. carry on binding as normal on sub elements\r\n                return { controlsDescendantBindings: false };\r\n            }\r\n\t\t};\r\n\r\n        return ko.bindingHandlers.stopBinding;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/bindings/body.js?");

/***/ }),

/***/ "./src/bindings/cog.js":
/*!*****************************!*\
  !*** ./src/bindings/cog.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n    Events\r\n    An events controller for passing information between processing in the system.\r\n    Aimed at complex Aysnchronous events, not DOM events.\r\n    @author Andy Monis\r\n*/\r\n\r\n// bindings.cog\r\n// ------------\r\n// Binding for generating the Cog container. All of the cogs html, css and js is contained in this.\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! knockout */ \"knockout\"), __webpack_require__(/*! utils/dom */ \"./src/utils/dom.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko, DOM ){\r\n    \tko.bindingHandlers.cog = {\r\n\r\n    \t    // ### template\r\n    \t    // Creates the html template for the container\r\n            template: function( id, name, html, style, params, editmode ){\r\n                // Create the Cog template\r\n                var tmpl = \"\";\r\n\r\n                // Add the local cog styles if any are defined i.e. do nothing for \"\"\r\n                if( style && style !== \"\" ){\r\n                    var selector = \"div[name=\\\"\" + name + \"\\\"]\";\r\n\r\n                    var constrainedStyle = DOM.constrain( selector, style );\r\n\r\n                    // Create a reasonable basePath from the name i.e. /system/systemCog/ from system.systemCog\r\n                    var index = name.indexOf( \".\" );\r\n                    var cogPath = \"/\" + name.substring( 0, index ).toLowerCase() + \"/\" + name.substring( index + 1 ) + \"/\";\r\n                    constrainedStyle = DOM.constrainUrls( params.basePath + cogPath, constrainedStyle );\r\n\r\n                    tmpl +=  \"<style type=\\\"text/css\\\" rel=\\\"stylesheet\\\" type=\\\"text/css\\\" media=\\\"screen\\\" scoped>\" + constrainedStyle + \"</style>\";\r\n                }\r\n\r\n                // Add the main Cog container\r\n                // if( editmode ){\r\n                    // tmpl += \"<div id='\" + id + \"' name='\" + name + \"' class='cog-body'>EDIT MODE</div>\";\r\n                // } else {\r\n                    // tmpl += \"<div class='draghandle svg svg-32 svg-settings concealed'></div>\";\r\n                    tmpl += \"<div id='\" + id + /*\"' name='\" + name + */ \"' class='cog-body'>\" + html + \"</div>\";\r\n                // }\r\n\r\n                // return the template\r\n                return tmpl;\r\n            },\r\n\r\n            // ### init\r\n            // Binging init handler. Called once on start up\r\n\t\t    init: function( element, valueAccessor, allBindingsAccessor, context, bindingContext ) {\r\n                var data = valueAccessor();\r\n\r\n                // Add the \"cog\" class to the element\r\n                ko.utils.toggleDomNodeCssClass( element, \"cog\", true );\r\n\r\n                // AMONIS: 03/10/2016: Moved the name property to the 'cog' container, to allow better styling\r\n                $(element).attr( \"name\", data.name );\r\n\r\n                // Set the Elements ID ( for easy binding of the sub-model to )\r\n                //element.setAttribute( \"id\", data.id );\r\n                // Set the Cog's inner HTML, whihc forms the basis of the Cog.\r\n                var layout = data.layout;\r\n                if( layout && layout.version && layout.version===\"2\" ){\r\n                    /*\r\n                        OS2 Rendering\r\n                        Essentially this creates a div with an ID and a NAME which the cog\r\n                        HTML is then added to.\r\n                     */\r\n\r\n                    // Set id and name on the element\r\n                    if( data.repaint() ){\r\n                        element.innerHTML = ko.bindingHandlers.cog.template( data.id, data.name, data.html, data.style, data.params );\r\n                        data.repaint( false );\r\n                    }\r\n\r\n                }\r\n\r\n                // Notify that this DOES control descendants i.e. Stop binding at this point.\r\n\t\t        return { controlsDescendantBindings: true };\r\n\r\n                // NOTE:\r\n                // For what its worth. At this point a Cog <div> will be created and the Cog will bind its own\r\n                // model to that element. So this is the end of the chain as far as the OS is concerned.\r\n\t\t    },\r\n\r\n            // ### update\r\n            // Binding update handler. Called whenever the UI or model update\r\n            update: function( element, valueAccessor, allBindingsAccessor, context, bindingContext ) {\r\n                var data = valueAccessor();\r\n\r\n                // re-apply the concealed class\r\n                ko.utils.toggleDomNodeCssClass( element, \"concealed\", !data.oVisible());\r\n\r\n\r\n                // Show / Hide the Drag handle\r\n                // var draghandle = $(element).find( \".draghandle\" )[0];\r\n                // ko.utils.toggleDomNodeCssClass( draghandle, \"concealed\", !data.oEditMode());\r\n\r\n                // Re-render the HTML if ( and only if ) the repaint flag is set.\r\n                // This is only done manually using the console a.cog.rerun() feature.\r\n                if( data.repaint() ){\r\n                    element.innerHTML = ko.bindingHandlers.cog.template( data.id, data.name, data.html, data.style, data.params );\r\n                    data.repaint( false );\r\n                }\r\n\r\n                // Notify that this DOES control descendants i.e. Stop binding at this point.\r\n                return { controlsDescendantBindings: true };\r\n            }\r\n\t\t};\r\n\r\n        return ko.bindingHandlers.stopBinding;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n/*\r\nAMONIS: 17-07-2014: For reference only. This is pretty much what the Data will look like\r\nwhen the binding is run ( this will be a bean.Cog )\r\n{\r\n    \"capability\": [{\r\n        \"direction\": \"PRODUCER\",\r\n        \"version\": \"0.1\",\r\n        \"trait\": \"site.spec.request\"\r\n    },\r\n    {\r\n        \"direction\": \"CONSUMER\",\r\n        \"version\": \"0.1\",\r\n        \"trait\": \"site.spec.response\"\r\n    },\r\n    {\r\n        \"direction\": \"PRODUCER\",\r\n        \"version\": \"0.1\",\r\n        \"trait\": \"pumpCo.roadie.release.request\"\r\n    },\r\n    {\r\n        \"direction\": \"CONSUMER\",\r\n        \"version\": \"0.1\",\r\n        \"trait\": \"pumpCo.roadie.release.response\"\r\n    },\r\n    {\r\n        \"direction\": \"CONSUMER\",\r\n        \"version\": \"0.1\",\r\n        \"trait\": \"exception.pumpCo.user.authentication.validation.invalidSite\"\r\n    },\r\n    {\r\n        \"direction\": \"PRODUCER\",\r\n        \"version\": \"0.1\",\r\n        \"trait\": \"pumpCo.user.login.request\"\r\n    },\r\n    {\r\n        \"direction\": \"CONSUMER\",\r\n        \"version\": \"0.1\",\r\n        \"trait\": \"pumpCo.user.login.response\"\r\n    },\r\n    {\r\n        \"direction\": \"CONSUMER\",\r\n        \"version\": \"0.1\",\r\n        \"trait\": \"exception.pumpCo.user.authorisation.validation.accessDenied\"\r\n    },\r\n    {\r\n        \"direction\": \"CONSUMER\",\r\n        \"version\": \"0.1\",\r\n        \"trait\": \"exception.pumpCo.user.authentication.validation.invalidCredentials\"\r\n    },\r\n    {\r\n        \"direction\": \"PRODUCER\",\r\n        \"version\": \"0.1\",\r\n        \"trait\": \"pumpCo.user.profile.passwordReset.request\"\r\n    },\r\n    {\r\n        \"direction\": \"CONSUMER\",\r\n        \"version\": \"0.1\",\r\n        \"trait\": \"pumpCo.user.profile.passwordReset.response\"\r\n    },\r\n    {\r\n        \"direction\": \"CONSUMER\",\r\n        \"version\": \"0.1\",\r\n        \"trait\": \"exception.pumpCo.user.authentication.validation.accountLocked\"\r\n    }],\r\n    \"cogType\": \"system\",\r\n    \"componentType\": \"cog\",\r\n    \"description\": \"\",\r\n    \"html\": \"<h1 style='color:red;'>Login Cog</h1><p data-bind='html:$data.test'>test will go here</p>\",\r\n    \"icon\": \"\",\r\n    \"id\": \"4dca52ee6ef96cfa2bc2b10f\",\r\n    \"label\": \"\",\r\n    \"lang\": {\r\n\r\n    },\r\n    \"layout\": {\r\n        \"version\": 1\r\n    },\r\n    \"name\": \"HealthPump.HealthPumpLoginCog\",\r\n    \"params\": {\r\n        \"basePath\": \"/PumpHouse/uploads\",\r\n        \"layout\": {\r\n            \"hflex\": 4,\r\n            \"vflex\": 2\r\n        },\r\n        \"page\": {\r\n            \"siteId\": \"00275367723eac1a00000001\",\r\n            \"logLevel\": 3\r\n        }\r\n    },\r\n    \"script\": \"the.App.onReady( function(){my.model = {};\\r\\n\\r\\n        my.model.test = \\\"This is set in code\\\";\\r\\n        // debugger;\\r\\n        // my.$bind( my.model ); \\r});\",\r\n    \"state\": {\r\n        \"trusted\": {\r\n\r\n        },\r\n        \"untrusted\": {\r\n\r\n        }\r\n    },\r\n    \"style\": \"\",\r\n    \"template\": \"default\",\r\n    \"parentId\": \"4dd246df5396042a4304c6c8\",\r\n    \"booted\": false,\r\n    \"my\": {\r\n        \"id\": \"4dca52ee6ef96cfa2bc2b10f\",\r\n        \"name\": \"HealthPump.HealthPumpLoginCog\",\r\n        \"attrs\": {\r\n            \"locale\": \"en\",\r\n            \"help\": \"<h1>No help specified</h1>\",\r\n            \"lang\": {\r\n                \"_super\": {\r\n\r\n                }\r\n            },\r\n            \"layout\": {\r\n                \"version\": 1\r\n            },\r\n            \"data\": {\r\n\r\n            }\r\n        },\r\n        \"state\": {\r\n            \"trusted\": {\r\n\r\n            },\r\n            \"untrusted\": {\r\n\r\n            }\r\n        },\r\n        \"pump\": {\r\n            \"_id\": \"4dca52ee6ef96cfa2bc2b10f\"\r\n        },\r\n        \"viewport\": {\r\n\r\n        },\r\n        \"script\": \"the.App.onReady( function(){\\n// CI Try block\\ntry {\\nmy.model = {};\\r\\n\\r\\n        my.model.test = \\\"This is set in code\\\";\\r\\n        // debugger;\\r\\n        // my.$bind( my.model ); \\r// CI Catch Block\\n} catch ( ex ) {\\nvar msg = ex.message || ex;\\nmy.$error( \\\"Error in Cog [\\\" + my.name + \\\"]: \\\" + ex.message );}\\n});\"\r\n    }\r\n}\r\n*/\r\n\n\n//# sourceURL=webpack://AOS/./src/bindings/cog.js?");

/***/ }),

/***/ "./src/bindings/header.js":
/*!********************************!*\
  !*** ./src/bindings/header.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n    Events\r\n    An events controller for passing information between processing in the system.\r\n    Aimed at complex Aysnchronous events, not DOM events.\r\n    @author Andy Monis\r\n*/\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! knockout */ \"knockout\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko ){\r\n    \tko.bindingHandlers.header = {\r\n\t\t    init: function( element, valueAccessor, allBindingsAccessor, context, bindingContext ) {\r\n                var data = valueAccessor();\r\n\r\n                if( data ){\r\n                    // Add the Id from the model. Helps with debugging and we may want this to be switched off.\r\n                    element.setAttribute( \"id\", data.id );\r\n\r\n                    // Add the \"place\" class to the element\r\n                    ko.utils.toggleDomNodeCssClass( element, \"header\", true );\r\n                }\r\n\r\n                // Notify that this does not control descendants i.e. carry on binding as normal on sub elements\r\n\t\t        return { controlsDescendantBindings: false };\r\n\t\t    },\r\n            update: function( element, valueAccessor, allBindingsAccessor, context, bindingContext ) {\r\n                var data = valueAccessor();\r\n\r\n                    if( data ){\r\n                    // AMONIS: 25/11/2016: Update the background header colour\r\n                    if( data.placeAccent() ){\r\n                        var style = data.placeAccent();\r\n                        var index = style.indexOf( \"!important\" );\r\n                        if( index === -1 )\r\n                            style = style.replace( \";\", \" !important;\" );\r\n\r\n                        element.setAttribute( \"style\", style );\r\n                    } else {\r\n                        element.setAttribute( \"style\", \"\" );\r\n                    }\r\n\r\n                    // re-apply the extra classes\r\n                    ko.utils.toggleDomNodeCssClass( element, \"singleapp\", data.oSingleApp() );\r\n\r\n                    // re-apply the concealed class\r\n                    ko.utils.toggleDomNodeCssClass( element, \"concealed\", !data.oVisible() );\r\n\r\n                    // apply the visiting class if visiting is true\r\n                    ko.utils.toggleDomNodeCssClass( element, \"visiting\", data.visiting() );\r\n                }\r\n                \r\n                // Notify that this does not control descendants i.e. carry on binding as normal on sub elements\r\n                return { controlsDescendantBindings: false };\r\n            }\r\n\t\t};\r\n\r\n        return ko.bindingHandlers.stopBinding;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n/*\r\n    The Header Bean being bound\r\n\r\n    {\r\n        // Basic bean structure that mirrors the Spec\r\n        this.place = ko.observable( \"place\" );\r\n        this.space = ko.observable( \"space\" );\r\n\r\n        // Custom structure, used for running & displaying\r\n        this.oVisible       = ko.observable( false );\r\n    }\r\n*/\r\n\n\n//# sourceURL=webpack://AOS/./src/bindings/header.js?");

/***/ }),

/***/ "./src/bindings/loader.js":
/*!********************************!*\
  !*** ./src/bindings/loader.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n    Bindings/Spinner\n    Bind the Toast Element to the Toast service model\n    @author Andy Monis\n*/\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! knockout */ \"knockout\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko ){\n        ko.bindingHandlers.loader = {\n            init: function(element, valueAccessor, allBindingsAccessor, context, bindingContext) {\n                var prop = ko.utils.unwrapObservable( valueAccessor() );\n\n                // return false to show that bindings will control descendants\n                return { controlsDescendantBindings: true };\n            },\n            update: function(element, valueAccessor, allBindingsAccessor, context, bindingContext) {\n                var prop = ko.utils.unwrapObservable( valueAccessor() );\n\n                if( prop ){\n                    // apply the concealed class\n            \t    ko.utils.toggleDomNodeCssClass( element, \"concealed\", prop.hidden() );\n\n                    // Update the elemtn style ( width )\n    \t\t\t\telement.setAttribute( \"style\", \"width:\" + prop.value() + \"%\" );\n                }\n                // return false to show that bindings will control descendants\n                return { controlsDescendantBindings: true };\n            }\n        };\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/bindings/loader.js?");

/***/ }),

/***/ "./src/bindings/place.js":
/*!*******************************!*\
  !*** ./src/bindings/place.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n    Events\r\n    An events controller for passing information between processing in the system.\r\n    Aimed at complex Aysnchronous events, not DOM events.\r\n    @author Andy Monis\r\n*/\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! knockout */ \"knockout\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko ){\r\n    \tko.bindingHandlers.place = {\r\n            /**\r\n             * ###toggleCustom\r\n             * Checks for the customisable property \"primary\" and sets the place\r\n             * element style to match\r\n             * @param  {DOMElemenet} element [description]\r\n             * @param  {string} custom  [description]\r\n             */\r\n            toggleCustom: function( element, custom ){\r\n                custom = custom || {};\r\n                if( custom.primary ){\r\n                    // Append the new properties on to any existing styles\r\n                    var existing = element.getAttribute( \"style\" );\r\n                    element.setAttribute( \"style\", existing + \" \" + custom.primary );\r\n                }\r\n            },\r\n\t\t    init: function( element, valueAccessor, allBindingsAccessor, context, bindingContext ) {\r\n                var data = valueAccessor();\r\n\r\n                // Add the Id from the model. Helps with debugging and we may want this to be switched off.\r\n                element.setAttribute( \"id\", data.id );\r\n\r\n                // Add the \"place\" class to the element\r\n                ko.utils.toggleDomNodeCssClass( element, \"place\", true );\r\n\r\n                // Add some owner details visully ( Site Place has no owner )\r\n                if( data.owner.id && data.owner.id!==\"\" ){\r\n                    // Add the \"is-owner\" class to the element if this IS their place\r\n                    ko.utils.toggleDomNodeCssClass( element, \"is-owner\", data.ownersPlace );\r\n\r\n                    // Add the \"not-owner\" class to the element if this IS NOT their place\r\n                    ko.utils.toggleDomNodeCssClass( element, \"not-owner\", !data.ownersPlace );\r\n                }\r\n\r\n                // AMONIS: 16/11/2016: Updated the Place background if one is specified\r\n                ko.bindingHandlers.place.toggleCustom( element, data.customisation );\r\n\r\n                // Add the \"place-nopad\" class to the element if there is no label.\r\n                // No label is NOT set on the login screen, so the header is hidden.\r\n                ko.utils.toggleDomNodeCssClass( element, \"place-nopad\", data.label===\"\" );\r\n\r\n                // Notify that this does not control descendants i.e. carry on binding as normal on sub elements\r\n\t\t        return { controlsDescendantBindings: false };\r\n\t\t    },\r\n            update: function( element, valueAccessor, allBindingsAccessor, context, bindingContext ) {\r\n                var data = valueAccessor();\r\n\r\n                // AMONIS: 16/11/2016: Updated the Place background if one is specified\r\n                ko.bindingHandlers.place.toggleCustom( element, data.customisation );\r\n\r\n                // re-apply the concealed class\r\n                ko.utils.toggleDomNodeCssClass( element, \"concealed\", !data.oVisible());\r\n\r\n                // Notify that this does not control descendants i.e. carry on binding as normal on sub elements\r\n                return { controlsDescendantBindings: false };\r\n            }\r\n\t\t};\r\n\r\n        return ko.bindingHandlers.stopBinding;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n/*\r\n    The Place Bean being bound\r\n\r\n     function Place(){\r\n        // Basic bean structure that mirrors the Spec\r\n        this.icon       = \"\";\r\n        this.id         = \"\";\r\n        this.name       = \"\";\r\n\r\n        this.space      = [\r\n            { \"id\": \"\" }\r\n        ];\r\n\r\n        this.customisable {\r\n            \"accent\": \"some css string\",\r\n            \"primary\" \"some css string\"\r\n        }\r\n\r\n        // Pumpco property, added according to structure in spec.\r\n        this.parentId       = \"\";\r\n\r\n        // Custom structure, used for running & displaying\r\n        this.oVisible       = ko.observable( false );\r\n    }\r\n*/\r\n\n\n//# sourceURL=webpack://AOS/./src/bindings/place.js?");

/***/ }),

/***/ "./src/bindings/snackbar.js":
/*!**********************************!*\
  !*** ./src/bindings/snackbar.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n    Bindings/Toast\n    Bind the Toast Element to the Toast service model\n    @author Andy Monis\n*/\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! knockout */ \"knockout\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko ){\n        ko.bindingHandlers.snackbar = {\n            makeCardAccessor: function( valueAccessor ){\n                return function(){\n                    var modelValue = valueAccessor(),\n                        unwrappedValue = ko.utils.peekObservable(modelValue);    // Unwrap without setting a dependency here\n\n                    return {\n                        \"data\": modelValue,\n                        'templateEngine': ko.nativeTemplateEngine.instance,\n                        \"name\": \"snackbar-template\"\n                    }\n                };\n            },\n            init: function(element, valueAccessor, allBindingsAccessor, context, bindingContext) {\n                var prop = ko.utils.unwrapObservable( valueAccessor() );\n\n                if( prop ){\n                    var va = ko.bindingHandlers[ 'snackbar' ].makeCardAccessor( valueAccessor );\n\n                    // Trigger the template binding\n                    ko.bindingHandlers.template.init( element, va );\n                }\n\n                // return false to show that bindings will control descendants\n                return { controlsDescendantBindings: true };\n            },\n            update: function(element, valueAccessor, allBindingsAccessor, context, bindingContext) {\n                var prop = ko.utils.unwrapObservable( valueAccessor() );\n\n                if( prop ){\n                    var va = ko.bindingHandlers[ 'snackbar' ].makeCardAccessor( valueAccessor );\n\n                    // apply the concealed class\n            \t    ko.utils.toggleDomNodeCssClass( element, \"concealed\", prop.hidden() );\n                    ko.utils.toggleDomNodeCssClass( element, \"slideInUp\", !prop.hidden() );\n                    ko.utils.toggleDomNodeCssClass( element, \"animated\", !prop.hidden() );\n\n                    // Call the template update binding\n                    ko.bindingHandlers.template.update( element, va, allBindingsAccessor, context, bindingContext );\n                }\n                // return false to show that bindings will control descendants\n                return { controlsDescendantBindings: true };\n            }\n        };\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/bindings/snackbar.js?");

/***/ }),

/***/ "./src/bindings/space.js":
/*!*******************************!*\
  !*** ./src/bindings/space.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n    Events\r\n    An events controller for passing information between processing in the system.\r\n    Aimed at complex Aysnchronous events, not DOM events.\r\n    @author Andy Monis\r\n*/\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! knockout */ \"knockout\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko ){\r\n    \tko.bindingHandlers.space = {\r\n\t\t    init: function( element, valueAccessor, allBindingsAccessor, context, bindingContext ) {\r\n                var data = valueAccessor();\r\n\r\n                // Add the Id from the model. Helps with debugging and we may want this to be switched off.\r\n                element.setAttribute( \"id\", data.id );\r\n                element.setAttribute( \"name\", data.name );\r\n\r\n                // Add the \"space\" class to the element\r\n                ko.utils.toggleDomNodeCssClass( element, \"space\", true );\r\n\r\n                // Add the layout.type class to the element ( default to \"flow\" if not specified )\r\n                // Changed from \"cover\" which does not allow scrolling. Flow is a better default as it\r\n                // does all scrolling, so adapts better.\r\n                var layout = data.layout.type || \"flow\";\r\n                ko.utils.toggleDomNodeCssClass( element, layout, true );\r\n\r\n\t\t        // Notify that this does not control descendants i.e. carry on binding as normal on sub elements\r\n                return { controlsDescendantBindings: false };\r\n\t\t    },\r\n            update: function( element, valueAccessor, allBindingsAccessor, context, bindingContext ) {\r\n                var data = valueAccessor();\r\n\r\n                // re-apply the concealed class\r\n                ko.utils.toggleDomNodeCssClass( element, \"concealed\", !data.oVisible());\r\n\r\n                // apply the background style\r\n                element.style[ \"background\" ] = data.oBackground();\r\n\r\n                // Notify that this does not control descendants i.e. carry on binding as normal on sub elements\r\n                return { controlsDescendantBindings: false };\r\n            }\r\n\t\t};\r\n\r\n        return ko.bindingHandlers.stopBinding;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n/*\r\n    The Space Bean being bound\r\n\r\n    function Space(){\r\n        // Basic bean structure that mirrors the Spec\r\n        this.description    = \"\";\r\n        //this.height       : ignored\r\n        this.icon           = \"\";\r\n        this.id             = \"\";\r\n        this.label          = \"\";\r\n        this.lang           = { \"*\":\"*\" };\r\n        this.layout         = {};\r\n        // this.langUrl        = \"\";\r\n        this.name           = \"\";\r\n\r\n        // With an array of items, use the first item as a template. This will be removed when loaded\r\n        this.component      = [\r\n            { \"id\": \"\" }\r\n        ];\r\n\r\n        // Pumpco property, added according to structure in spec.\r\n        this.parentId       = \"\";\r\n\r\n        // Custom structure, used for running & displaying\r\n        this.oVisible       = ko.observable( false );\r\n    }\r\n*/\r\n\n\n//# sourceURL=webpack://AOS/./src/bindings/space.js?");

/***/ }),

/***/ "./src/bindings/toast.js":
/*!*******************************!*\
  !*** ./src/bindings/toast.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n    Bindings/Toast\r\n    Bind the Toast Element to the Toast service model\r\n    @author Andy Monis\r\n*/\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! knockout */ \"knockout\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko ){\r\n        ko.bindingHandlers.toast = {\r\n\r\n            // This is how the ForEach binding works ( as written by Knockout people )\r\n            // makeTemplateValueAccessor: function(valueAccessor) {\r\n            //     return function() {\r\n            //         var modelValue = valueAccessor(),\r\n            //             unwrappedValue = ko.utils.peekObservable(modelValue);    // Unwrap without setting a dependency here\r\n\r\n            //         // If unwrappedValue is the array, pass in the wrapped value on its own\r\n            //         // The value will be unwrapped and tracked within the template binding\r\n            //         // (See https://github.com/SteveSanderson/knockout/issues/523)\r\n            //         if ((!unwrappedValue) || typeof unwrappedValue.length == \"number\")\r\n            //             return { 'foreach': modelValue, 'templateEngine': ko.nativeTemplateEngine.instance };\r\n\r\n            //         // If unwrappedValue.data is the array, preserve all relevant options and unwrap again value so we get updates\r\n            //         ko.utils.unwrapObservable(modelValue);\r\n            //         return {\r\n            //             'foreach': unwrappedValue['data'],\r\n            //             'as': unwrappedValue['as'],\r\n            //             'includeDestroyed': unwrappedValue['includeDestroyed'],\r\n            //             'afterAdd': unwrappedValue['afterAdd'],\r\n            //             'beforeRemove': unwrappedValue['beforeRemove'],\r\n            //             'afterRender': unwrappedValue['afterRender'],\r\n            //             'beforeMove': unwrappedValue['beforeMove'],\r\n            //             'afterMove': unwrappedValue['afterMove'],\r\n            //             'templateEngine': ko.nativeTemplateEngine.instance\r\n            //         };\r\n            //     };\r\n            // },\r\n\r\n            makeCardAccessor: function( valueAccessor ){\r\n                return function(){\r\n                    var modelValue = valueAccessor(),\r\n                        unwrappedValue = ko.utils.peekObservable(modelValue);    // Unwrap without setting a dependency here\r\n\r\n                    var accessor = undefined;\r\n\r\n                    // Toast expects the data to be a model.Hash\r\n                    var messages = unwrappedValue !== undefined ? unwrappedValue.messages.data() : [];\r\n                    var tmpl     = unwrappedValue !== undefined ? unwrappedValue[ \"tmpl\" ] : \"tmpl\";\r\n\r\n                    ko.utils.unwrapObservable( modelValue );\r\n\r\n                    accessor = {\r\n                        \"foreach\":          messages,\r\n                        'templateEngine':   ko.nativeTemplateEngine.instance,\r\n                        \"name\":             tmpl\r\n                    };\r\n\r\n                    return accessor;\r\n                };\r\n            },\r\n\r\n            init: function(element, valueAccessor, allBindingsAccessor, context, bindingContext) {\r\n                var va = ko.bindingHandlers[ 'toast' ].makeCardAccessor( valueAccessor );\r\n\r\n                // Trigger the template binding\r\n                ko.bindingHandlers.template.init( element, va );\r\n\r\n                // return false to show that bindings will control descendants\r\n                return { controlsDescendantBindings: true };\r\n            },\r\n            update: function(element, valueAccessor, allBindingsAccessor, context, bindingContext) {\r\n                // debugger;\r\n                var va = ko.bindingHandlers[ 'toast' ].makeCardAccessor( valueAccessor );\r\n\r\n                // Call the template update binding\r\n                ko.bindingHandlers.template.update( element, va, allBindingsAccessor, context, bindingContext );\r\n\r\n                // return false to show that bindings will control descendants\r\n                return { controlsDescendantBindings: true };\r\n            }\r\n        };\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/bindings/toast.js?");

/***/ }),

/***/ "./src/cog/endpoint.js":
/*!*****************************!*\
  !*** ./src/cog/endpoint.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 1.0.0\r\n * Copyright(c) 2011 Healthpump Inc.\r\n */\r\n/**\r\n * @class pumpco.core.ui.cog.Script\r\n * Mixin Script provides a mixin to process the Cog code.\r\n * This wraps the code in a try / catch to prevent small errors crashign the platform as well as providing a 'debug' option\r\n * which includes a dynamic debugger;\r\n * The Script mixin should do more checking for dodgy code, to prevent hacks into the system.\r\n * @author: Andy Monis\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! core/io/shims/cog */ \"./src/core/io/shims/cog.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( log, CogShim ){\r\n\r\n    var Endpoint = {\r\n        /**\r\n         * @method initEndPoint\r\n         * Creates a new endpoint ( a producer and a consumer to be precise ).\r\n         * Adds in any capabilities\r\n         */\r\n        initEndPoint: function ( pump ) {\r\n            // var system = the.app.model.system;\r\n\r\n            var address = this.id;\r\n\r\n            this.createV2Endpoints( pump, address, this.capability );\r\n        },\r\n\r\n        /**\r\n         * @method createV2Endpoints\r\n         * Creates Camelet style endpoints, which are now the default.\r\n         */\r\n        createV2Endpoints: function( pump, name, routes ){\r\n            the.log.debug(this, \"Service Mixin init()\");\r\n\r\n            var consume = [];\r\n            var produce = [];\r\n\r\n            // AMONIS: 02/12/2016: Enhanced to use Bean to determine the capabilities.\r\n            // This is part of enhancing the \"capabilities\" in resources.json\r\n            var _routes = this.getPulseRegistrations();\r\n\r\n            for (var i = 0; i < _routes.length; i++) {\r\n                var route = _routes[ i ];\r\n                // e.g. { \"direction\": \"PRODUCER\", \"trait\": \"internal.contact.list.request\",\"version\": \"0.1\" },\r\n                if( route.direction === \"PRODUCER\" ){\r\n                    produce.push( { cls:route.trait, list:\"white\" } );\r\n                } else {\r\n                    consume.push( { cls:route.trait, list:\"white\" } );\r\n                }\r\n\r\n                the.log.debug(this, \"COG Route whitelisting of [\" + route.trait + \"] to Target [\" + route.direction + \"] \");\r\n            }\r\n\r\n            // Create the Endpoint Shim with the correct endpoint Black / White listing ( capabilities )\r\n            // AMONIS: 11/05/2016: Updated to RequireJs implementation\r\n            // this.endPoint = pumpco.core.io.camelet.shims.Cog( {\r\n            this.endPoint = new CogShim( {\r\n                name:       name,\r\n                pump:       pump,\r\n                consume:    consume,\r\n                produce:    produce\r\n            } );\r\n        },\r\n\r\n        /**\r\n         * Method to deinitialise a Cog EndPoint.\r\n         * The purpose of this is to clear up the end points in the pump when a cog is removed.\r\n         */\r\n        deinitEndPoint: function(){\r\n            this.endPoint.delRoute( { targetName: this.address });\r\n        }\r\n    };\r\n\r\n    return Endpoint;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/cog/endpoint.js?");

/***/ }),

/***/ "./src/cog/my.js":
/*!***********************!*\
  !*** ./src/cog/my.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n *\r\n  .\r\n*/\r\n\r\n\r\n/**\r\n * # My\r\n * The my. API is the main interface between a Cog and the outside aOS environment.\r\n * It provides a shielded / consistent environment for running in.\r\n *\r\n * ### resources.json\r\n * ```js\r\n * // Provides D3 graphing capabilities\r\n * { \"name\":\"graphing\", \"version\":\"1\", \"options\":{} }\r\n * // Provides Two Factor authentication capabilities to the Login Form Cog\r\n * { \"name\":\"two-factor-auth\", \"version\":\"1\", \"options\":{} }\r\n * * // Provides Vue.js for use in the cog ( vue js is at version 2 )\r\n * { \"name\":\"vue\", \"version\":\"2\", \"options\":{} }\r\n * ```\r\n *\r\n * @type {Object}\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n    __webpack_require__(/*! aos.config */ \"./src/aos.config.js\"),\r\n    __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"),\r\n    __webpack_require__(/*! core/invoke */ \"./src/core/invoke.js\"),\r\n    __webpack_require__(/*! core/io/beans/message */ \"./src/core/io/beans/message.js\"),\r\n    __webpack_require__(/*! core/io/beans/exchange */ \"./src/core/io/beans/exchange.js\"),\r\n    __webpack_require__(/*! utils/roadieurl */ \"./src/utils/roadieurl.js\"),\r\n    __webpack_require__(/*! notifyjs */ \"notifyjs\"),\r\n    __webpack_require__(/*! cog/vue */ \"./src/cog/vue.js\"),\r\n    // Libraries\r\n    __webpack_require__(/*! phil */ \"phil\")\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function( config, log, invoke, Message, Exchange, RoadieUrl, Notify, VueShim ){\r\n\r\n    var My = {\r\n        //\r\n        boot: function( params ){\r\n            //this.address, this.capabilityevent\r\n            this.initEndPoint( params.pump );\r\n\r\n            this.createClosure(\r\n                params.place,\r\n                params.space,\r\n                params.user,\r\n                params.platform,\r\n                params.contacts,\r\n                params.store,\r\n                params.location,\r\n                params.jss,\r\n                params.runtime,\r\n                params.network,\r\n                params.environment,\r\n                params.cogParams,\r\n                params.libraries\r\n            );\r\n\r\n            return this;\r\n        },\r\n\r\n        //\r\n        //\r\n        //\r\n        deboot: function(){\r\n            // Iterate through all of the properties in the object and set to null.\r\n            // I don't think that there is anything that requires specific cleaning up at this point?\r\n\r\n            var postKeys = Object.keys( this.my );\r\n            var diffKeys = $( postKeys ).not( this.my._preKeys ).get();\r\n\r\n            for( var i=0; i<diffKeys.length; i++ ){\r\n                var key = diffKeys[ i ];\r\n                this.my[ key ] = undefined;\r\n            }\r\n\r\n            //Unbind the UI\r\n            phil.unbind( this.my.id );\r\n\r\n            // Trigger Deinit for the EndPoints\r\n            this.deinitEndPoint();\r\n        },\r\n\r\n        //\r\n        //\r\n        //\r\n        reboot: function( cog ){\r\n\r\n            var my      = this.my;\r\n            var params  = this.params;\r\n\r\n            // Update the script from what is stored in the bean after modification.\r\n            my.script   = cog.script;\r\n            my.html     = cog.html;\r\n\r\n            // Eval the script and create 'my' closure around the variables declared in this function.\r\n            eval( this.my.script );\r\n        },\r\n\r\n        //\r\n        //\r\n        //\r\n        createClosure: function( place, space, user, platform, contacts, store, location, jss, runtime, network, environment, cogParams, libraries ){\r\n            //\r\n            // PARAMS\r\n            //\r\n            var params = this.params || {};\r\n\r\n            // AMONIS: 31/10/2016: S96#51 Apply the CogParams to the params to be passed into the Cog.\r\n            for( var key in cogParams ){\r\n                params[ key ] = cogParams[ key ];\r\n            }\r\n\r\n            // **params.page** pass in windows.params to the cog\r\n            params.page = window.params;\r\n\r\n            // AMONIS: 23/09/2015: Add \"location\" to the params\r\n            params.location = location;\r\n\r\n            // AMONIS: 25/11/2016: Pass in Place information in the place property\r\n            params.place = {\r\n                customisation: __get( \"place.customisation\" ) || undefined\r\n            };\r\n\r\n            //\r\n            // MY\r\n            //\r\n            var my = this.my = {};\r\n\r\n            // Set the id\r\n            my.id = this.id;\r\n\r\n            // Set the name\r\n            my.name = this.name;\r\n\r\n            // Expose the libraries\r\n            for( var key in libraries ){\r\n                if( key === VueShim.match ){\r\n                    VueShim.setup( my, libraries[ key ] );\r\n                }\r\n            }\r\n\r\n            // Set the Cards config\r\n            my.cards = this.cards;\r\n\r\n            // Add my $able\r\n            my = this.addMyAble( my );\r\n\r\n            // Add my._attrs\r\n            my = this.addMyAttributes( my, user, runtime, location, environment );\r\n\r\n            // Add my Internationisation\r\n            my = this.addMyI18n( my, user );\r\n\r\n            // Add my logging\r\n            my = this.addMyLogging( my );\r\n\r\n            // Add my.MVVM ( all Model View stuff )\r\n            my = this.addMyMVVM( my );\r\n\r\n            // Add the Events and Pulsing with my.pump & my.pump.pulse capabilitites\r\n            my = this.addMyPump( my, params );\r\n\r\n            // Add my.Services stuff ( $place() $space() etc )\r\n            my = this.addServices( my, place, space, platform, params );\r\n\r\n            // Add Cog specific Startup methods and utilisites\r\n            my = this.addMyStartup( my, params, network );\r\n\r\n            // Add Ui features including JQuery selectors ( scoped to my )\r\n            my = this.addMyUi( my, location );\r\n\r\n            // Add the my.viewport\r\n            my = this.addMyViewport( my );\r\n\r\n            // Add \"contacts\" to the my object\r\n            my = this.addMyContacts( my, contacts );\r\n\r\n            // Add \"localstroage\" capabilities to the cogs\r\n            my = this.addMyStore( my, store, jss );\r\n\r\n            // Add \"utility\" capabilities to the cogs\r\n            my = this.addMyUtils( my, params );\r\n\r\n            // Add \"date\" helpers\r\n            my = this.addMyDate( my );\r\n\r\n\r\n            //\r\n            //SCRIPT\r\n            //\r\n\r\n            // Add the 'debugger' handling to the Script dynamically\r\n            if( params && params.debug )\r\n                this.script = this.addDebugger( this.script );\r\n\r\n            //Add the 'try/catch' handling to the Script dynamically\r\n            this.script = this.addTryCatch ? this.addTryCatch( this.script, params.useStrict ) : this.script;\r\n\r\n            // PreKeys caches the keys prior to booting. This enables deboot to easily identify what\r\n            // was user code created and what is system required.\r\n            my._preKeys = [];\r\n            my._preKeys = Object.keys( my );\r\n\r\n            // Eval the script and create 'my' closure around the variables declared in this function.\r\n            // AMONIS: 15/02/2017: Updated to override the eval with ever higher levels of protection\r\n            this.runSystemEval( this.script, my, params, libraries );\r\n\r\n            return my;\r\n        },\r\n\r\n        //###runEval\r\n        // To create the Closure with the correct scope, remove as many of the stray (construction) variables as possible.\r\n        // In the future these would be \"let\" but for now, we have little choice.\r\n        // AMONIS: 15/02/2017\r\n        // TODO: Needs to tie down the SYSTEM level permissions a little\r\n        //\r\n        runSystemEval: function( script, my, params, libraries ){\r\n            // Block out closures from the requirejs include\r\n            My = undefined;\r\n            log = undefined;\r\n\r\n            // AMONIS: 15/02/2017: Block out Ext functionality\r\n            // Ext = {\r\n            //     // If Ext is used, or is setup at any point, it will check for enableGarbageCollector periodically. This prevents errors\r\n            //     enableGarbageCollector: false,\r\n            //     cacheableFunctionFactory: function(){\r\n            //         // return a null function to mock the factory\r\n            //         return function(){};\r\n            //     }\r\n            // };\r\n\r\n\r\n            // Check to see if permissions are more restricted, otherwise eval cod ehere.\r\n            if ( !this.cogType || this.cogType.toLowerCase() === \"platform\" || this.cogType.toLowerCase() === \"user\"  ){\r\n                this.runPlatformEval( this.script, my, params, libraries );\r\n            } else {\r\n                // eval the script\r\n                eval( script );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * ###runPlatformEval\r\n         * AMONIS: 15/02/2017\r\n         * TODO: Needs to tie down the PLATFORM level permissions more tightly\r\n         */\r\n        runPlatformEval: function( script, my, params, libraries ){\r\n            var $ = function(){ console.log( \"$ usage not allowed directly. try my.$ instead.\" ); };\r\n\r\n            // Check to see if permissions are more restricted, otherwise eval cod ehere.\r\n            if ( !this.cogType || this.cogType.toLowerCase() === \"user\"  ){\r\n                this.runUserEval( this.script, my, params, libraries );\r\n            } else {\r\n                // eval the script\r\n                eval( script );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * ###runUserEval\r\n         * AMONIS: 15/02/2017\r\n         * TODO: Needs to tie down the USER level permissions fully\r\n         */\r\n        runUserEval: function( script, my, params, libraries ){\r\n            // eval the script\r\n            eval( script );\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @method my.$ableTo\r\n         * Provides access to helper functions to check permissions\r\n         */\r\n        addMyAble: function( obj ){\r\n\r\n            /**\r\n             * @method my.$able\r\n             * Returns either the maximum permission level available or true/false if\r\n             * the request is made with a request i.e.\r\n             * my.$able() would return \"owner\"\r\n             * my.$able(\"comment\") would return true or false etc\r\n             * @param {bool} true if the action can be done or false if a requested permission is made\r\n             */\r\n            obj.$able = function( requestPermission ){\r\n\r\n                var level = {\r\n                    \"none\": 0,\r\n                    \"subscribe\": 1,\r\n                    \"visit\": 2,\r\n                    \"comment\": 4,\r\n                    \"edit\": 8,\r\n                    \"proxy\": 16,\r\n                    \"owner\": 16\r\n                }\r\n\r\n                // Check to see if permissions are defined\r\n                var myPermission = this.attrs.permission.level;\r\n\r\n                var cogPermission =  level[ myPermission ];\r\n\r\n                if( requestPermission ){\r\n                    var desiredPermission = level[ requestPermission ];\r\n\r\n                    if( desiredPermission <= cogPermission )\r\n                        return true;\r\n                    else\r\n                        return false;\r\n                } else {\r\n                    return myPermission;\r\n                }\r\n            };\r\n\r\n            return obj;\r\n        },\r\n\r\n        /**\r\n         * @method addMyAttributes\r\n         * Add attrs to the 'my' object\r\n         * AMONIS: 16/08/2016: Add permssion into attrs\r\n         * @return {object} my\r\n         * @private\r\n         */\r\n        addMyAttributes: function( obj, user, runtime, location, environment ){\r\n            var attrs = obj[ \"_attrs\" ] = obj[ \"attrs\" ] = {};\r\n\r\n            if( this.bean ){\r\n                var parent = bean.getParent();\r\n\r\n                /**\r\n                 * @property {String} my.attrs.parentName the name of the Cogs parent ( a space )\r\n                 */\r\n                attrs.parentName = parent.getName();\r\n\r\n                /**\r\n                 * @property {String} my.attrs.parentId the Id of the Cogs parent ( a space)\r\n                 */\r\n                attrs.parentId = parent.getId();\r\n            }\r\n\r\n            /**\r\n             * @property {String} my.attrs.locale the current locale\r\n             */\r\n            var locale = __get( \"location.locale.value\", user );\r\n            attrs.locale = locale || \"en\";\r\n\r\n            /**\r\n             * @property {String} help the help documentation in HTML format\r\n             */\r\n            attrs.help = this.help || \"<h1>No help specified</h1>\";\r\n\r\n            /**\r\n             * @property {Object} lang Object in the format of { en:{ \"token\":\"value\" }, sp:{ \"token\":\"translation\" } }\r\n             */\r\n            attrs.lang = __clone( this.lang );\r\n\r\n            /**\r\n             *  @property {Object} layout Object containing the layout spec\r\n             */\r\n            attrs.layout = this.layout || {};\r\n            //attrs.layout.version = \"2\"; // force rendering to version of OS2\r\n            if( !attrs.layout.version )\r\n                attrs.layout.version = 2;\r\n\r\n            /**\r\n             * @property {String} url the roadie url as provided\r\n             */\r\n            attrs.url = this.roadieUrl;\r\n\r\n            /**\r\n             * @property {object} state as passed in via the roadie\r\n             */\r\n            attrs.state || undefined;\r\n\r\n            // DEPRECATED Set the state as passed in by the roadie.\r\n            obj.state = this.state || undefined;\r\n\r\n            /**\r\n             * @property {object} data as passed in via the spec\r\n             */\r\n            attrs.data = this.data || {};\r\n\r\n            /*\r\n             * @property attrs.user is set for easy access without querying the Contacts service\r\n             */\r\n            attrs.user = user;\r\n\r\n            /*\r\n             * @property attrs.runtime provides the Cog with a view of how it is being run.\r\n             */\r\n            attrs.runtime = runtime;\r\n\r\n            /*\r\n             * @property {json} environment information from the environment service\r\n             * e.g. {browser:bool,cordova:bool}\r\n             */\r\n            attrs.environment = environment;\r\n\r\n            /*\r\n             * @property attrs.pumpface provides the PumpFacePath\r\n             * AMONIS: 31/03/2016: Used for Card Templating and setting the Path to the HTML file in Phil.\r\n             * This is provided by params.location in live.js\r\n             * pumpfacepath is returned by the startup params\r\n             */\r\n            attrs.pumpface = location.pumpface;\r\n\r\n            /*\r\n             * @property attrs.fixtures provides the PumpFacePath for the fixtures\r\n             * AMONIS: 31/03/2016: Used for Card Templating and setting the Path to the HTML file in Phil.\r\n             * This is provided by params.location in live.js\r\n             * pumpfacepath is returned by the startup params\r\n             */\r\n            attrs.fixtures = location.fixtures;\r\n\r\n            /**\r\n             * [function description]\r\n             * @return {string} the authtoken that can be manually added to the headers\r\n             */\r\n            attrs.authToken = function(){\r\n                // Get the authToken from the Pump via an API call.\r\n                return invoke.run( \"io.authToken.get\", {} );\r\n            }\r\n\r\n            /**\r\n             * ###attrs.permission provides permission information about the cog\r\n             * AMONIS: 16/08/2016: Updated permssions as the data was not getting through.\r\n             * Hid in attrs to keep out of the way.\r\n             * @type {JSON} e.g. { level:\"owner\" }\r\n             */\r\n            attrs.permission = { level: this.permission ? this.permission.level : \"none\" };\r\n\r\n            return obj;\r\n        },\r\n\r\n        /**\r\n         * DEPRECATED\r\n         * @method to add the environment to My\r\n         * @deprecated all properties moved to my.attrs\r\n         * @private\r\n         */\r\n        addMyEnvironment: function( obj ){\r\n            // Pass in the running environment to the Cog\r\n            obj[ \"environment\" ] = this.environment || {};   // Add the default properties to the _environment\r\n            obj[ \"environment\" ].version = this.version;    // Add the cog rendering version to the _environment\r\n\r\n            return obj;\r\n        },\r\n\r\n        /**\r\n         * @method addMyI18n\r\n         * Adds all Internationalisation to the My object\r\n         * @return {object} my\r\n         */\r\n        addMyI18n : function( obj, user ){\r\n\r\n            var me = obj;\r\n\r\n            // Store the lang { en:{}, sv:{} } and locale \"en\" in the My closure\r\n            // Store the lang in for the i18n Binding\r\n            me._lang = this.lang;\r\n\r\n            // Store the locale for the i18n binding\r\n            var locale = __get( \"location.locale.value\", user );\r\n            me._locale = locale ? locale.toLowerCase() : \"en\";\r\n\r\n            /**\r\n             * @method my._nestedI18n looks recursively for a token e.g. \"en-gb\", then \"en\"\r\n             * @private\r\n             */\r\n            me._nestedI18n = function( token, lang, locale ){\r\n                var me = this;\r\n                // Get the desired language pack\r\n                var language = lang[ locale ];\r\n\r\n                if( language ){\r\n                    if( language[ token ] ){\r\n                        return language[ token ];\r\n                    }\r\n                }\r\n\r\n                //var hasParent = locale.indexOf( \"-\" );\r\n                var parent = locale.substring( 0, locale.indexOf( \"-\" ) );\r\n                return parent === \"\" ? token : me._nestedI18n( token, lang, parent );\r\n            };\r\n\r\n            /**\r\n             * @method my.i18n\r\n             * Use me.$i18n from now on.\r\n             * Internationalisation method, which accepts a token and returns the localised version.\r\n             * @param {String} token to be localised\r\n             * @deprecated\r\n             */\r\n            me.i18n = function( token ){\r\n                return me._nestedI18n( token, this.attrs.lang, this.attrs.locale );\r\n            };\r\n\r\n            /**\r\n             * @method my.$i18n\r\n             * Internationalisation method, which accepts a token and returns the localised version.\r\n             * @param {String} token to be localised\r\n             */\r\n            me.$i18n = function( token ){\r\n                return me._nestedI18n( token, this.attrs.lang, this.attrs.locale );\r\n            };\r\n\r\n            /**\r\n             * @method my._nestedI18n looks recursively for a token e.g. \"en-gb\", then \"en\"\r\n             * Used specifically by the i18n BINDING\r\n             * e.g. <p data-bind=\"i18n:'lang-system-emptyPanel'\"></p>\r\n             * @private\r\n             */\r\n            me[ \"$lang\" ] = function( lang, locale ){\r\n                var me = this;\r\n\r\n                lang = lang || me._lang;\r\n                locale = locale || me._locale;\r\n\r\n                // Get the desired language pack\r\n                var language = lang[ locale ];\r\n\r\n                if( language ){\r\n                    return language;\r\n                }\r\n\r\n                var parent = locale.substring( 0, locale.indexOf( \"-\" ) );\r\n                return parent ? me.$lang( lang, parent ) : {};\r\n            };\r\n\r\n            return obj;\r\n        },\r\n\r\n\r\n        /**\r\n         * @method addMyLogging\r\n         * Adds all my logging capabilities\r\n         * @return {object} my\r\n         * @private\r\n         */\r\n        addMyLogging: function( obj ){\r\n            // Old style ( deprecated )\r\n            obj.logDebug = function ( message ){\r\n                the.log.debug( this.id, message );\r\n            };\r\n            obj.logInfo = function ( message ){\r\n                the.log.info( this.id, message );\r\n            };\r\n            obj.logError = function ( message ){\r\n                the.log.error( this.id, message );\r\n            };\r\n\r\n            /**\r\n             * ### my.$notifyPermission\r\n             * @param  {function} resolve\r\n             * @param  {function} reject\r\n             */\r\n            obj.$notifyPermission = function( resolve, reject ){\r\n                // Check for Notification Permission\r\n                if( config.switches.useBrowserNotifications === true ){\r\n                    // Request Notification Permission at startup\r\n                    Notify.requestPermission( resolve, reject );\r\n                }\r\n            };\r\n\r\n            /**\r\n             * ### my.$notify\r\n             * @param  {string} title\r\n             * @param  {string} options { body:<the message>, requireInteraction:true/false }\r\n             */\r\n            obj.$notify = function( title, options ){\r\n                if( config.switches.useBrowserNotifications === true ){\r\n                    // Send the notification ( assumption that this has been asked for )\r\n                    var myNotification = new Notify( title, options );\r\n                    myNotification.show();\r\n                }\r\n            };\r\n\r\n            /**\r\n             * ###my.$alert\r\n             * Alert a message to the screen. Usually this is in the form of a popup system notification.\r\n             * @params {object} params A String or Pulse containing an error message to be displayed.\r\n             */\r\n            obj.$alert = function ( params ) {\r\n                // Don't do anything if there is no message\r\n                if( !params )\r\n                    return -1;\r\n\r\n                if( params.pulseHeader && params.pulseBody ){\r\n                    // Assuming this is an exception pulse, alert the message property\r\n                    this.$pulse( \"internal.system.toast.update\", { \"message\": params.pulseBody.status.message } );\r\n                } else {\r\n                    // Assuming params is a basic string,\r\n                    this.$pulse(\"internal.system.toast.update\", { \"message\": params } );\r\n                }\r\n            };\r\n\r\n            /**\r\n             * @method my.$debug\r\n             * Logs a debug message\r\n             * @param {String} message\r\n             */\r\n            obj.$debug = function ( message ){\r\n                the.log.debug( this.id + \":\" + message, this.name );\r\n            };\r\n            /**\r\n             * @method my.$info\r\n             * Logs a info message\r\n             * @param {String} message\r\n             */\r\n            obj.$info = function ( message ){\r\n                the.log.info( this.id + \":\" + message );\r\n            };\r\n            /**\r\n             * @method my.$error\r\n             * Logs a error message\r\n             * @param {String} message\r\n             */\r\n            obj.$error = function ( message ){\r\n                the.log.error( this.id + \":\" + message );\r\n            };\r\n\r\n            /**\r\n             * @method my.$error\r\n             * Logs a error message\r\n             * @param {String} message\r\n             */\r\n            obj.$emergency = function ( message ){\r\n                the.log.emergency( this.id + \":\" + message );\r\n            };\r\n            return obj;\r\n        },\r\n\r\n        /**\r\n         * @method addMyMVVM\r\n         * Adds all ModelView/ViewModel related methods to the 'my' object.\r\n         * Notably creates my.bind\r\n         * @return {object} my\r\n         * @private\r\n         */\r\n        addMyMVVM: function( obj ){\r\n            obj.bind = function( model ){\r\n                phil.bind( model, this.id );\r\n                the.log.error( \"DEPRECATED\", \"my.bind has been deprecated. Please use my.$bind.\" );\r\n            };\r\n\r\n            /**\r\n             * @method my.$bind\r\n             * Logs a error message\r\n             * @param {String} message\r\n             */\r\n            obj.$bind = function( model ){\r\n                phil.bind( model, this.id );\r\n            };\r\n\r\n            /**\r\n             * @method unbind\r\n             * Removes the model binding from this Cog\r\n             */\r\n            obj.$unbind = function(){\r\n                phil.unbin( this.id );\r\n            };\r\n\r\n            /**\r\n             * @method my.$model\r\n             * Creates a new MVVM model in a consistent way.\r\n             * Binds in the localisation automatically\r\n             */\r\n            obj.$model = function(){\r\n                var model = phil.Model();\r\n\r\n                return model;\r\n            };\r\n\r\n            /**\r\n             * @method my.$navto\r\n             * Navigates the Cog UI to a new screen as defined in the HTML.\r\n             * Not to be confused with a roadie navigate which is a system task to move spaces\r\n             */\r\n            obj._navto = [];\r\n            obj.$navto = function( name, params ){\r\n                var tempName = name;\r\n\r\n                if( name === \"back\" ){\r\n                    // Go back two entries\r\n                    var previous = this._navto[ this._navto.length - 2 ];\r\n                    if( previous ){\r\n                        // Splice just the last one\r\n                        this._navto.splice( this._navto.length - 1, 1 );\r\n                        tempName = previous;\r\n                    } else {\r\n                        // Set the base history back to \"home\"\r\n                        this._navto = [ name ];\r\n                        tempName = \"home\";\r\n                    }\r\n                } else if( name === \"$last\" ){\r\n                    // Go back two entries\r\n                    var previous = this._navto[ this._navto.length - 1 ];\r\n                    tempName = previous;\r\n                } else if( name === \"home\" ){\r\n                    this._navto = [ name ];\r\n                } else {\r\n                    this._navto.push( name );\r\n                }\r\n\r\n                // Navigate to the most appropriate screen\r\n                phil.goTo( this.id, tempName );\r\n\r\n                // Mixin the params object and the name\r\n                var body = {\r\n                    \"name\": tempName\r\n                };\r\n                __mixin( body, params );\r\n\r\n                // Fire an event to allow the button to be disabled etc.\r\n                this.$fire( \"my.navto\", body );\r\n\r\n                return tempName;\r\n            }\r\n            /**\r\n             * @method my.$reveal\r\n             * Slides in a Cog UI screen.\r\n             */\r\n            obj.$reveal = function( screen ){ phil.reveal( this.id, screen ); }\r\n\r\n            return obj;\r\n        },\r\n\r\n        /**\r\n         * @method addMyPump\r\n         * Adds all of the pump related functionality to the my object.\r\n         * Notably my.pump\r\n         * @return {object} my\r\n         * @private\r\n         */\r\n        addMyPump: function( obj, paramsClosure ){\r\n            var me = obj;\r\n\r\n            /**\r\n             * Inline definition of the my.pump object.\r\n             * The following structure wraps and (loosely) hides the endpoint.\r\n             * The purpose is to allow more functionality to be added into the pulse before it is sent. Such as Context.\r\n             * Usage:\r\n             *   my.pump.pulse( exchnage );\r\n             *   my.pump.onPulsed( function( exchange ){ ...do something }, this );\r\n             */\r\n            me._pump = {\r\n                /**\r\n                 * Reference to the Id of this component\r\n                 * @private\r\n                 */\r\n                _id: this.id,\r\n\r\n                /**\r\n                 * Reference to the EndPoint created by the Pump\r\n                 * @private\r\n                 */\r\n                _endpoint: this.endPoint,\r\n\r\n                /**\r\n                 * Method used to send information to the Pump\r\n                 * @param exchange {Object} The well formed exchange to send to the Pump\r\n                 * @private\r\n                 */\r\n                pulse: function( exchange ){\r\n                    var message = exchange.getMessage();\r\n                    message.body.pulseHeader.componentId = this._id;\r\n                    this._endpoint.pulse( exchange );\r\n                },\r\n\r\n                /**\r\n                 * ###create\r\n                 * Creates a new Exchange\r\n                 */\r\n                create: function( ns, body, params ){\r\n                    params = params || {};\r\n\r\n                    var config = {\r\n                        ns:     ns,\r\n                        body:   body,\r\n                        compId: me.id\r\n                    }\r\n                    if( params.refId ) { config[ \"refId\" ] = params.refId }\r\n\r\n                    var exchange = pumpco.core.jsbean.ExchangeFacade.getInOutCommand( config );\r\n\r\n                    return exchange;\r\n                },\r\n\r\n                /**\r\n                 * Method used to send information to the Pump, using a more consice format\r\n                 * @param exchange {Object} The well formed exchange to send to the Pump\r\n                 * @private\r\n                 */\r\n                send: function( ns, body, params ){\r\n                    var exchange = this.create( ns, body, params );\r\n\r\n\t                this._endpoint.pulse( exchange );\r\n\t            },\r\n\r\n                /**\r\n                 * Method to register a callback handler against the Pump\r\n                 * @param fn {Function} the callback to invoke when a message is ready on the Pump\r\n                 * @param scope {Object} the scope to call the function back in\r\n                 * @private\r\n                 */\r\n                onPulsed: function( fn, scope ){\r\n\r\n                    this._endpoint.onPulsed( fn, scope );\r\n                }\r\n            };\r\n\r\n            /**\r\n             * ###$forward\r\n             * Pulsing on behalf of another.\r\n             * @params {string} id      The user ID to pulse as\r\n             * @params {string} ns      The namespace of the pulse to send\r\n             * @params {object} body    The body object to put into the pulse\r\n             * @params {json}   params\r\n             */\r\n            me[ \"$pulseAs\" ] = function( id, ns, body, params ){\r\n                if( !id )\r\n                    return -1;\r\n\r\n                params = params || {};\r\n\r\n                var inner = me._pump.create( ns, body, params );\r\n\r\n                // Deep copy the exchange, to prevent recursive loop.\r\n                // I think this is a general problem with the Ext Classes preserving state.\r\n                // AMONIS: 08/10/2015\r\n                var json = JSON.stringify( inner.getMessage().body );\r\n                var obj  = JSON.parse( json );\r\n\r\n                var body = {\r\n                    \"actor\":    { \"id\":id },\r\n                    \"payload\":  obj\r\n                };\r\n\r\n                //\r\n                me._pump.send( \"pumpCo.user.forward.request\", body );\r\n            };\r\n\r\n            /**\r\n             * ###$pulse\r\n             * Main pulse method to allow you to send a pulse from a cog.\r\n             * @params {string} ns The namespace of the pulse to send\r\n             * @params {object} body The body object to put into the pulse\r\n             * @params {json} params e.g. { compId:123, refId:123, uid:1234 } where uid allows pulseAs\r\n             */\r\n            me[ \"$pulse\" ] = function( ns, body, _params ){\r\n                _params = _params || {};\r\n\r\n                me.$debug( \">\" + ns );\r\n\r\n                // Check params for mocks\r\n                var mocks = paramsClosure.mocks || [];\r\n                var mock = undefined;\r\n                for( var i=0; i<mocks.length; i++ ){\r\n                  if( mocks[ i ].request === ns ){\r\n                    mock = mocks[ i ];\r\n                  }\r\n                }\r\n\r\n                // Request the data\r\n                if( mock !== undefined ){\r\n                  // Request a mocked pulse as defined in resources.json\r\n                  var uri = '/PumpHouse/fixture' + mock.url\r\n                  console.log( 'requesting:' + uri );\r\n                  // Load via ajax\r\n                  $.ajax({ url:uri, dataType:\"json\" }).done(function( data ) {\r\n                    console.log( 'loaded mock:' + uri);\r\n                    me.$fire( mock.response, data );\r\n                  }).error( function(err){\r\n                    console.log( err );\r\n                  });\r\n                } else {\r\n                  // AMONIS: 05-02-2016: Updated to support params.uid property to pulse as someone else\r\n                  if( _params.uid ){\r\n                      me.$pulseAs( _params.uid, ns, body, _params );\r\n                  } else {\r\n                      me._pump.send( ns, body, _params );\r\n                  }\r\n                }\r\n            };\r\n\r\n\r\n            me[ \"$pulsed\" ] = function( fn, scope ){\r\n                me._pump.onPulsed( fn, scope );\r\n            };\r\n\r\n            /*\r\n             * A unified Event model for use in a Cog.\r\n             * Pulse namespaces can be registered along with custom event names.\r\n             * The events are synchronous, which allow an easier programming model.\r\n             * Pulses will arrive async and then the event will be called sync, so in effect pulses\r\n             * still behave async\r\n             */\r\n            // Limited to only 1 handler per ns at present. TBC extend to multiple handlers\r\n            me[ \"_events\" ] = {};\r\n\r\n            /**\r\n             * @method $on\r\n             * Register a new event handler e.g.\r\n                my.$on( \"pumpCo.user.login.response\", function(){\r\n                    my.$info( \"Event.[pumpCo.user.login.response]()\" );\r\n                }, my );\r\n             */\r\n            me[ \"$on\" ] = function( name, fn, scope ){\r\n                // Check to see if anything is registered for the event name\r\n                me[ \"_events\" ][ name ] = me[ \"_events\" ][ name ] || [];\r\n\r\n                // Add the event handler\r\n                var evt = { name:name, fn:fn, scope:scope, guid:the.generateUuid() };\r\n                me[ \"_events\" ][ name ].push( evt );\r\n\r\n                // return the guid for removing the event handler\r\n                return evt.guid;\r\n            };\r\n\r\n            me[ \"$once\" ] = function( name, fn, scope ){\r\n                // Check to see if anything is registered for the event name\r\n                me[ \"_events\" ][ name ] = me[ \"_events\" ][ name ] || [];\r\n\r\n                // Add the event handler\r\n                // AMONIS: 21/11/2016: Added once property\r\n                // AMONIS: 10/05/2017: Added found for partial matches\r\n                var evt = { name:name, fn:fn, scope:scope, guid:the.generateUuid(), once:true, found:[] };\r\n\r\n                me[ \"_events\" ][ name ].push( evt );\r\n\r\n                // return the guid for removing the event handler\r\n                return evt.guid;\r\n            };\r\n\r\n            /**\r\n             * @method $off\r\n             * remove an event listener e.g. my.$off( \"pumpCo.user.login.response\" )\r\n             */\r\n            me[ \"$off\" ] = function( guid ){\r\n                // NOt implemented yet. Use the guid to remove\r\n                // del the event handler\r\n                // delete me[ \"_events\" ][ name ];\r\n            };\r\n\r\n            /**\r\n             * @method $fire\r\n             * trigger a new event to be raised. Runs synchonously\r\n             * me.$fire( \"postModelCreate\", {} );\r\n             */\r\n            me[ \"$fire\" ] = function( name, params ){\r\n                var eventHandler = me[ \"_events\" ][ name ];\r\n                // Look for full match\r\n                if( eventHandler ){\r\n                    for( var i=0; i<eventHandler.length; i++ ){\r\n                        var handler = undefined;\r\n\r\n                        // // AMONIS: 21/11/2016: Strip the event handler out if \"once\" property is set\r\n                        if( eventHandler[ i ].once ){\r\n                            // Splice the event handler ( and set the result to the first item, as the result set is an array )\r\n                            handler = eventHandler.splice( i, 1 )[ 0 ];\r\n                        } else {\r\n                            // set the handler to the item in the array WITHOUT removing\r\n                            handler = eventHandler[ i ];\r\n                        }\r\n\r\n                        // AMONIS: 21/11/2016: Invoke the handler\r\n                        if( handler ){\r\n                            handler.fn.call( handler.scope || this, params );\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            /**\r\n             * #$ajax\r\n             * Slightly old fashioned callback approach. Maps JQuery Promise style to callbacks for simpler ( less relient on jquery ) approach\r\n             * This is only required for the\r\n             * @params config\r\n             * @params callback {function( data, responseText, status)}\r\n             */\r\n            me[ \"$ajax\" ] = function( config, callback ){\r\n                config = config || {};\r\n\r\n                // Bolt the current authToken on to the end of the request\r\n                var authToken = invoke.run( \"io.authToken.get\", {} );\r\n                config.authToken = authToken;\r\n\r\n                var request = $.ajax( config );\r\n\r\n                // Success handling for XHR requests ( 200's )\r\n                request.done( function( msg ) {\r\n                    // AMONIS: 01/09/2015: Added onError handling for XHR 404's in the pump\r\n                    // callback( this.data, msg, 200 );\r\n\r\n                    var json = {\r\n                        data: this.data,\r\n                        response: msg,\r\n                        status: 200\r\n                    };\r\n\r\n                    // Fire the appropriate event handler\r\n                    me.$fire( config.name, json );\r\n                });\r\n\r\n                // Error handling for XHR requests ( 404's etc )\r\n                request.fail( function( jqXHR, textStatus ) {\r\n                    //callback( this.data, jqXHR.responseText, jqXHR.status );\r\n\r\n                    var json = {\r\n                        data: this.data,\r\n                        response: jqXHR.responseText,\r\n                        status: jqXHR.status\r\n                    };\r\n\r\n                    // Fire the appropriate event handler\r\n                    me.$fire( config.name, json );\r\n                });\r\n\r\n            };\r\n\r\n            return obj;\r\n        },\r\n\r\n        /**\r\n         * @method addServices\r\n         * Add the my.$place() and my.$space() methods\r\n         * @return {object} my\r\n         * @private\r\n         */\r\n        addServices: function( obj, place, space, platform, cogParams ){\r\n            var me = obj;\r\n\r\n            me._place = place;\r\n            me._space = space;\r\n            me._platform = platform;\r\n\r\n            /**\r\n             * ###$platform\r\n             * returns the kernel representation of the platform ( Mobile / Desktop )\r\n             */\r\n            me.$platform = function(){\r\n                return me._platform;\r\n            };\r\n\r\n            /**\r\n             * @method $place\r\n             * returns the model representation of the current \"place\"\r\n             */\r\n            me.$place = function(){\r\n                return me._place;\r\n            };\r\n\r\n            /**\r\n             * @method $space\r\n             * returns the model representation of the current \"space\"\r\n             */\r\n            me.$space = function(){\r\n                return me._space;\r\n            };\r\n\r\n            /**\r\n             * @method $hold\r\n             * Helper method to ask the Roadie to hold an item\r\n             * @param key   a namespaced value ( usually app.xyz )\r\n             * @param pack  json to hold\r\n             */\r\n            me.$hold = function( key, pack ){\r\n                // Add the key to the pack for reference, if required.\r\n                pack._key = key;\r\n\r\n                var body = {\r\n                    \"key\":      key,\r\n                    \"package\":  pack\r\n                };\r\n\r\n                me.$pulse( \"pumpCo.roadie.hold.request\", body );\r\n            };\r\n\r\n            /**\r\n             * @method $release\r\n             * Helper method to ask the Roadie to release an item\r\n             * @param key   a namespaced value ( usually app.xyz )\r\n             * @param clear flag to set ( default true ) to empty the key value i.e. take and keep contents\r\n             * false would be the eqivilent of look and peek at contents but leave for others.\r\n             */\r\n            me.$release = function( key, clear ){\r\n                clear = clear || true;\r\n\r\n                me.$pulse( \"pumpCo.roadie.release.request\", {\r\n                    key: key,\r\n                    clear: clear\r\n                } );\r\n            };\r\n\r\n            /*\r\n                ROADIE\r\n                Create the Roadie helpers\r\n             */\r\n            me[ \"$roadie\" ] = {};\r\n\r\n            /**\r\n             * ###my.$roadie.url.parse\r\n             * The Url navigation is a black box as far as the end user is concerned. The URL's are generated on the backend\r\n             * and passed directly to the frontend.\r\n             * The Method translates this url into a number of requests / steps to implement to navigate to a specific area\r\n             * of the site, for example, async load of a place, then move to space and cog.\r\n             * ASSUMPTION. Only basic Place navigation supported in this implementation.\r\n             * @param url String e.g. \"roadie://goto/place/user123/place123/space123/cog123?baggage=xyz\"\r\n             * @return Object undefined or { \"url\", \"protocol\", \"verb\", \"identifier\", \"user\", \"place\", \"space\", \"cog\", \"params\" }\r\n             */\r\n            me[ \"$roadie\" ].parse = RoadieUrl.parse;\r\n\r\n            /**\r\n             * ###my.$roadie.url.generate\r\n             * Method generate takes a number of parameters and formats them into a valid Roadie URL.\r\n             * @param {JSON}  A valid object containing the following.\r\n             *\r\n             * ```js\r\n             * {\r\n             *      \"protocol\":     {String}, // roadie\r\n             *      \"verb\":         {String}, // visit\r\n             *      \"identifier\":   {String}, // space\r\n             *      \"user\":         {String}, // 00285feb310ef21200000001\r\n             *      \"place\":        {String}, // 0499e8e72052a16d00000001\r\n             *      \"space\":        {String}, // 04c600e632ffd4ee00000001\r\n             *      \"cog\":          {String}, //\r\n             *      \"params\":       {String}  //\r\n             * }\r\n             * ```\r\n             * Should output something similar to\r\n             * ```js\r\n             * \"roadie://visit/space/00285feb310ef21200000001/0499e8e72052a16d00000001/04c600e632ffd4ee00000001\"\r\n             * ```\r\n             */\r\n            me[ \"$roadie\" ].generate = RoadieUrl.generate;\r\n\r\n            me[ \"$roadie\" ].queryStringToObject = RoadieUrl.queryStringToObject;\r\n            me[ \"$roadie\" ].objectToQueryString = RoadieUrl.objectToQueryString;\r\n            me[ \"$roadie\" ].getType             = RoadieUrl.getType;\r\n            me[ \"$roadie\" ].parseExternal       = RoadieUrl.parseExternal;\r\n\r\n            /**\r\n             * ###roadie.createPack\r\n                Creates a Roadie pack through specification, in the format of...\r\n\r\n                ```js\r\n                \"roadie\": {\r\n                  \"set\": \"system.coreReporting.cog\",\r\n                  \"params\": [\r\n                    { \"name\":\"org\", \"val\":\"arguments.item\" },\r\n                    { \"name\":\"reports\", \"val\":\"params.reports\" }\r\n                  ]\r\n                }\r\n                ```\r\n             */\r\n            me[ \"$roadie\"].createPack = function(){\r\n                // Create the return structure\r\n                var _result = {};\r\n\r\n                // Check the input properties exist\r\n                if( !cogParams.roadie )\r\n                    return _result;\r\n\r\n                if( !cogParams.roadie.set || !cogParams.roadie.params )\r\n                    return _result;\r\n\r\n                // Create the return detail and set the \"set\" property for the hold request\r\n                _result.set     = cogParams.roadie.set;\r\n                _result.body    = {};\r\n\r\n                // Iterate over the params and attempt to recover the properties.\r\n                for( var i=0; i<cogParams.roadie.params.length; i++ ){\r\n                    var _param = cogParams.roadie.params[ i ];\r\n\r\n                    var _val = undefined;\r\n\r\n                    // Check anything beginning my.*\r\n                    if( _param.val.indexOf( \"my.\" ) > -1 ){\r\n                        var _path = _param.val.substring( _param.val.indexOf( \"my.\" ) + 3 );\r\n                        _val = __get( _path, me );\r\n                    }\r\n\r\n                    // Check anything beginning params.*\r\n                    if( _param.val.indexOf( \"params.\" ) > -1 ){\r\n                        var _path = _param.val.substring( _param.val.indexOf( \"params.\" ) + 7 );\r\n                        _val = __get( _path, cogParams );\r\n                    }\r\n\r\n                    // If a value was recovered, add it to the result body set.\r\n                    if( _val !== undefined ){\r\n                        _result.body[ _param.name ] = _val;\r\n                    }\r\n                }\r\n\r\n                // Return the result object\r\n                return _result;\r\n            }.bind( me );\r\n\r\n            me[ \"$roadie\"].release  = me.$release;\r\n            me[ \"$roadie\"].hold     = me.$hold;\r\n\r\n            /**\r\n             * ###$copy\r\n             */\r\n            me.$copy = function( obj, type ){\r\n                if( !obj || !type )\r\n                    return -1;\r\n\r\n                me.$pulse( \"internal.clipboard.copy.request\", {\r\n                    type: type,\r\n                    obj:  obj\r\n                } );\r\n            };\r\n\r\n            /**\r\n             * ###$paste\r\n             */\r\n            me.$paste = function(){\r\n                me.$pulse( \"internal.clipboard.paste.request\", {} );\r\n            };\r\n\r\n            return me;\r\n        },\r\n\r\n        /**\r\n         * @method addMyViewport\r\n         * Add the my.viewport method.\r\n         * This is a little EXTy in that future versions will use element.append()\r\n         * @return {object} my\r\n         * @private\r\n         */\r\n        addMyViewport: function( obj ){\r\n            var me = obj;\r\n\r\n            me.viewport = {};\r\n\r\n            /**\r\n             * @method my.viewport.add\r\n             * Replacement for the method of the same name on the Ext.Container.\r\n             * Uses Ext.fly() to grab the Element from the DOM and adds the Ext Container(s)\r\n             * This is only used for Cogs that STILL utilise Ext in their construction.\r\n             */\r\n            /*\r\n                Additionally this method needs to be bound back to the scope of My, using the inbuilt\r\n                __bind functionality in 'the'.\r\n             */\r\n            // me.viewport.add = __bind( function( container ){\r\n            //     var cogEl = Ext.fly( \"cog-\" + this.id );\r\n            //     container.render( cogEl );\r\n            // }, me );\r\n\r\n            /**\r\n             * legacy functionality for width of a panel\r\n             * @deprecated\r\n             */\r\n            // me.viewport.getWidth = __bind( function(){\r\n            //     var cogEl = Ext.fly( \"cog-\" + this.id );\r\n            //     return cogEl.getWidth();\r\n            // }, me );\r\n\r\n            return me;\r\n        },\r\n\r\n        // addMyJquery: function( obj ){\r\n        //  var me = obj;\r\n\r\n        //  me[\"$\"] = function( selector ){\r\n        //      // Apply bindings locally to the target ( my )\r\n        //      return selector ? $( \"#\" + my.id ).find( selector ) : $( \"#\" + my.id );\r\n        //  };\r\n\r\n        //  return me;\r\n        // },\r\n\r\n        addMyUi: function( obj ){\r\n            var me = obj;\r\n\r\n            /**\r\n             * @method $\r\n             * add targeted jquery for DOM manipulation to My\r\n             */\r\n            me[\"$\"] = function( selector ){\r\n                // Apply bindings locally to the target ( my )\r\n                return selector ? $( \"#\" + me.id ).find( selector ) : $( \"#\" + me.id );\r\n            };\r\n\r\n            /**\r\n             * @method resolveHtml\r\n             * ResolveHtml allows Mixin Templates, by resolving include links prior to rendering.\r\n             * Uses <!-- pumpco: --> notation for the include\r\n             */\r\n            me[ \"$resolveHtml\" ] = function(){\r\n                phil.resolveHtml();\r\n            };\r\n\r\n            /**\r\n             * ###getPageProperty\r\n             * Gets a Page level property.\r\n             * This is used to get the Page level params as proivided by PumpHouse.\r\n             * This is not an ideal solution as it breaks out of the encapsulation back to the DOM.\r\n             * Andy Monis: 11/02/2015\r\n             *\r\n             * ```js\r\n             *  <script type=\"text/javascript\">\r\n             *      siteId = \"002753672558db9c00000001\";\r\n             *      var params = {\"siteId\":\"002753672558db9c00000001\",\"siteName\":\"Pegasus.cnect_to_probation\",\"siteTitle\":\"tools for joined up offender management\",\"loginLogo\":\"/PumpHouse/uploads/northumbriaprobation/visitPodNav/images/northumbriaprobation_navcog_connect.jpg\",\"socket\":\"false\",\"sitePath\":\"connect/\",\"pumpfacePath\":\"pf-pegasus/\",\"favicon\":\"resources/images/favicon.ico\",\"bootstrapVersion\":\"0.02.00\",\"contactDetails\":\"pumpco ltd (support@pumpco.co.uk)\"};\r\n             *  </script>\r\n             * ```\r\n             *\r\n             * @params {string} name A namespaced\r\n             */\r\n            me[ \"$getPageProperty\" ] = function( name ){\r\n                var property = __get( name );\r\n                return property;\r\n            };\r\n\r\n            /**\r\n             * ###$consoleApi\r\n             * method to allow console APIs to be added to the global a.action\r\n             * @depends \"services/console\"\r\n             */\r\n            me[ \"$consoleApi\" ] = function( name, fn ){\r\n                console.log( \"$consoleApi [\" + name + \"]\" );\r\n                // AMONIS: 25/01/2017: Updated test to Add a console API request to aos if it exists\r\n                var aos = window.aos;\r\n                if( aos && aos.action ){\r\n                    aos.action[ this.id ] = aos.action[ this.id ] || {};\r\n                    aos.action[ this.id ][ name ] = fn;\r\n                }\r\n            };\r\n\r\n            /**\r\n             * ###$_resolveCard\r\n             * Resolves a Card by name into a full url path for templating. The Path is not guaranteed as static so use\r\n             * of this resolver is encouraged.\r\n             * @params {string} name: The name of the card in the form of base/sub/cardname\r\n             */\r\n            me[ \"_resolveCard\" ] = function( name ){\r\n\r\n                var results = phil.pathFor( name );\r\n\r\n                return results;\r\n            };\r\n\r\n            /**\r\n             * ### spa\r\n             * Single Page App\r\n             * Switches the framework to present the Space as an SPA ( i.e. hides the header )\r\n             * ``` js\r\n             * my.spa( true ) // enables\r\n             * my.spa( false ) // disables\r\n             * ```\r\n             * @param  {[type]} spa [description]\r\n             * @return {[type]}     [description]\r\n             */\r\n            me[ \"$spa\" ] = function( spa ){\r\n                spa = spa || false;\r\n                if( spa === true ){\r\n                  invoke.run( \"header.hide\", {} );\r\n                } else {\r\n                  invoke.run( \"header.show\", {} );\r\n                }\r\n            };\r\n\r\n            return me;\r\n        },\r\n\r\n        /**\r\n         * ###addMyContacts\r\n         */\r\n        addMyContacts: function( obj, data ){\r\n            var me = obj;\r\n\r\n            me[ \"$contacts\" ] = phil.model.ContactList( { \"id\":\"uid\", \"label\":\"nickname\", \"multi\":false } );\r\n\r\n            // Default the contacts to the \"logged in user\" contacts.\r\n            // me[ \"$contacts\" ].load( data.contacts );\r\n\r\n            // Provide a method to overload the contacts\r\n            me[ \"$contacts\" ].loadFromPulse = function( exchange ){\r\n                var body = {};\r\n\r\n                if( exchange.getPulseBody ){\r\n                    // Get the pulse body from Exchange\r\n                    body = exchange.getPulseBody();\r\n                } else {\r\n                    // Get the pulse body from pulse\r\n                    body = exchange.pulseBody;\r\n                }\r\n\r\n                // Clear out the previous results\r\n                me[ \"$contacts\" ].clear();\r\n\r\n                // Load in the new results, assumes V1 format that can be dumped straight in.\r\n                me[ \"$contacts\" ].load( body.contacts );\r\n            };\r\n\r\n            me[ \"$contacts\" ].loadDefault = function(){\r\n                // Load in the new results, assumes V1 format that can be dumped straight in.\r\n                me[ \"$contacts\" ].load( data.contacts );\r\n            };\r\n\r\n            return me;\r\n        },\r\n\r\n        /**\r\n         * ###addMyAppDeveloper\r\n         */\r\n        // addMyAppDeveloper: function( obj, params ){\r\n        //     var me = obj;\r\n        //\r\n        //     /**\r\n        //      * #$devOverrides\r\n        //      * Implements certain development overrides for the AppBuilder Service\r\n        //      *\r\n        //      *```js\r\n        //      * my.$devOverrides();\r\n        //      *```\r\n        //      */\r\n        //     me[ \"$devOverrides\" ] = function(){\r\n        //\r\n        //         // params._appbuilder is a custom flag provided by the Os AppBuilder. It can be used to determine if the\r\n        //         // cog is running in development mode or not. In this case it overrides the pulsing.\r\n        //\r\n        //         /**\r\n        //          * ###$devlog\r\n        //          * A very simple development logger. Does nothing in production mode.\r\n        //          */\r\n        //         this.$devlog = function(){};\r\n        //\r\n        //         if( params._appbuilder ){\r\n        //\r\n        //             /**\r\n        //              * ###$devlog\r\n        //              * A very simple development logger.\r\n        //              * Overridden in local dev mode to output to the console.\r\n        //              * Only for local messaging to test if things are working a bit more easily.\r\n        //              */\r\n        //             this.$devlog = function( msg ){\r\n        //                 console.log( \"DEVLOG: \" + msg );\r\n        //             }\r\n        //\r\n        //             /*\r\n        //                 OVERRIDE: my.$pulse\r\n        //                 Overrides the my.$pulse functionality such that the cog can mix in its own static pulses for testing.\r\n        //              */\r\n        //             this.$pulse = function( ns, body ){\r\n        //                 // _responses is setup by the AppBuilder only. It is not available at runtime in the OS.\r\n        //                 // Specify entries in /test/responses.js\r\n        //                 // Entries are then processed here to mimic pulsing. Using $fire calls the same\r\n        //                 var testResponses = params[ \"_responses\" ];\r\n        //                 if( testResponses[ ns ] ){\r\n        //                     // A response has been found, fire it back to the handler\r\n        //                     // AMONIS: 15/12/2016: Enhanced to support function as a response\r\n        //                     var response = undefined;\r\n        //                     if( testResponses[ ns ] instanceof Function ){\r\n        //                         response = testResponses[ ns ]( body );\r\n        //                     } else {\r\n        //                         response = testResponses[ ns ];\r\n        //                     }\r\n        //\r\n        //                     // Wrap as an expected Exchange\r\n        //                     var exchange = pumpco.core.jsbean.ExchangeFacade.getInOutCommand({\r\n        //                         ns: response.pulseHeader.pulseClass,\r\n        //                         body: response.pulseBody,\r\n        //                         compId: response.pulseHeader.componentId,\r\n        //                         refId: response.pulseHeader.referenceId,\r\n        //                         reqId: response.pulseHeader.requestingComponentId\r\n        //                     });\r\n        //\r\n        //                     // Simulate a network delay ( 0-250ms )\r\n        //                     var delay = Math.floor( Math.random() * 250 );\r\n        //\r\n        //                     // Check if the cog is expecting unwrapped exchanges\r\n        //                     if( params.unwrapExchange === true || params.unwrapExchange === \"true\" ){\r\n        //                         // Trigger the callback on a timer ( to break synchronous nature of reply )\r\n        //                         setTimeout( function(){\r\n        //                              this.$fire( response.pulseHeader.pulseClass, exchange.msgIn.body );\r\n        //                         }.bind( this ), delay)\r\n        //                     } else {\r\n        //                         // Trigger the callback on a timer ( to break synchronous nature of reply )\r\n        //                         setTimeout( function(){\r\n        //                             this.$fire( response.pulseHeader.pulseClass, exchange );\r\n        //                         }.bind( this ), delay )\r\n        //                     }\r\n        //                 }\r\n        //             };\r\n        //\r\n        //             /*\r\n        //                 OVERRIDE: my.$ajax\r\n        //              */\r\n        //             this.$ajax = function( config ){\r\n        //                 config = config || {};\r\n        //                 var authToken = invoke.run( \"io.authToken.get\", {} );\r\n        //                 config.authToken = authToken;\r\n        //\r\n        //                 var testResponses = params[ \"_responses\" ];\r\n        //                 if( testResponses[ config.name ] ){\r\n        //                     // A response has been found, fire it back to the handler\r\n        //                     var response = testResponses[ config.name ];\r\n        //\r\n        //                     var json = {\r\n        //                         data: \"\",\r\n        //                         response: response,\r\n        //                         status: 200\r\n        //                     };\r\n        //\r\n        //                     // Fire the appropriate event handler\r\n        //                     this.$fire( config.name + \".response\", json );\r\n        //                 }\r\n        //             };\r\n        //\r\n        //             // Fire the postShown event to trigger the event handler in the cog\r\n        //             me.$fire( \"postShown\" );\r\n        //         }\r\n        //     };\r\n        //\r\n        //     return me;\r\n        // },\r\n\r\n        /**\r\n         *\r\n         */\r\n\t   addMyStartup: function( obj, config, network ){\r\n            var me = obj;\r\n\r\n            var network = network;\r\n\r\n    \t\t// Set a flag to notify the _pulseHandler to unwrap exchange to a pulse ( based on config )\r\n    \t\tme._unwrapExchange = config.unwrapExchange ? true : false;\r\n\r\n            /**\r\n             * ### getUI\r\n             * Determines what UI Framework is being used ( if any )\r\n             * @return {type} [description]\r\n             */\r\n            var getUI = function(){\r\n                var temp = this.getCapabilities();\r\n\r\n                var ui = \"knockout\";\r\n                for( var i=0; i<temp.length; i++ ){\r\n                        if( temp[ i ].name === \"Vue\" ){\r\n                                ui = \"vue\"; // Only supports Vue at the moment\r\n                        }\r\n                }\r\n                return ui;\r\n            }.bind( this );\r\n\r\n            /**\r\n             * ###_requestCards\r\n             * Requests any cards specified in the Cards:[] part of the Resources.json file.\r\n             */\r\n            me[ \"_cards\" ] = {};\r\n            me[ \"$card\" ] = function( name ){\r\n                var card = this._resolveCard( name );\r\n\r\n                if( !card )\r\n                    return \"\";\r\n\r\n                card.status = this[ \"_cards\" ][ name ];\r\n\r\n                return card;\r\n            };\r\n            me[ \"_requestCards\" ] = function( ){\r\n                function request( name, url ){\r\n                    // flag the card has been requested\r\n                    this._cards[ cardSpec ] = 1;\r\n\r\n                    $.ajax({\r\n                        url:     url,\r\n                        context: this\r\n                    })\r\n                        .done( function( data, textStatus, jqXHR ){\r\n                            // Call eval, making sure the scope is set to 'this' which\r\n                            // becomes the closure 'my' in the Cog\r\n                            eval.call( this, data );\r\n\r\n                            this._cards[ name ] = 0;\r\n\r\n                            me.$fire( \"postCardCreate\", { name:cardSpec, status:0 } );\r\n\r\n                        }.bind( this ) )\r\n                        .fail( function( jqXHR, textStatus, errorThrown ){\r\n                            this._cards[ name ] = -1;\r\n                        }.bind( this ) );\r\n                };\r\n\r\n                var cardsSpec = [];\r\n\r\n                if( me.cards.length && me.cards.length >= 0 )\r\n                    cardsSpec = me.cards;\r\n\r\n                if( config.cards && config.cards.length >= 0 )\r\n                    cardsSpec = config.cards;\r\n\r\n                if( cardsSpec.length === 0 )\r\n                    return -1;\r\n\r\n                // Request all of the cards\r\n                for( var i=0; i<cardsSpec.length; i++ ){\r\n                    var cardSpec = cardsSpec[ i ].name;\r\n\r\n                    var card = me._resolveCard( cardSpec );\r\n\r\n                    request.call( this, cardSpec, card.js );\r\n                }\r\n\r\n            };\r\n\r\n            /**\r\n             * @method _createModel\r\n             * Creates a standard Cog Model.\r\n             * This is not intended to be called directly.\r\n             * Interact with Event \"postModelCreate\" to add user defined model stuff\r\n             */\r\n            me[ \"_createModel\" ] = function(){\r\n\r\n                me.model = me.$model();\r\n\r\n                // me.model.local = pumpco.utils.UserUtils.isUserPlace();\r\n\r\n                me.model._waitingOnResponse = phil.observe( false );\r\n\r\n                // Add legacy mapping to model\r\n                me.model._waitingOnListResonse = me.model._waitingOnResponse;\r\n\r\n                me.model._hidden            = phil.observe( false );\r\n\r\n                me.model.oProgress          = phil.model.Progress( { value:'', progress:100 } );\r\n\r\n                /* UI Elements */\r\n                me.model.uiState            = phil.observe( 0 );\r\n\r\n                // Set an OS2 flag in the model\r\n                me.model.isOs2              = true;\r\n\r\n                // Load the i18n from the languages provided\r\n                me.model.i18nLoad( me.$lang() );\r\n\r\n                // Fire a postModelCreate event\r\n                me.$fire( \"postModelCreate\", {} );\r\n            };\r\n\r\n            /**\r\n             * Pulse Handler variables.\r\n             */\r\n            me._chainedCallback = undefined;\r\n            me._pulseResponses  = {};\r\n\r\n            /**\r\n             * @method me.addChainedHandler\r\n             * This is used as an extension point should further processing of the pulses be required.\r\n             */\r\n            me.$addChainedHandler = function( handler ){\r\n                me._chainedCallback = handler;\r\n            }\r\n\r\n            /**\r\n             * @method addPulseHandler\r\n             * callback method triggered by pulseHandler\r\n             */\r\n            // me.$addPulseHandler = function( pulseClass, handler, scope ){\r\n            //     me._pulseResponses[ pulseClass ] = { \"handler\":handler, \"scope\":scope };\r\n            // };\r\n\r\n            /**\r\n             * @method delPulseHandler\r\n             * remove a callback from the processing ( probably rarely used )\r\n             */\r\n            // me.$delPulseHandler = function( pulseClass ){\r\n            //     delete me._pulseResponses[ pulseClass ];\r\n            // };\r\n\r\n            /**\r\n             * @method pulseHandler\r\n             * Generic pulse handler, that farms out the processing to other methods.\r\n             * Could be tidied up a bit\r\n             */\r\n            me._pulseHandler = function( exchange ){\r\n                var pulseClass = exchange.getPulseClass();\r\n\r\n\t            if( pulseClass === \"pumpCo.user.forward.response\" ){\r\n\t            \tvar payload = exchange.getPulseBody().payload;\r\n\r\n\t            \tif( !payload )\r\n\t            \t\treturn -1;\r\n\r\n\t\t\t\t\t// AMONIS: 17/10/2016: Replacing jsbean.Message with new Implementation in Core\r\n                    var innerMessage = new Message( { body:payload } );\r\n\r\n\t\t\t\t\t// Wrap in an exchange ( as thats what is expected down stream )\r\n\t\t            var innerExchange = new Exchange( { inBody:innerMessage.body } );\r\n\r\n\t\t\t\t\t// Get the inner pulseClass\r\n\t\t\t\t\tvar pulseClass = innerExchange.getPulseClass();\r\n\r\n\t\t\t\t\tvar returnValue = innerExchange;\r\n\t\t\t\t\tif( me._unwrapExchange )\r\n\t\t\t\t\t\treturnValue = innerExchange.getPulse();\r\n\r\n\t\t\t\t\t// Fire an event for the inner pulse\r\n\t\t\t\t\tme.$fire( pulseClass, returnValue );\r\n\r\n\t            } else {\r\n\t            \tvar returnValue = exchange;\r\n\t\t\t\t\tif( me._unwrapExchange )\r\n\t\t\t\t\t\treturnValue = exchange.getPulse();\r\n\r\n\t            \t// Normal pulse. Fire an event with the exchange\r\n\t            \tme.$fire( pulseClass, returnValue );\r\n\t            }\r\n\r\n\t        };\r\n\r\n            me._hidden = function(){\r\n\r\n                // me.model._hidden( true );\r\n\r\n                me.$fire( \"postHidden\", {} );\r\n            };\r\n\r\n            /**\r\n             * ### _resumed\r\n             * @param  {type} json\r\n             * @return {type}      [description]\r\n             */\r\n            me._resumed = function( json ){\r\n                json = json || {};\r\n\r\n                // me.model._hidden( false );\r\n\r\n                me.$fire( \"postResume\", json );\r\n            };\r\n\r\n            /**\r\n             * @method shown\r\n             * Implements the functionality required when the Cog is shown / reshown.\r\n             */\r\n            me._shown = function( json ){\r\n                json = json || {};\r\n\r\n                // me.model._hidden( false );\r\n\r\n                // AMONIS: 21/03/2017: Refactoring the cog eventing\r\n                // Add in custom Knockout properties.\r\n                // I am not certain these are ever used?\r\n                //json[ \"ready\" ] = me.model._ready();\r\n                //json[ \"waiting\" ] = me.model._waitingOnResponse();\r\n\r\n                me.$fire( \"postShown\", json );\r\n            };\r\n\r\n\t\t\tme._systemCoreCogPulseHandler = function( data ){\r\n\t\t\t\tvar body = undefined;\r\n\r\n                // Check to see if its an unwrapped exchange\r\n                if( data && data.pulseHeader && data.pulseBody ){\r\n                    // This is a pulse so unwrapped must be true;\r\n                    body = data.pulseBody;\r\n                } else if( data && data.getPulseBody ){\r\n                    // This is an exchange. Get the pulse body.\r\n                    body = data.getPulseBody();\r\n                } else {\r\n                    // invalid type\r\n                    body = {};\r\n                }\r\n\r\n                // Filter the appropriate properties and fire the events\r\n                if( body.state === \"resumed\" ){\r\n                    me._resumed( body );\r\n                } else if ( body.visibility === \"visible\" ) {\r\n\t\t\t\t\tme._shown( body );\r\n\t\t\t\t} else if ( body.visibility === \"hidden\" ) {\r\n\t\t\t\t\tme._hidden( body );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set the flag to indicate that the last list request was processed.\r\n\t\t\t\t// me.model._waitingOnListResonse( false );\r\n\t\t\t\t// me.model.oProgress.hidden( true );\r\n\t\t\t};\r\n\r\n\r\n\r\n            /**\r\n             * @method $uninit\r\n             * reverses the actions of the $init method.\r\n             */\r\n            me[ \"$uninit\" ] = function(){\r\n                // UnBind the model from the UI\r\n                me.$unbind();\r\n            }\r\n\r\n            /**\r\n             * @method $\r\n             * add targeted jquery for DOM manipulation to My\r\n             */\r\n            me[ \"$init\" ] = function(){\r\n                var uiFramework = getUI();\r\n\r\n                if( uiFramework === \"knockout\" ){\r\n                    // Resolve all HTML references, for pumpco actions. This SHOULD be moved to a more common location\r\n                    me.$resolveHtml();\r\n                    // Resolve HTML handlers ( PHIL data-ui-show, data-ui-reveal etc. )\r\n                    phil.attachUiHandlers( me.id );\r\n                    // Create the Application Model\r\n                    me._createModel();\r\n                }\r\n\r\n                if( uiFramework === \"vue\" ){\r\n                    me.$fire( \"postModelCreate\", {} );\r\n                }\r\n\r\n                // Register the PulseHandler\r\n                me.$pulsed( me._pulseHandler );\r\n\r\n                me.$on( \"pumpco.system.core.cog\", me._systemCoreCogPulseHandler, me );\r\n\r\n                if( uiFramework === \"knockout\" ){\r\n                    // Bind the model\r\n                    me.$bind( me.model );\r\n\r\n                    // AMONIS: 13/04/2016: Request the cards specified in the resources.json file.\r\n                    me._requestCards();\r\n\r\n                    // Show the Home Screen\r\n                    me.$navto( \"home\" );\r\n                }\r\n\r\n                //Fire the postInit event\r\n                me.$fire( \"postInit\", { network:network } );\r\n            };\r\n\r\n            return me;\r\n        },\r\n\r\n\r\n        /**\r\n         * # addMyUtils\r\n         * Utility functions, that are helpful in many cogs\r\n         * @param  {[type]} obj [description]\r\n         * @return {[type]}     [description]\r\n         */\r\n        addMyUtils: function( obj, cogParams ){\r\n            var me = obj;\r\n\r\n            /**\r\n             * ### $round\r\n             * Rounds a number in PHP style\r\n             * @param  {[type]} number    [description]\r\n             * @param  {[type]} precision [description]\r\n             * @return {[type]}           [description]\r\n             */\r\n            me.$round = function(number, precision) {\r\n                var factor = Math.pow(10, precision);\r\n                var tempNumber = number * factor;\r\n                var roundedTempNumber = Math.round(tempNumber);\r\n                return roundedTempNumber / factor;\r\n            };\r\n\r\n            /**\r\n             * ###$urlParam\r\n             * Gets a Url param from the browser\r\n             * @params {string} name The name of the param to get\r\n             */\r\n            me.$urlParam = function( name ){\r\n                var param = the.getQueryStringParam( name );\r\n                if( param ){\r\n                    param = decodeURIComponent( param );\r\n                }\r\n                return param;\r\n            }\r\n\r\n\r\n            /**\r\n             * ### runMethod\r\n             * Helper to manage long running tasks\r\n             * Should probably pull out in to common\r\n             * @type {Object}\r\n             */\r\n            me.$runMethod = {\r\n                _references: {},\r\n                onceThenEvery: function( name, fn, minutes ){\r\n                    // Clear any intervals to prevent duplicates\r\n                    if( this._references[ name ] ){\r\n                        clearInterval[ this._references[ name ] ];\r\n                    }\r\n                    // Setup the interval timer\r\n                    this._references[ name ] = setInterval( fn, 1000 * 60 * minutes );\r\n                    // Invoke the method for first run\r\n                    fn();\r\n                }\r\n            };\r\n\r\n            /**\r\n             * ### setManifest\r\n             * Sets the manifest header for aOS for the Cog.\r\n             * It is expected that the Cog will be running fullscreen\r\n             * ( although not required ) and wants to be a PWA\r\n             * @param  {[type]} path gaia/convCentre ( assumes manifest.json to prevent abuse )\r\n             * @return {[type]}      [description]\r\n             */\r\n            me.$setManifest = function( path ){\r\n              var url = the.loc.href + \"&manifest=\" + path;\r\n              window.location = url;\r\n            }\r\n\r\n            return me;\r\n        },\r\n\r\n        /**\r\n         * ###addMyStore\r\n         * Adds a local storage capability the cog.\r\n         * This doesn't neccessarily use any particular method to support local storage of data. It uses whatever maybe best on the current platform.\r\n         * Therefore it is preferred to use this common API to prevent problems.\r\n         */\r\n        addMyStore: function( obj, store, jss ){\r\n            var me = obj;\r\n\r\n            // Create a storage key to prevent overwriting of values between cogs.\r\n            // Used primarily for old school localstorage which maybe enhanced in the future to something better by W3C\r\n            me._STOREKEY = \"cog.\" + me.id + \".\";\r\n\r\n            // **_persisted** property contains a list of the persisted items\r\n            me._persisted = {};\r\n\r\n            /**\r\n             * ###$jss\r\n             * reference to the global jss object\r\n             */\r\n            me.$jss = function( query, obj ){\r\n                return jss.direct( query, obj );\r\n            };\r\n\r\n            /**\r\n             * ###$store\r\n             * Saves an object to local storage\r\n             * @params name {string} the name of the item to store\r\n             * @params obj {object} the item to store\r\n             */\r\n            me.$store = function( name, obj ){\r\n                store.set( me._STOREKEY + name, obj );\r\n            };\r\n\r\n            /**\r\n             * ### $storeAsync\r\n             * Sets in browser storage using a callback for performance\r\n             * Also used indexedDB which is more roust that local storage\r\n             * @param  {type}     name\r\n             * @param  {type}     obj\r\n             * @param  {Function} callback\r\n             * @return {type}              [description]\r\n             */\r\n            me.$storeAsync = function( name, obj, callback ){\r\n                store.setAsync( me._STOREKEY + name, obj, callback );\r\n            };\r\n\r\n            /**\r\n             * ###$retrieve\r\n             * Looks for and returns an object from local storage\r\n             * @params name {string} the name of the item to retrieve\r\n             */\r\n            me.$retrieve = function( name ){\r\n                return store.get( me._STOREKEY + name );\r\n            };\r\n\r\n            /**\r\n             * ### $retrieveAsync\r\n             * Retreieves from browser storage using a callback for performance\r\n             * Also used indexedDB which is more roust that local storage\r\n             * @param  {type}     name\r\n             * @param  {Function} callback\r\n             * @return {type}              [description]\r\n             */\r\n            me.$retrieveAsync = function( name, callback ){\r\n                return store.getAsync( me._STOREKEY + name, callback );\r\n            };\r\n\r\n            /**\r\n             * ###$clear\r\n             * method to clear App properties and settings\r\n             * @params type {string} can be ...\r\n               STORAGE = clear the offline local storage for this cog id\r\n               ...\r\n             */\r\n            me.$clear = function( type ){\r\n                if( type === \"STORAGE\" ){\r\n                  store.del( me._STOREKEY );\r\n                } else {\r\n                  store.del( type );\r\n                }\r\n            };\r\n\r\n            /**\r\n             * ###_updator\r\n             * IMPORTANT: Fired with the scope containing the \"ns\" of the item being updated.\r\n             */\r\n            me._updator = function( value ){\r\n                me.$store( this.ns, value );\r\n            };\r\n\r\n            /**\r\n             * ###$persist\r\n             */\r\n            me.$persist = function( ns ){\r\n                // AMONIS: 04/05/2016: Get the Observable from the model ( using new peek functionality )\r\n                var observable = __get( ns, me, { peek:true } );\r\n\r\n                if( !observable )\r\n                    me.$debug( \"No observable found \" + ns );\r\n\r\n                // We can only subscribe to observables\r\n                if( observable.subscribe ){\r\n                    // Test the type to map the appropriate parser ( All storage is done at present on plain strings )\r\n                    var typeString = the.isToStr( observable() );\r\n\r\n                    // Create the object to store and record the subscribable\r\n                    var obj = { sub:observable.subscribe( me._updator, { ns:ns } ) };\r\n\r\n                    if( typeString == the.ISNUMBER ){\r\n                        // Set the parser to map from Strings when recovered from storage\r\n                        obj.parser = me.$parseInt;\r\n                    }\r\n\r\n                    // Store the subscribale object ( for potentially clearing later )\r\n                    me._persisted[ ns ] = obj;\r\n\r\n                    // Attempt to recover the value ( if previously set )\r\n                    me.$recover( ns );\r\n                }\r\n            };\r\n\r\n            /**\r\n             * ###$recover\r\n             */\r\n            me.$recover = function( name ){\r\n                for( var key in me._persisted ){\r\n                    var data = me.$retrieve( key );\r\n                    if( data ){\r\n                        setValue( me, key, data, me._persisted[ key ].parser );\r\n                    }\r\n                }\r\n\r\n                return store.get( me._STOREKEY + name );\r\n            };\r\n\r\n            /**\r\n             * ###$parseInt\r\n             * Parses an Int, but returns 0 if its invalid to prevent NAN being returned.\r\n             */\r\n            me.$parseInt = function( value ){\r\n                if( !value )\r\n                    return 0;\r\n\r\n                return parseInt( value );\r\n            }\r\n\r\n            /**\r\n             * @obj: the json object to change\r\n             * @access: string dot separates route to value\r\n             * @value: new value\r\n             * @parser: custom property parser.\r\n             */\r\n            function setValue( obj, access, value, parser ){\r\n                parser = parser || function( val ){ return val };\r\n\r\n                if ( typeof( access ) == 'string' ){\r\n                    access = access.split('.');\r\n                }\r\n                if (access.length > 1){\r\n                    if( phil.isObservable( obj ) ){\r\n                        setValue( obj()[ access.shift() ], access, value, parser );\r\n                    } else {\r\n                        setValue( obj[ access.shift() ], access, value, parser );\r\n                    }\r\n                }else{\r\n                    //\r\n                    if( phil.isObservable( obj[ access[ 0 ] ] ) ){\r\n                        obj[ access[ 0 ] ]( parser( value ) );\r\n                    } else {\r\n                        obj[ access[ 0 ] ] = parser( value );\r\n                    }\r\n\r\n                }\r\n            };\r\n\r\n            return me;\r\n        },\r\n\r\n\r\n\r\n        /**\r\n         * ###addMyDate\r\n         * Adds Cog based date handling\r\n         */\r\n        addMyDate: function( obj ){\r\n            var me = obj;\r\n\r\n            // Create a general wrapper around the.date handling\r\n            me.$date = function( dt, inFormat ){\r\n                // Default the dt string to now if not set\r\n                dt = dt || the.dateTime();\r\n\r\n                // Check if the dt is a string and parse, if neccessary\r\n                if( typeof dt === \"string\" ){\r\n                    dt = the.parseDateTime( dt, inFormat );\r\n                }\r\n\r\n                // We should have a valid \"dt\" by now.\r\n                // Return a helper set\r\n                // usage:\r\n                // my.$date().toDate();\r\n                // my.$data( '2017-10-11', 'yyyy-MM-dd' ).toString();\r\n                // my.$data( '2017-10-11', 'yyyy-MM-dd' ).toDateJS().add(1).day();\r\n\r\n                return {\r\n                    toString: function( outFormat ){\r\n                        outFormat = outFormat || \"dd-MMM-yyyy HH:mm:ss\";\r\n                        return dt === null ? null : dt.toString( outFormat ) || \"\";\r\n                    },\r\n                    toTime: function( outFormat ){\r\n                        outFormat = outFormat || \"HH:mm\";\r\n                        return dt === null ? null : dt.toString( outFormat ) || \"\";\r\n                    },\r\n                    toDate: function( outFormat ){\r\n                        outFormat = outFormat || \"dd-MMM-yyyy\";\r\n                        return dt === null ? null : dt.toString( outFormat ) || \"\";\r\n                    },\r\n                    compare: function( dt2 ){\r\n                        return dt === null ? null : the.compareDateTime( dt, dt2 );\r\n                    },\r\n                    toDateJS: function(){\r\n                        return dt === null ? null : dt;\r\n                    }\r\n                }\r\n            };\r\n\r\n            return me;\r\n        }\r\n    };\r\n\r\n\r\n    return My;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/cog/my.js?");

/***/ }),

/***/ "./src/cog/script.js":
/*!***************************!*\
  !*** ./src/cog/script.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 1.0.0\r\n * Copyright(c) 2011 Healthpump Inc.\r\n */\r\n/**\r\n * @class pumpco.core.ui.cog.Script\r\n * Mixin Script provides a mixin to process the Cog code.\r\n * This wraps the code in a try / catch to prevent small errors crashign the platform as well as providing a 'debug' option\r\n * which includes a dynamic debugger;\r\n * The Script mixin should do more checking for dodgy code, to prevent hacks into the system.\r\n * @author: Andy Monis\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! utils/log */ \"./src/utils/log.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( log ){\r\n\r\n    var Script = {\r\n        /**\r\n         * @method Method to return a try block head to the code\r\n         * This may also contain other dynamically generated functionality\r\n         * @private\r\n         */\r\n        _addTry: function( useStrict ){\r\n            useStrict = useStrict || false;\r\n\r\n            var block = [];\r\n\r\n            // AMONIS: 15/04/2016: Allow cog to use \"STRICT\" mode in JavaScript.\r\n            // set in resources params.useStrict:true ( defaults to false ); See System.coreReportingCog for an example.\r\n            if( useStrict !== false )\r\n                block.push( '\"use strict\";\\n' );\r\n\r\n            block.push( \"\\n// CI Try block\" );\r\n            block.push( \"\\ntry {\\n\" );\r\n\r\n            return  block.join(\"\");\r\n        },\r\n\r\n        /**\r\n         * @method Method to return a catch block and associated handling.\r\n         * This is likely to be fairly complex and written as text, so could be awkward to read.\r\n         * Be careful\r\n         * @private\r\n         */\r\n        _addCatch: function(){\r\n            return  \"// CI Catch Block\" +\r\n                    \"\\n} catch ( ex ) {\\n\" +\r\n                        //\"my.viewport.addCls(\\\"pc-cog-error\\\");\\n\" +\r\n                        //\"my.viewport.addCls(\\\"cog-exception\\\");\\n\" +\r\n                        \"var msg = ex.message || ex;\\n\" +\r\n                        \"my.$emergency( \\\"Error in Cog [\\\" + my.name + \\\"]: \\\" + ex.message );\" +\r\n                    \"}\\n\";\r\n        },\r\n\r\n        /**\r\n         * @method Method to return a valid debugger statement inside a script\r\n         * @private\r\n         */\r\n        _addDebug: function(){\r\n            return  \"// Dynamic debugger\" +\r\n                    \"\\n debugger;\\n\";\r\n        },\r\n\r\n        /**\r\n         * @method Method to add try / catch functionality to the Cogs at run time.\r\n         * This uses Byte Code injection ( well, string rewriting anyway ) to alter the source code to contain a try /\r\n         * catch. The purpose of this is to provide our system with redundancy functionality which should prevent\r\n         */\r\n        addTryCatch: function( initialScript, useStrict ){\r\n            useStrict = useStrict || false;\r\n\r\n            var embellishedScript = initialScript;\r\n\r\n            // Find the location of the.App.onReady, then the first {\r\n            var theAppIndex = this.script.indexOf( \"the.App.onReady\" );\r\n            if( theAppIndex === -1 )\r\n                return embellishedScript;\r\n\r\n            // Find the first { after the.App.onReady, which is the location for the try block\r\n            var tryIndex = this.script.indexOf( \"{\", theAppIndex );\r\n\r\n            // Find the LAST occurrence of } which is the location for the catch block\r\n            var catchIndex = this.script.lastIndexOf( \"}\" );\r\n\r\n            // Check that we have two valid locations to add the code\r\n            if( tryIndex === -1 || catchIndex === -1 ){\r\n                the.log.debug( this, \"Try / Catch enhancement Failed.\" );\r\n                return embellishedScript;\r\n            }\r\n\r\n            // AMONIS: 06/07/2015: Updated to allow multipart JS files to be loaded with try / catch\r\n            tryIndex = 0;\r\n            catchIndex = this.script.length;\r\n            var startBlock = this.script.substring( 0, tryIndex );\r\n            var middleBlock = this.script.substring( tryIndex, catchIndex );\r\n            // Split the existing code up into its constituent blocks\r\n            //var startBlock = this.script.substring( 0, tryIndex + 1 );\r\n            //var middleBlock = this.script.substring( tryIndex + 1, catchIndex );\r\n            var endBlock = this.script.substring( catchIndex );\r\n\r\n            // Re-assemble the code with embedded try / catch handling\r\n            embellishedScript = startBlock + this._addTry( useStrict ) + middleBlock + this._addCatch() + endBlock;\r\n\r\n            // Return the try / catch enhanced script\r\n            return embellishedScript;\r\n        },\r\n\r\n        /**\r\n         * @method Method to add a debugger statement to a script. This is used to\r\n         * enable debugging of embedded scripts that are dynamically loaded.\r\n         */\r\n        addDebugger: function( initialScript ){\r\n            var embellishedScript = initialScript;\r\n\r\n            // Find the location of the.App.onReady, then the first {\r\n            var theAppIndex = this.script.indexOf( \"the.App.onReady\" );\r\n            if( theAppIndex === -1 )\r\n                return embellishedScript;\r\n\r\n            // Find the first { after the.App.onReady, which is the location for the try block\r\n            var index = this.script.indexOf( \"{\", theAppIndex );\r\n\r\n            // Split the existing code up into its constituent blocks\r\n            var startBlock = this.script.substring( 0, index + 1 );\r\n            var endBlock = this.script.substring( index + 1 );\r\n\r\n            embellishedScript = startBlock + this._addDebug() + endBlock;\r\n\r\n            return embellishedScript;\r\n        }\r\n    };\r\n\r\n    return Script;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/cog/script.js?");

/***/ }),

/***/ "./src/cog/vue.js":
/*!************************!*\
  !*** ./src/cog/vue.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//\n// Pump API and Application 2.0.0.\n//\n// Copyright(c) 2015 Pumpco Inc.\n//\n\n// # cog.vue\n// ## *Framework Wrapper*\n// Vue.js is a framework for building rich web applications. It is promarily a\n// frontend only framework, but is lightweight and fast.\n// This is the integration model, it is called from My.js and called if a\n// library matching the \"match\" name is requested.\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){\n\n    // Return a simple object that can be invoked.\n    return {\n        match:  \"Vue\",\n        setup:  function( my, Vue ){\n            /**\n             * ### my.$Vue\n             * Wraps Vue, such that calls to new Vue go through this first.\n             * @param  {type} config\n             * @return {type}        [description]\n             */\n            my.$Vue = function( config ){\n                config = config || {};\n                // Adapt the El to be at a Cog as the lowest level\n                config.el = config.el === undefined ? '#' + my.id : '#' + my.id + ' ' + config.el;\n                // Call the parent\n                Vue.call( this, config );\n            }\n\n            // Extend the Vue methid to allow wrapping\n            my.$Vue.prototype = Object.create( Vue.prototype );\n\n            // Mixin all of the Object level static methods, such as Vue.compile\n            __mixin( my.$Vue, Vue );\n\n            // Return the my object for good measure\n            return my;\n        }\n    }\n\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/cog/vue.js?");

/***/ }),

/***/ "./src/core/events.js":
/*!****************************!*\
  !*** ./src/core/events.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n    Events\r\n    An events controller for passing information between processing in the system.\r\n    Aimed at complex Aysnchronous events, not DOM events.\r\n    @author Andy Monis\r\n*/\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n        __webpack_require__(/*! utils/log */ \"./src/utils/log.js\")\r\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( log ){        \r\n        var _event = undefined;\r\n\r\n        // Constructor\r\n        function Events () {\r\n            this.handlerGuid = 0;\r\n            this.events = {};\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        Events.prototype = {};\r\n\r\n        /**\r\n         * @method on\r\n         * @param name {string} the name of the event to listen for\r\n         * @param fn {function} the function to call when the event is triggered\r\n         * @param scope {object} the scope to run the function in\r\n         * @return id {string} the id of the handler, which can be used to cancel the handler using off\r\n         */\r\n        Events.prototype.on = function( name, fn, scope, options ){\r\n            options = options || {};\r\n            options.once = options.once || false;\r\n\r\n            // create the event name area if it does not exist;\r\n            if( !this.events[ name ] )\r\n                this.events[ name ] = {};\r\n\r\n            // Push the new handler into the array along with a guid to reference for cancelling\r\n            this.events[ name ][ this.handlerGuid ] = { \"fn\":fn, \"scope\":scope, \"once\":options.once };\r\n\r\n            // return the guid and increment the value for next time;\r\n            return this.handlerGuid++;\r\n        };\r\n\r\n        Events.prototype.off = function( name, id ){\r\n            var handlers = this.events[ name ];\r\n            if( handlers ){\r\n                var index = -1;\r\n                for( var key in handlers ){\r\n                    delete handlers[ key ];\r\n                }\r\n            }\r\n        };\r\n\r\n        Events.prototype.fire = function( name, params, options ){\r\n            log.debug( \"Events.fire():[\" + name + \"]\" );\r\n\r\n            var handlers = this.events[ name ];\r\n            if( handlers ){\r\n                for( var key in handlers ){\r\n                    this.invoke( handlers[ key ].fn, handlers[ key ].scope, params, options );\r\n                    // Check to see if this event was only to be triggered once\r\n                    if( handlers[ key ].once )\r\n                        delete handlers[ key ];\r\n                }\r\n            }\r\n        };\r\n\r\n        Events.prototype.invoke = function( fn, scope, params, options ){\r\n            options = options || {};\r\n            if( options.sync ){\r\n                // call Synchronously\r\n                fn.call( scope, params );\r\n            } else {\r\n                // call Asynchronously\r\n                setTimeout( function(){\r\n                    fn.call( scope, params );\r\n                }, 0 );\r\n            }\r\n        };\r\n\r\n        // Return the Animal function\r\n        if( !_event )\r\n            _event = new Events();\r\n\r\n        return _event;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/core/events.js?");

/***/ }),

/***/ "./src/core/invoke.js":
/*!****************************!*\
  !*** ./src/core/invoke.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n    Invoke\n    Invoke is intended to loosely couple services, by allowsing them to call\n    methods by name, rather than directly, which are then serviced by a registered\n    provider.\n    The functionality was moved out of Kernel into invoke, so that a consistent\n    invocation interface could be maintained and used witout everything needing\n    a reference to the Kernel.\n    The aim is to slowly move functionality out of direct calls into invoked calls.\n    @author Andy Monis\n    @date 09/06/2016\n*/\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! utils/log */ \"./src/utils/log.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( log ){\n        // This runs before Main has been called.\n        log.debug( \"core/invoke\" );\n\n        var _invoke = undefined;\n\n        function Invoke(){\n            // **property** {collection} api:\n            this.api = {};\n        }\n\n        // Create a new prototype object to base this on ( in this case a base object )\n        Invoke.prototype = {};\n\n        /**\n         * @method addApi\n         * Called by services to register a loosley coupled cross service call\n         */\n        Invoke.prototype.addApi = function( name, fn, scope ){\n            this.api[ name ] = { \"name\":name, \"fn\":fn, \"scope\":scope };\n        };\n\n        // ### listApi\n        // returns a string ( joined array ) of all the api calls\n        Invoke.prototype.listApi = function(){\n            var result = \"\";\n            for( var key in this.api ){\n                result += key + \", \";\n            }\n            return result;\n        };\n\n        /**\n         * @method invoke\n         * Called by services to make a loosely coupled cross service call.\n         */\n        Invoke.prototype.run = function( name, params, callback ){\n            if( this.api[ name ] ){\n                var method = this.api[ name ];\n\n                if( !method )\n                    return undefined;\n\n                // Invoke the API method\n                var result = undefined;\n                if( method.fn ){\n                    result = method.fn.call( method.scope, params );\n                } else {\n                    result = undefined;\n                }\n\n                // Providing a callback, essentially make this more async.\n                if( callback )\n                    callback( result );\n                else\n                    return result;\n            }\n        };\n\n        // Create the Invoker\n        if( !_invoke )\n            _invoke = new Invoke();\n\n        // return the instance\n        return _invoke;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/core/invoke.js?");

/***/ }),

/***/ "./src/core/io/beans/exchange.js":
/*!***************************************!*\
  !*** ./src/core/io/beans/exchange.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Pump API and Application 2.0.0.\n *\n * Copyright(c) 2016 Pumpco Inc.\n *\n  .\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! core/io/beans/message */ \"./src/core/io/beans/message.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log, Message ){\n        /**\n         * #Exchange\n         * A basic Exchange that can be sent round the system as a Pulse\n         * These were originally built before Camelet so there is duplication\n         * in the implementation, but also some divergence\n         * Following the moving across and removal of Ext ( Priority 1 ) we\n         * should look at using Camelet Types instead of these beans.\n         * AMONIS: 17/10/2016\n         */\n        function Exchange( config ){\n            config = config || {};\n\n            // **proeprty** {string} id\n            this.id = the.generateUuid();\n\n            // **property** {string} mep\n            this.mep = \"InOut\";\n\n            // **property** {Message} msgIn\n            this.msgIn = undefined;\n\n            // **property** {Message} msgOut\n            // this.msgIn = new pumpco.core.jsbean.Message( {\n            // AMONIS: 17/10/2016: Updated the class to remove dependency on namespace\n            this.msgIn = new Message( {\n                header:     undefined,\n                attachment: undefined,\n                body:       config.inBody\n            });\n\n            // this.msgOut = new pumpco.core.jsbean.Message( {\n            // AMONIS: 17/10/2016: Updated the class to remove dependency on namespace\n            this.msgOut = new Message( {\n                header:     undefined,\n                attachment: undefined,\n                body:       config.outBody\n            });\n\n        }\n\n        Exchange.prototype = {};\n\n        /**\n         * ###serialise\n         * @return {JSON} [description]\n         */\n        Exchange.prototype.serialise = function () {\n           return JSON.stringify( this );\n       };\n\n        /**\n         * ###deserialise\n         * @param {JSON} json [description]\n         * @return {JSON}      [description]\n         */\n        Exchange.prototype.deserialise = function (json){\n            var obj = {};\n            if( typeof json === \"string\" ){\n               obj = JSON.parse( json );\n            } else {\n               obj = json;\n            }\n\n            // Re-implement Ext.apply\n            for( var key in obj ){\n                this[ key ] = obj[ key ];\n            }\n\n            //var obj = Ext.JSON.decode(json);\n            //var exchange = new pumpco.core.jsbean.Exchange( exchangeJson );\n            // Ext.apply( this, obj );\n        };\n\n        /**\n         * ###getMessage\n         * Method to help extract a message from the Camel Exchange.\n         * This is the first step in unifying the inMsg and outMsg\n         */\n        Exchange.prototype.getMessage = function(){\n            var value;\n            if( this.msgIn && this.msgIn.body ){\n                value = this.msgIn;\n            } else {\n                value = this.msgOut;\n            }\n            return value;\n        };\n\n        /**\n         * ###getPulseClass\n         * Helper method to extract the Pulse Class from an exchange\n         */\n        Exchange.prototype.getPulseClass = function(){\n            var message = this.getMessage();\n            return message.body.pulseHeader.pulseClass;\n        };\n\n        /**\n         * ###getPulseHeader\n         * Helper method to extract the Pulse Header from an exchange\n         */\n        Exchange.prototype.getPulseHeader = function(){\n            var message = this.getMessage();\n            return message.body.pulseHeader;\n        };\n\n        /**\n         * ###getPulseBody\n         * Helper method to extract the Pulse Body from an exchange\n         */\n        Exchange.prototype.getPulseBody = function(){\n            var message = this.getMessage();\n            return message.body.pulseBody;\n        };\n\n        /**\n         * ###getPulse\n         * Helper method to extract the entire Pulse from an exchange\n         */\n        Exchange.prototype.getPulse = function(){\n            var message = this.getMessage();\n            return message.body;\n        };\n\n        /**\n         * ###setResponseToClass\n         * Sets setResponseToClass in the header\n         * This is a non-standard property i.e. it does not always exists.\n         * Therefore it is optionally set and doesn;t have a config option\n         */\n        Exchange.prototype.setResponseToClass = function( responseToClass){\n            var message = this.getMessage();\n            message.body.pulseHeader.responseToClass = responseToClass;\n        };\n\n\t    return Exchange;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/core/io/beans/exchange.js?");

/***/ }),

/***/ "./src/core/io/beans/exchangefacade.js":
/*!*********************************************!*\
  !*** ./src/core/io/beans/exchangefacade.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Pump API and Application 2.0.0.\n *\n * Copyright(c) 2016 Pumpco Inc.\n *\n  .\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! core/io/beans/message */ \"./src/core/io/beans/message.js\"), __webpack_require__(/*! core/io/beans/exchange */ \"./src/core/io/beans/exchange.js\"), __webpack_require__(/*! core/io/beans/pulse */ \"./src/core/io/beans/pulse.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log, Message, Exchange, Pulse ){\n        /**\n         * #ExchangeFacade\n         * A basic ExchangeFacade that can be sent round the system as a Pulse\n         * These were originally built before Camelet so there is duplication\n         * in the implementation, but also some divergence\n         * Following the moving across and removal of Ext ( Priority 1 ) we\n         * should look at using Camelet Types instead of these beans.\n         * AMONIS: 17/10/2016\n         */\n        function ExchangeFacade(){}\n\n        /**\n         * Method getExchange creates an Exchange object for pulsing to the PumpHouse.\n         * This make no assumptions about the parameters provided and whilst it can be called directly,\n         * the expected method of interaction is via the defined accessor methods.\n         * Creates a Pulse and wraps it in an Exchange.\n         * @param params\n         * @private\n         */\n        ExchangeFacade.getExchange = function (params) {\n            var pulse = new Pulse({\n                \"componentId\":           params.componentId,\n                \"mep\":                   params.mep,\n                \"pulseBody\":             params.pulseBody,\n                \"pulseClass\":            params.pulseClass,\n                \"pulseType\":             params.pulseType,\n                \"referenceId\":           params.referenceId || the.generateUuid(),\n                \"requestingComponentId\": params.requestingComponentId,\n                \"tracked\":               params.tracked\n            } );\n\n            // Get the well formed envelope from the Pulse with the spec request already added\n            var envelope = pulse.envelope;\n\n            var exchange = new Exchange( { inBody: envelope } );\n\n            return exchange;\n        };\n\n        // AMONIS: 22/05/2018: Code Coverage review. Not used.\n        /**\n         * Method getInOnly if a basic helper that pre-sets the MEP type\n         * @param params\n         * @private\n         */\n        // ExchangeFacade.getInOnly = function (params) {\n        //\n        //     var exchange = this.getExchange({\n        //         componentId:                params.compId,\n        //         mep:                        Pulse.IN,\n        //         pulseBody:                  params.body,\n        //         pulseClass:                 params.ns,\n        //         pulseType:                  params.type,\n        //         referenceId:                params.refId,\n        //         \"requestingComponentId\":    params.reqId,\n        //         tracked:                    params.tracked\n        //     });\n        //\n        //     return exchange;\n        // };\n\n        // AMONIS: 22/05/2018: Code Coverage review. Not used.\n        /**\n         * Method getOutOnly if a basic helper that pre-sets the MEP type\n         * @param params\n         * @private\n         */\n        // ExchangeFacade.getOutOnly = function (params) {\n        //\n        //     var exchange = pumpco.core.jsbean.ExchangeFacade.getExchange({\n        //         componentId:                params.compId,\n        //         mep:                        Pulse.OUT,\n        //         pulseBody:                  params.body,\n        //         pulseClass:                 params.ns,\n        //         pulseType:                  params.type,\n        //         referenceId:                params.refId,\n        //         \"requestingComponentId\":    params.reqId,\n        //         tracked:                    params.tracked\n        //     });\n        //\n        //     return exchange;\n        // };\n\n        /**\n         * Method getInOut if a basic helper that pre-sets the MEP type\n         * @param params\n         * @private\n         */\n        ExchangeFacade.getInOut = function (params) {\n\n            var exchange = this.getExchange({\n                componentId:                params.compId,\n                mep:                        Pulse.INOUT,\n                pulseBody:                  params.body,\n                pulseClass:                 params.ns,\n                pulseType:                  params.type,\n                referenceId:                params.refId,\n                \"requestingComponentId\":    params.reqId,\n                tracked:                    params.tracked\n            });\n\n            return exchange;\n        };\n\n        // AMONIS: 22/05/2018: Code Coverage review. Not used.\n        /**\n         * Method getInCommand creates an IN type COMMAND exchange.\n         * @param (compId:string,body:string,ns:string,refId:uuid)\n         * @method\n         */\n        // ExchangeFacade.getInCommand = function (params) {\n        //     var exchange = this.getInOnly({ compId: params.compId, body: params.body, ns: params.ns, type: Pulse.COMMAND, refId: params.refId, reqId:params.reqId, tracked:params.tracked });\n        //     return exchange;\n        // };\n\n        /**\n         * Method getInOutCommand creates an INOUT type COMMAND exchange.\n         * @param (compId:string,body:string,ns:string,refId:uuid)\n         * @method\n         */\n        ExchangeFacade.getInOutCommand = function (params) {\n            var exchange = this.getInOut({ compId: params.compId, body: params.body, ns: params.ns, type: Pulse.COMMAND, refId: params.refId, reqId:params.reqId, tracked:params.tracked });\n            return exchange;\n        };\n\n        // AMONIS: 22/05/2018: Code Coverage review. Not used.\n        /**\n         * Method getInEvent creates an IN type EVENT exchange.\n         * @param (compId:string,body:string,ns:string,refId:uuid)\n         * @method\n         */\n        // ExchangeFacade.getInEvent = function (params) {\n        //     var exchange = this.getInOnly({ compId: params.compId, body: params.body, ns: params.ns, type: Pulse.EVENT, refId: params.refId, reqId:params.reqId, tracked:params.tracked });\n        //     return exchange;\n        // },\n\n        // AMONIS: 22/05/2018: Code Coverage review. Not used.\n        /**\n         * Method getOutEvent creates an OUT type EXCHANGE exchange.\n         * @param (compId:string,body:string,ns:string,refId:uuid)\n         * @method\n         */\n        // ExchangeFacade.getOutEvent = function (params) {\n        //     var exchange = this.getOutOnly({ compId: params.compId, body: params.body, ns: params.ns, type: Pulse.EVENT, refId: params.refId, reqId:params.reqId, tracked:params.tracked });\n        //     return exchange;\n        // },\n\n        // AMONIS: 22/05/2018: Code Coverage review. Not used.\n        /**\n         * Method getOutDocument creates an OUT type DOCUMENT exchange.\n         * @param (compId:string,body:string,ns:string,refId:uuid)\n         * @method\n         */\n        // ExchangeFacade.getOutDocument = function (params) {\n        //     var exchange = this.getOutOnly({ compId: params.compId, body: params.body, ns: params.ns, type: Pulse.DOCUMENT, refId: params.refId, reqId:params.reqId , tracked:params.tracked});\n        //     return exchange;\n        // }\n\n\t    return ExchangeFacade;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/core/io/beans/exchangefacade.js?");

/***/ }),

/***/ "./src/core/io/beans/message.js":
/*!**************************************!*\
  !*** ./src/core/io/beans/message.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Pump API and Application 2.0.0.\n *\n * Copyright(c) 2016 Pumpco Inc.\n *\n  .\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log ){\n        /**\n         * #Message\n         * A basic Message that can be sent round the system as a Pulse\n         * These were originally built before Camelet so there is duplication\n         * in the implementation, but also some divergence\n         * Following the moving across and removal of Ext ( Priority 1 ) we\n         * should look at using Camelet Types instead of these beans.\n         * AMONIS: 17/10/2016\n         */\n        function Message( config ){\n            config = config || {};\n\n            this.header     = config.header;\n            this.attachment = config.attachment;\n            this.body       = config.body;\n        }\n\n        Message.prototype = {};\n\n        /**\n         * ###setBody\n         * Sets the body of the Message\n         * @param {String} body [description]\n         */\n        Message.prototype.setBody = function( body ){\n            this.body = body;\n        }\n\n\t    return Message;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n// Ext.define(\"pumpco.core.jsbean.Message\", {\n//\n//     header: undefined,\n//\n//     attachment: undefined,\n//\n//     body: undefined,\n//\n//     /**\n//      * Constructor creates a new message\n//      * @param config { header:String, attachment:String, body:String }\n//      */\n//     constructor: function (config) {\n//\n//         //Ext.apply(this, config);\n//\n//         this.header     = config.header;\n//         this.attachment = config.attachment;\n//         this.body       = config.body;\n//\n//     },\n//\n//     /**\n//      *\n//      * @param body {String}\n//      */\n//     setBody: function (body) {\n//\n//         this.body = body;\n//\n//     }\n// });\n\n\n//# sourceURL=webpack://AOS/./src/core/io/beans/message.js?");

/***/ }),

/***/ "./src/core/io/beans/pulse.js":
/*!************************************!*\
  !*** ./src/core/io/beans/pulse.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Pump API and Application 2.0.0.\n *\n * Copyright(c) 2016 Pumpco Inc.\n *\n  .\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log ){\n        /**\n         * #Pulse\n         * A basic Message that can be sent round the system as a Pulse\n         * These were originally built before Camelet so there is duplication\n         * in the implementation, but also some divergence\n         * Following the moving across and removal of Ext ( Priority 1 ) we\n         * should look at using Camelet Types instead of these beans.\n         * AMONIS: 17/10/2016\n         */\n        function Pulse( config ){\n            config = config || {};\n\n            // AMONIS: 18/10/2016: This doesn't do anything here as it was used in Ext for Inheritence / Extending\n            // Ext.apply(this, config);\n\n            this.envelope = {};\n\n            // Create the header\n            this.envelope.pulseHeader = {};\n\n            /**\n             * @cfg {String} pulseId Unique reference generated for each new Pulse ( RFC4211 UUID )\n             */\n            //this.envelope.pulseHeader.pulseId = pumpco.core.shared.Utils.generateUuid();\n            this.envelope.pulseHeader.pulseId = the.generateUuid();\n\n            /**\n             * @cfg {String} referenceId A reference used to correlate messages together when not authenticated\n             */\n            this.envelope.pulseHeader.referenceId = config.referenceId ? config.referenceId : \"00000001-0001-4000-0001-000000000001\";\n\n            /**\n             * @cfg {String} mep Message Exchange type InOut, In or Out. Defaults to inOut\n             */\n            //this.envelope.pulseHeader.mep = config.mep ? config.mep : the.Const.MEP.INOUT;\n            this.envelope.pulseHeader.mep = config.mep ? config.mep : Pulse.INOUT;\n\n            /**\n             * @cfg {Date} timestamp Generated by the Pulse class when instantiated.\n             */\n            //this.envelope.pulseHeader.timestamp = pumpco.core.shared.Utils.getIsoUtcDate();\n            // AMONIS: 22-07-2014: Updated to remove dependency on pumpco.core.shared.Utils ( which is causing problems with RequireJS )\n            this.envelope.pulseHeader.timestamp = the.formatDateTime( the.dateTime() );\n\n            /**\n             * @cfg {String} pulseType The type of pulse to send, either Command, Document or Event\n             */\n            this.envelope.pulseHeader.pulseType = config.pulseType ? config.pulseType : Pulse.COMMAND;\n\n            /**\n             * @cfg {String} pulseResponseTimeout Sets the timeout for any pulse.\n             */\n            this.envelope.pulseHeader.pulseResponseTimeout = config.pulseTimeout ? config.pulseTimeout : \"5000\";\n\n            /**\n             * @cfg {String} pulseClass The fully qualified Pulse Class in the dot for e.g. pump.test.message\n             */\n            this.envelope.pulseHeader.pulseClass = config.pulseClass ? config.pulseClass : \"\";\n\n            /**\n             * @cfg {String} componentId The ID of the componenet who sent the request\n             */\n            if (config.componentId) {\n                this.envelope.pulseHeader.componentId = config.componentId;\n            }\n\n            /**\n             * @cfg {String} requestingComponentId The ID of the componenet who sent the request\n             */\n            if (config.requestingComponentId) {\n                this.envelope.pulseHeader.requestingComponentId = config.requestingComponentId;\n            }\n\n            /**\n             * @cfg {String} tracked Flag to indicate that this Pulse should be tracked and an exception raised if not sent / received correctly\n             */\n            if (config.tracked) {\n                this.envelope.pulseHeader.tracked = config.tracked;\n            }\n\n            /**\n             * @cfg {Object} pulseBody The message that needs to be pulsed. Usually this consist of a PulseHeader / PulseBody\n             */\n            this.envelope.pulseBody = config.pulseBody ? config.pulseBody : {};\n        };\n\n        Pulse.IN        = \"in\";\n        Pulse.INOUT     = \"inOut\";\n        Pulse.OUT       = \"out\";\n\n        Pulse.COMMAND   = \"command\";\n        Pulse.DOCUMENT  = \"document\";\n        Pulse.EVENT     = \"event\";\n\n        Pulse.prototype = {};\n\n        /**\n         * ###setComponentId\n         * @param {string} componentId [description]\n         */\n        Pulse.prototype.setComponentId = function( componentId ){\n            this.envelope.pulseHeader.componentId = componentId;\n        };\n\n        /**\n         * ###setResponseToClass\n         * @param {string} responseToClass [description]\n         */\n        Pulse.prototype.setResponseToClass = function( responseToClass ){\n            this.envelope.pulseHeader.responseToClass = responseToClass;\n        };\n\n\t    return Pulse;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/core/io/beans/pulse.js?");

/***/ }),

/***/ "./src/core/io/components/componentpulsecontroller.js":
/*!************************************************************!*\
  !*** ./src/core/io/components/componentpulsecontroller.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! camelet */ \"camelet\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log ){\r\n\r\n    \t/**\r\n    \t * #core.io.components.ComponentPulseController\r\n\t\t * Provides the main internal / external routing for messages and configures much of the Black / White listing.\r\n    \t * @author Andy Monis\r\n    \t */\r\n        var _ComponentPulseController = function( config ){\r\n\r\n            var me = {};\r\n\r\n            // **property** {string} platform: A flag to indicate the platform that is currently running \"Desktop\" || \"Mobile\"\r\n            me.platform = config.platform || undefined;\r\n\r\n            // **private** {collections} _listeners: A collection of listeners on this component\r\n            me._listeners = {};\r\n\r\n            me.inbox = [];\r\n\r\n            // METHODS\r\n\r\n            /**\r\n             * ### onsend\r\n             * Override the default onsend method with the new version.\r\n             * @params {EndPoint} endpoint: the endpoint to action, prior to sending\r\n             * @params {Mesaage} message: the Camelet Message that is being sent.\r\n             * @returns {boolean} should this message be sent or not?\r\n             */\r\n            me.onsend = function( endpoint, message ){\r\n                var header = message.getHeaders();\r\n                var body = message.getBody();\r\n\r\n                var sendFlag = endpoint.withOptions( body.pulseHeader.pulseClass );\r\n\r\n                // Don't send if this Controller is paused\r\n                var schemeOption = me.getOption( \"scheme\" );\r\n                if( schemeOption === \"paused\" ){\r\n                    sendFlag = false;\r\n                }\r\n\r\n                return sendFlag;\r\n            };\r\n\r\n            /**\r\n             * ### onprocess\r\n             * Override the default capability to set the AuthToken if on eis found in the response.\r\n             * This should result in all communication going to the Secure channel ( including polling requests )\r\n             * from now on, until a logout.response is received.\r\n             * @params {Camelet.Component} component: the component to work with\r\n             * @params {Camelet.Exchange} exchange: the full Camelet exchange\r\n             */\r\n            me.onprocess = function( component, exchange ){\r\n                var message = exchange.getMessage();\r\n                var body = message.getBody();\r\n                var pulseHeader = body.pulseHeader;\r\n\r\n                // Set the scheme option to use \"socket\" or \"xhr\" (default)\r\n                var schemeOption = me.getOption( \"scheme\" );\r\n                if( schemeOption === \"paused\" ){\r\n                    // Only Valid schemes will be sent so \"paused\" scheme won't be sent by \"producer-pulse-external-secure\"\r\n                    // Store exchange in inbox\r\n                    me.inbox.push( { /*\"component\":component,*/ \"exchange\":exchange, \"scope\":me } );\r\n                }\r\n\r\n                // FORCE OAuth down XHR channel\r\n                if( pulseHeader.pulseClass.toLowerCase() === \"pumpCo.user.oauth2.refresh.request\" ){\r\n                    exchange.properties.setValue( \"scheme\", \"xhr\" );\r\n                }\r\n\r\n                exchange.properties.setValue( \"scheme\", schemeOption );\r\n\r\n                // Add platform flag ( if present ) for getting a mobile version of the site\r\n                if( me.platform ){\r\n                    if( body.pulseHeader.pulseClass === \"pumpCo.system.site.request\" ||\r\n                        body.pulseHeader.pulseClass === \"pumpCo.user.site.request\" ) {\r\n                        body.pulseBody[ \"place\" ] = me.platform;\r\n                    }\r\n                }\r\n\r\n                return exchange;\r\n            };\r\n\r\n            /**\r\n             * ###optionFlush\r\n             * Flushes the inbox, by popping all of the items out of it.\r\n             * Used primarily when changing between Open to Secure channels.\r\n             */\r\n            me.optionFlush = function(){\r\n                for( var i=0; i<me.inbox.length; i++ ){\r\n                    var item = me.inbox.pop();\r\n\r\n                    me.pulsed.call( item.scope, item.exchange );\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Constructor\r\n             */\r\n\r\n            // Set the default properties\r\n            config = config || {};\r\n            config.name = config.name || \"component-pulse-controller\";\r\n            config.scheme = config.scheme || \"\";\r\n            config.context = config.context || \"\";\r\n            //config.inOptions = config.inOptions || [ { cls:\"\" } ];\r\n            config.inOptions = config.inOptions || [\r\n                { cls:\"pumpco.system.core.cog\", list:\"black\" },     // Internal pumpco cog messages, used for show / hide\r\n                { cls:\"pumpco.roadie.\", list:\"black\" },             // Internal roadie communication\r\n                { cls:\"pumpco.internal.\", list:\"black\" },           // Black list incorrectly named Internal requests.\r\n                { cls:\"pumpco.\", list:\"white\" },\r\n                { cls:\"user.registration\", list:\"white\" }           // Legacy support for old pulse names\r\n            ];\r\n            config.outOptions = config.outOptions || [ { cls:\"\" } ];\r\n\r\n            var temp = camelet.DynamicRouter( config );\r\n            for( var prop in temp ){\r\n                if( !me[ prop ] ){\r\n                    me[ prop ] = temp[ prop ];\r\n                }\r\n            }\r\n            me._super = temp;\r\n\r\n            // override the parent on process;\r\n            me._super.onprocess = me.onprocess;\r\n\r\n            // Override the parent onsend\r\n            me._super.onsend = me.onsend;\r\n\r\n            // **option** scheme:\r\n            me.setOption( \"scheme\", \"xhr\" );\r\n\r\n            // **option** flush:\r\n            me.setOption( \"flush\", me.optionFlush );\r\n\r\n            // return the instance\r\n            return me;\r\n        };\r\n\r\n    \t/**\r\n    \t * ComponentPulseController\r\n    \t * Class Wrapper to package the old style JS as a RequireJS class.\r\n    \t */\r\n\t    function ComponentPulseController( config ){\r\n\t    \treturn _ComponentPulseController( config );\r\n\t    }\r\n\t    ComponentPulseController.prototype = {};\r\n\r\n\t    return ComponentPulseController;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/core/io/components/componentpulsecontroller.js?");

/***/ }),

/***/ "./src/core/io/components/componentpulseexternalin.js":
/*!************************************************************!*\
  !*** ./src/core/io/components/componentpulseexternalin.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! camelet */ \"camelet\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log ){\r\n\r\n        var _ComponentPulseExternalIn = function( config ){\r\n            /**\r\n             * #core.io.components.ComponentPulseExternalIn\r\n\t\t\t * Accepts messages from either the Open / Secure components and routes them back into the Pump.\r\n             * @author Andy Monis\r\n             */\r\n            var me = {};\r\n\r\n\t\t\t// **private** {collections} _listeners: A collection of listeners on this component\r\n            me._listeners = {};\r\n\r\n\t\t\t/**\r\n             * ###listen\r\n             * register an event listener\r\n             * @params {string} eventname: name of the event to listen on\r\n             * @params {function} fn: the callback function to invoke\r\n             * @params {boolean} single: **optional** a flag to indicate if this listener should be removed after being fired once ( defaults to falase )\r\n             */\r\n            me.listen = function( eventname, fn, single ){\r\n                single = single || false;\r\n\r\n                if( !me._listeners[ eventname ] )\r\n                    me._listeners[ eventname ] = [];\r\n\r\n                me._listeners[ eventname ].push( { \"fn\":fn, \"single\":single } );\r\n            };\r\n\r\n\t\t\t/**\r\n             * ###fire\r\n             * triggers an event\r\n             * @params {string} eventname: name of the event to invoke\r\n             * @params {json} params: the json parameters to pass into the callback\r\n             */\r\n            me.fire = function( eventname, params ){\r\n                var listeners = me._listeners[ eventname ];\r\n\r\n                if( !listeners )\r\n                    return -1;\r\n\r\n                for( var i=0; i<listeners.length; i++ ){\r\n                    var listener = listeners[ i ];\r\n                    listener.fn.call( this, params );\r\n\r\n                    if( listener.single ){\r\n                        // remove the listener if it is a single only\r\n                        listeners.splice( i, 1);\r\n                    }\r\n                }\r\n            };\r\n\r\n            // METHODS\r\n\r\n            /**\r\n             * ### onsend\r\n             * Override the default onsend method with the new version.\r\n             * @params {EndPoint} endpoint: the endpoint to action, prior to sending\r\n             * @params {Mesaage} message: the Camelet Message that is being sent.\r\n             * @returns {boolean} should this message be sent or not?\r\n             */\r\n            me.onsend = function( endpoint, message ){\r\n                var header = message.getHeaders();\r\n                var body = message.getBody();\r\n\r\n                var sendFlag = endpoint.withOptions( body.pulseHeader.pulseClass );\r\n\r\n                me.fire( \"presend\", message );\r\n\r\n                return sendFlag;\r\n            };\r\n\r\n            /**\r\n             * ### onprocess\r\n             * Override the default capability to set the AuthToken if on eis found in the response.\r\n             * This should result in all communication going to the Secure channel ( including polling requests )\r\n             * from now on, until a logout.response is received.\r\n             * @params {Camelet.Component} component: the component to work with\r\n             * @params {Camelet.Exchange} exchange: the full Camelet exchange\r\n             */\r\n            me.onprocess = function( component, exchange ){\r\n                var message = exchange.getMessage();\r\n                var body = message.getBody();\r\n\r\n                // !IMPORTANT - This is where the AUTHTOKEN is set, on the way back in...\r\n                if( body.pulseHeader.pulseClass === \"pumpCo.user.login.response\" && body.pulseBody.authToken ){\r\n                    //var camelet = this.getCameletInstance();\r\n                    //camelet.setComponentProperty( \"component-pulse-external-out\", \"authToken\", body.pulseBody.authToken );\r\n\r\n                    // Fire the Component Event\r\n                    me.fire( \"authtoken\", { \"authtoken\":body.pulseBody.authToken } );\r\n                }\r\n\r\n                if( body.pulseHeader.pulseClass === \"pumpCo.user.logout.response\" ){\r\n                    var camelet = this.getCameletInstance();\r\n                    camelet.setComponentProperty( \"component-pulse-external-out\", \"authToken\", undefined );\r\n                }\r\n\r\n                // AMONIS: 20/11/2017: Clear the Poller to poll again\r\n                // This tries to make sure that a response is received from poll request before sending another poll request.\r\n                if( body.pulseHeader.pulseClass === \"pumpCo.user.pulse.request\" ){\r\n                    var camelet = this.getCameletInstance();\r\n                    camelet.getComponentProperty( \"component-pulse-external-polling\", \"pollReceived\", true );\r\n                }\r\n\r\n                // Speedup polling if any response is received.\r\n                // Response is NOT a Timeout Exception\r\n                if( body.pulseHeader.pulseClass.indexOf( \"exception\" ) === -1 ){\r\n                    var camelet = this.getCameletInstance();\r\n                    camelet.getComponentProperty( \"component-pulse-external-polling\", \"pollFaster\", true );\r\n                } else {\r\n                    // AMONIS: 17/02/2016: Two exception messages generally occur\r\n                    // 1) \"exception.system.timeout\" a general message which is sent when no pulses are at the backend to send to the front\r\n                    // 2) \"exception.pumpCo.user.authentication.validation.invalidCredentials\" a message sent when the AuthToken is invalid or the backend is down.\r\n                    var camelet = this.getCameletInstance();\r\n                    camelet.getComponentProperty( \"component-pulse-external-polling\", \"pollSlower\", true );\r\n                }\r\n\r\n                // Cut the poll timeout to minimum if \"additionalResponses\" are already queued.\r\n                // If Additional Responses are queued, go and get them quickly.\r\n                if( body.pulseHeader.additionalResponses ){\r\n                    var camelet = this.getCameletInstance();\r\n                    camelet.getComponentProperty( \"component-pulse-external-polling\", \"poll\", true );\r\n                }\r\n\r\n                return exchange;\r\n            };\r\n\r\n            /**\r\n             * @method Constructor\r\n             *\r\n             */\r\n\r\n            // Set the default properties\r\n            config = config || {};\r\n            config.name = config.name || \"component-pulse-external-in\";\r\n            config.scheme = config.scheme || \"\";\r\n            config.context = config.context || \"\";\r\n            config.inOptions = config.inOptions || [ { cls:\"\" } ];\r\n            config.outOptions = config.outOptions || [ { cls:\"\" } ];\r\n\r\n            var temp = camelet.DynamicRouter( config );\r\n            for( var prop in temp ){\r\n                if( !me[ prop ] ){\r\n                    me[ prop ] = temp[ prop ];\r\n                }\r\n            }\r\n            me._super = temp;\r\n\r\n            // override the parent on process;\r\n            me._super.onprocess = me.onprocess;\r\n\r\n            // Override the parent onsend\r\n            me._super.onsend = me.onsend;\r\n\r\n            // return the instance\r\n            return me;\r\n        };\r\n\r\n    \t/**\r\n    \t * ComponentPulseExternalIn\r\n\t\t * Class Wrapper to package the old style JS as a RequireJS class.\r\n    \t */\r\n\t    function ComponentPulseExternalIn( config ){\r\n\t    \treturn _ComponentPulseExternalIn( config );\r\n\t    }\r\n\r\n\t    ComponentPulseExternalIn.prototype = {};\r\n\r\n\t    return ComponentPulseExternalIn;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/core/io/components/componentpulseexternalin.js?");

/***/ }),

/***/ "./src/core/io/components/componentpulseexternalout.js":
/*!*************************************************************!*\
  !*** ./src/core/io/components/componentpulseexternalout.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Pump API and Application 2.0.0.\n *\n * Copyright(c) 2015 Pumpco Inc.\n *\n  .\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! aos.config */ \"./src/aos.config.js\"), __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! camelet */ \"camelet\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function( AOSConfig, events, log ) {\n\n    /**\n     * #core.io.components.ComponentPulseExternalOut\n     * Accepts messages from other components and routes them to the External facing components.\n     * @author Andy Monis\n     */\n    var _ComponentPulseExternalOut = function(config) {\n\n      var me = {};\n\n      // **const** {int} LAST_SEND_TIMEOUT the amount of time to wait before raising an event, about the long gap between pulses ( indicative of no user interatcion, for a long time )\n      me.LAST_SEND_TIMEOUT = AOSConfig.getSwitch( \"coreIoPulseGapTimeout\" ) || 60000 * 60;\n\n      // **private** {int} ms timestamp to track last successful pulse sending\n      me._lastSend = Date.now();\n\n      // METHODS\n\n      /**\n       * ### onprocess\n       * Override the default capability to set the AuthToken if on eis found in the response.\n       * This should result in all communication going to the Secure channel ( including polling requests )\n       * from now on, until a logout.response is received.\n       * @params {Camelet.Component} component: the component to work with\n       * @params {Camelet.Exchange} exchange: the full Camelet exchange\n       */\n      me.onprocess = function(component, exchange) {\n        var authToken = component.getOption(\"authToken\")\n\n        // Set the authToken in the exchange if found\n        if (authToken) {\n          exchange.properties.setValue(\"authToken\", authToken);\n        }\n\n        // AMONIS: 21/09/2015: Setting the authorization token ( which is used by oauth )\n        var authorization = component.getOption(\"Authorization\")\n        if (authorization) {\n          exchange.properties.setValue(\"Authorization\", authorization);\n        }\n\n        return exchange;\n      };\n\n      /**\n       * ### onsend\n       * Override the default onsend method with the new version.\n       * @params {EndPoint} endpoint: the endpoint to action, prior to sending\n       * @params {Mesaage} message: the Camelet Message that is being sent.\n       * @returns {boolean} should this message be sent or not?\n       */\n      me.onsend = function(endpoint, message, properties) {\n        var headers = message.getHeaders();\n        var body = message.getBody();\n\n        // Assign Open channel by default\n        var context = \"/pumpco/external/open\";\n\n        var pulseHeader = body.pulseHeader;\n\n        // AMONIS: 11/11/2016: Add in endpointId to the pulseHeader\n        // This is not exposed to the world outside the Pump, so the Cog Developer is\n        // unaware of this property.\n        pulseHeader.endpointId = me._endpointId;\n\n        // Assign Secure channel if pulse matches special case \"pumpco.user.login.request\"\n        if (pulseHeader.pulseClass.toLowerCase() === \"pumpco.user.login.request\")\n          context = \"/pumpco/external/secure\";\n\n        // Assign a secure Channel if authToken is set.\n        var authToken = properties.getValue(\"authToken\");\n        if (authToken) {\n          context = \"/pumpco/external/secure\";\n        }\n\n        // Assign a secure Channel if Authorization (OAuth) token is set.\n        var oAuth = properties.getValue(\"Authorization\");\n        if (oAuth) {\n          context = \"/pumpco/external/secure\";\n        }\n\n        if (pulseHeader.pulseClass.toLowerCase() === \"pumpco.user.oauth2.login.request\" ||\n          pulseHeader.pulseClass.toLowerCase() === \"pumpco.user.oauth2.refresh.request\") {\n          context = \"/pumpco/external/open\";\n        }\n\n        // Check to see if the endpoint matches criteria\n        var sendFlag = endpoint.withOptions(pulseHeader.pulseClass);\n        if (sendFlag) {\n          if (endpoint.context === context) {\n            sendFlag = true;\n          } else {\n            sendFlag = false;\n          }\n        }\n\n        if (sendFlag === true) {\n          // AMONIS: 22-06-2018: Raise a send event for tracking\n          var now = Date.now();\n          if( now - me._lastSend > me.LAST_SEND_TIMEOUT ) {\n            events.fire(\"core.io.external.send.gap\", { now: now, last: me._lastSend, header: pulseHeader });\n          }\n          me._lastSend = now;\n        }\n\n        return sendFlag;\n      };\n\n      /**\n       * @method Constructor\n       *\n       */\n\n      // Set the default properties\n      config = config || {};\n      config.name = config.name || \"component-pulse-external-out\";\n      config.scheme = config.scheme || \"\";\n      config.context = config.context || \"\";\n      config.inOptions = config.inOptions || [{\n          cls: \"pumpco.\",\n          list: \"white\"\n        },\n        {\n          cls: \"user.registration\",\n          list: \"white\"\n        },\n      ];\n      config.outOptions = config.outOptions || [{\n        cls: \"\"\n      }];\n      config.onsend = me.onsend;\n\n      var temp = camelet.DynamicRouter(config);\n      for (var prop in temp) {\n        if (!me[prop]) {\n          me[prop] = temp[prop];\n        }\n      }\n      me._super = temp;\n\n      // override the parent on process;\n      me._super.onprocess = me.onprocess;\n\n      // AMONIS: 11/11/2016: Added a property to store the endpointId\n      me._endpointId = config.endpointId || \"no endpintId set\";\n\n      // return the instance\n      return me;\n    };\n    /**\n     * ###ComponentPulseExternalOut\n     * Class Wrapper to package the old style JS as a RequireJS class.\n     */\n    function ComponentPulseExternalOut(config) {\n      return _ComponentPulseExternalOut(config);\n    }\n    ComponentPulseExternalOut.prototype = {};\n\n    return ComponentPulseExternalOut;\n  }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/core/io/components/componentpulseexternalout.js?");

/***/ }),

/***/ "./src/core/io/components/componentpulseexternalpolling.js":
/*!*****************************************************************!*\
  !*** ./src/core/io/components/componentpulseexternalpolling.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! camelet */ \"camelet\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log ){\r\n\r\n\t\t/**\r\n    \t * #core.io.components.ComponentPulseExternalPolling\r\n\t\t * Sets up the polling which is used heavily for XHR to receive messgaes in an Async manner or lightly in SOCKET, to act as a keep alive for the AuthToken.\r\n    \t * @author Andy Monis\r\n    \t */\r\n        var _ComponentPulseExternalPolling = function( config ){\r\n\r\n            var me = {};\r\n\r\n            // PRIVATE VARIABLES\r\n\r\n            // Timeout callback declaration\r\n            me._timeout = undefined;\r\n\r\n            // Fibonacci Delay and previous values\r\n            me._delay = 144;\r\n            me._previous = 89;\r\n\r\n            // Generate a Single UUID to be used by the any Exchanges.\r\n            // This is important for polling, such that  anything with this UUID is only returned to this EP.\r\n            // Not sure how this is effected by AuthToken?\r\n            me._referenceId = camelet.Utils.generateUuid();\r\n\r\n            // Flag to identify whether polling should occur or not\r\n            me._stopped = false;\r\n\r\n            // Flag to identify whether polling should be reset ( i.e. full pace ) or not.\r\n            // Keep-Alive mode should just send a pulse infrequently\r\n            me._keepAlive = false;\r\n\r\n            // PRIVATE METHODS\r\n\r\n            /**\r\n             * ###createPollingMethod\r\n             * Creates a standard Polling message exchange that is sent to the PumpHouse.\r\n             * Importantly, this MUST use the consistent ReferenceId so that all pulses are returned to this EndPoint.\r\n             */\r\n            me.createPollingMessage = function(){\r\n                var message = new camelet.Message({\r\n                    body: {\r\n                        pulseHeader: {\r\n                            \"mep\":\"inout\",\r\n                            \"pulseClass\": \"pumpCo.user.pulse.request\",\r\n                            \"pulseId\":camelet.Utils.generateUuid(),\r\n                            \"pulseResponseTimeout\":\"100\",\r\n                            \"pulseType\":\"command\",\r\n                            \"referenceId\":me._referenceId,\r\n                            \"timestamp\":camelet.Utils.now()\r\n                        },\r\n                        pulseBody: {}\r\n                    }\r\n                });\r\n\r\n                // Create the exchange & add the message\r\n                var exchange = new camelet.Exchange();\r\n                exchange.setMessage( message );\r\n\r\n                // AMONIS: 10/10/2016: Updated to allow scheme to be configured by pump ( XHR / SOCKET )\r\n                var schemeOption = me.getOption( \"scheme\" );\r\n\r\n                // Set the scheme for the pulse dynamically\r\n                exchange.properties.setValue( \"scheme\", schemeOption );\r\n\r\n                return exchange;\r\n            };\r\n\r\n            /**\r\n             * ###resetDelay\r\n             * Resets the delay back to the default levels.\r\n             * This poller is part of the forwarding chain for all external pulses. Whenever an external pulse goes\r\n             * through ( i.e. the onSend() method is called ) the polling delay is reset, so that it is sped up.\r\n             * The first poll will be 144ms ( about 1/8th of a second ) and then will increment unless more outbound\r\n             * messages are sent.\r\n             * This means that the polling slows down if it is not being used.\r\n             */\r\n            me.resetDelay = function(){\r\n                if( me._keepAlive ){\r\n                    // Used to calc delay by doing _delay - _previous = 240000ms or 4mins\r\n                    me._delay    = 120000;\r\n                    me._previous = 60000;\r\n                } else {\r\n                    me._delay    = 144;\r\n                    me._previous = 89;\r\n                }\r\n\r\n                return me._delay;\r\n            };\r\n\r\n            /**\r\n             * ###decrementDelay\r\n             * Increments the delay in a consistent manner\r\n             * This moves the delay on using the fibonnaci number system, such that the next delay is the sum\r\n             * of the previous 2 delays.\r\n             * This delay is incremented until it is greater than 4000, which in the fibonacci scheme is 4181ms.\r\n             */\r\n            me.decrementDelay = function(){\r\n                if( me._delay > 144 ){\r\n                    var temp = me._previous;\r\n                    me._previous = me._delay - me._previous;\r\n\r\n                    me._delay = temp;\r\n                }\r\n\r\n                return me._delay;\r\n            };\r\n\r\n            /**\r\n             * ###incrementDelay\r\n             * Increments the delay in a consistent manner\r\n             * This moves the delay on using the fibonnaci number system, such that the next delay is the sum\r\n             * of the previous 2 delays.\r\n             * This delay is incremented until it is greater than 4000, which in the fibonacci scheme is 4181ms.\r\n             */\r\n            me.incrementDelay = function(){\r\n                if( me._delay < 4000 ){\r\n                    var temp = me._delay;\r\n\r\n                    me._delay = me._delay + me._previous;\r\n                    me._previous = temp;\r\n                }\r\n\r\n                return me._delay;\r\n            };\r\n\r\n            /**\r\n             * ###poll\r\n             * called on a timer to create a new 'standard' polling exchange message and send it.\r\n             * finally resets its own polling timer ( which allows it to be switched on / off if required in the future )\r\n             */\r\n            me.poll = function(){\r\n                clearTimeout( me._timeout );\r\n\r\n                // AMONIS: 20/11/2017: If not, create poll message\r\n                var exchange = me.createPollingMessage();\r\n\r\n                me.pulse( exchange );\r\n\r\n                me._timeout = setTimeout( me.poll, me.incrementDelay() );\r\n            };\r\n\r\n            /**\r\n             * ###optionPoll\r\n             * Method exposed as a public interface, to allow the other components to reset the polling.\r\n             * This is used if an event comes in to ExternalIn, which is part of a set of messages.\r\n             * This is called in ComponentPulseExternalIn:58\r\n             */\r\n            me.optionPoll = function( now ){\r\n                //me.resetDelay();\r\n                clearTimeout( me._timeout );\r\n\r\n                if( !me._stopped ){\r\n                    // Component is set in \"live\" mode, so reset polling as usual\r\n                    me._timeout = setTimeout( me.poll, me.resetDelay() );\r\n                }\r\n\r\n            };\r\n\r\n            /**\r\n             * ###stopPoll\r\n             * Method exposed as a public interface, to allow the other components to reset the polling.\r\n             * This is used if an event comes in to ExternalIn, which is part of a set of messages.\r\n             * This is called in ComponentPulseExternalIn:58\r\n             */\r\n            me.stopPoll = function(){\r\n                // Clear the existing timeout\r\n                clearTimeout( me._timeout );\r\n\r\n                // Set the stopped flag\r\n                me._stopped = true;\r\n            };\r\n\r\n            /**\r\n             * ###keepAlive\r\n             * Method exposed as a public interface, to allow the other components to reset the polling.\r\n             * This is used if an event comes in to ExternalIn, which is part of a set of messages.\r\n             * This is called in ComponentPulseExternalIn:58\r\n             */\r\n            me.keepAlive = function(){\r\n                me._delay = 17711;\r\n                me._previous = 10946;\r\n\r\n                // Set the stopped flag\r\n                me._stopped = false;\r\n\r\n                // Set the keepAlive to true\r\n                me._keepAlive = true;\r\n\r\n                me.optionPoll();\r\n            };\r\n\r\n            /**\r\n             * ###startPoll\r\n             * Method exposed as a public interface, to allow the other components to reset the polling.\r\n             * This is used if an event comes in to ExternalIn, which is part of a set of messages.\r\n             * This is called in ComponentPulseExternalIn:58\r\n             */\r\n            me.startPoll = function(){\r\n                // Set the stopped flag\r\n                me._stopped = false;\r\n\r\n                // Set the keepAlive to true\r\n                me._keepAlive = false;\r\n\r\n                me.optionPoll();\r\n            };\r\n\r\n            /**\r\n             * ###slowdownPoll\r\n             * Exposed externally to be called when the polling time needs to be ramped up;\r\n             */\r\n            me.slowdownPoll = function(){\r\n                clearTimeout( me._timeout );\r\n\r\n                if( !me._stopped )\r\n                    me._timeout = setTimeout( me.poll, me.incrementDelay() );\r\n            };\r\n\r\n            /**\r\n             * ###speedupPoll\r\n             * Exposed externally to be called when the polling time needs to be ramped up;\r\n             */\r\n            me.speedupPoll = function(){\r\n                clearTimeout( me._timeout );\r\n\r\n                if( !me._stopped )\r\n                    me._timeout = setTimeout( me.poll, me.decrementDelay() );\r\n            };\r\n\r\n            // METHODS\r\n\r\n            /**\r\n             * ### onsend\r\n             * Override the default onsend method with the new version.\r\n             * @params {EndPoint} endpoint: the endpoint to action, prior to sending\r\n             * @params {Mesaage} message: the Camelet Message that is being sent.\r\n             * @returns {boolean} should this message be sent or not?\r\n             */\r\n            me.onsend = function( endpoint, message ){\r\n                var headers = message.getHeaders();\r\n                var body = message.getBody();\r\n\r\n                var sendFlag = endpoint.withOptions( body.pulseHeader.pulseClass );\r\n\r\n                // Check for invalid ReferenceId ( If none is set or default set )\r\n                var head = body.pulseHeader;\r\n                if( head.referenceId === \"00000001-0001-4000-0001-000000000001\" ){\r\n                    // Replace with this endpoints GUID referenceId\r\n                    head.referenceId = me._referenceId;\r\n                }\r\n\r\n                // Reset polling back to 1/4 of a seconds, after a message has arrived.\r\n                if( !me._stopped ){\r\n                    // clearTimeout( me._timeout );\r\n                    // me._timeout = setTimeout( me.poll, me.resetDelay() );\r\n                    me.startPoll();\r\n                }\r\n\r\n                return sendFlag;\r\n            };\r\n\r\n            /**\r\n             * Constructor\r\n             */\r\n\r\n            // Set the default properties\r\n            config = config || {};\r\n            config.name = config.name || \"component-pulse-external-polling\";\r\n            config.scheme = config.scheme || \"\";\r\n            config.context = config.context || \"\";\r\n            config.inOptions = config.inOptions || [\r\n                { cls:\"pumpco.system.core.cog\", list:\"black\" },     // Internal pumpco cog messages, used for show / hide\r\n                { cls:\"pumpco.roadie.\", list:\"black\" },             // Internal roadie communication\r\n                { cls:\"pumpco.internal.\", list:\"black\" },           // Black list incorrectly named Internal requests.\r\n                { cls:\"pumpco.\", list:\"white\" },\r\n                { cls:\"user.registration\", list:\"white\" }           // Legacy support for old pulse names\r\n            ];\r\n            config.outOptions = config.outOptions || [ { cls:\"\" } ];\r\n\r\n            var temp = camelet.DynamicRouter( config );\r\n            for( var prop in temp ){\r\n                if( !me[ prop ] ){\r\n                    me[ prop ] = temp[ prop ];\r\n                }\r\n            }\r\n            me._super = temp;\r\n\r\n            // Override the parent onsend\r\n            me._super.onsend = me.onsend;\r\n\r\n            // Expose External API to other components\r\n            me.setOption( \"poll\",           me.optionPoll );\r\n            me.setOption( \"pollNow\",        me.poll );\r\n            me.setOption( \"pollFaster\",     me.speedupPoll );\r\n            me.setOption( \"pollSlower\",     me.slowdownPoll );\r\n            me.setOption( \"stop\",           me.stopPoll );\r\n            me.setOption( \"start\",          me.startPoll );\r\n            me.setOption( \"keepAlive\",      me.keepAlive );\r\n            me.setOption( \"pollReceived\",   me.pollReceived );\r\n\r\n\r\n            // **option** scheme:\r\n            me.setOption( \"scheme\", \"xhr\" );\r\n\r\n            // return the instance\r\n            return me;\r\n        };\r\n\r\n    \t/**\r\n    \t * ComponentPulseExternalPolling\r\n\t\t * Class Wrapper to package the old style JS as a RequireJS class.\r\n    \t */\r\n\t    function ComponentPulseExternalPolling( config ){\r\n\t    \treturn _ComponentPulseExternalPolling( config );\r\n\t    }\r\n\t    ComponentPulseExternalPolling.prototype = {};\r\n\r\n\t    return ComponentPulseExternalPolling;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/core/io/components/componentpulseexternalpolling.js?");

/***/ }),

/***/ "./src/core/io/components/componentpulseinternalinout.js":
/*!***************************************************************!*\
  !*** ./src/core/io/components/componentpulseinternalinout.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! camelet */ \"camelet\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log ){\r\n\r\n\t\t/**\r\n    \t * #core.io.components.ComponentPulseController\r\n\t\t * Accepts messages from the Cog Consumer, which are for External publication. Routes them on to other components.\r\n    \t * @author Andy Monis\r\n    \t */\r\n        var _ComponentPulseInternalInOut = function( config ){\r\n\r\n            var me = {};\r\n\r\n            /**\r\n             * ### onsend\r\n             * Override the default onsend method with the new version.\r\n             * @params {EndPoint} endpoint: the endpoint to action, prior to sending\r\n             * @params {Mesaage} message: the Camelet Message that is being sent.\r\n             * @returns {boolean} should this message be sent or not?\r\n             */\r\n            me.onsend = function( endpoint, message ){\r\n                var headers = message.getHeaders();\r\n                var body = message.getBody();\r\n\r\n                var pulseBody = body.pulseBody;\r\n                var pulseHeader = body.pulseHeader;\r\n\r\n                // TO use this feature add compId to the body\r\n                if( pulseBody.compId ){\r\n                    // Mimic the same process as PumpHouse and change inbound 'componentId' to outboud 'requestingComponentId'\r\n                    pulseHeader.requestingComponentId = pulseBody.compId;\r\n                }\r\n\r\n                var sendFlag = endpoint.withOptions( body.pulseHeader.pulseClass );\r\n\r\n                return sendFlag;\r\n            };\r\n\r\n            /**\r\n             * Constructor\r\n             */\r\n\r\n            // Set the default properties\r\n            config = config || {};\r\n            config.name = config.name || \"\";\r\n            config.scheme = config.scheme || \"\";\r\n            config.context = config.context || \"\";\r\n            config.inOptions = config.inOptions || [\r\n                { cls:\"pumpco.system.core.cog\", list:\"white\" },     // Internal pumpco cog messages, used for show / hide\r\n                { cls:\"pumpco.roadie.\", list:\"white\" },             // Internal roadie communication, used to goto spaces and hold items\r\n                { cls:\"pumpco.internal.\", list:\"white\" },           // White list incorrectly named Internal requests.\r\n                { cls:\"internal.\" },\r\n                { cls:\"user.registration\", list:\"black\" }           // Legacy support for old pulse names\r\n            ];\r\n            config.outOptions = config.outOptions || [ { cls:\"\" } ];\r\n            config.onsend = me.onsend;\r\n\r\n            var temp = camelet.DynamicRouter( config );\r\n            for( var prop in temp ){\r\n                me[ prop ] = temp[ prop ];\r\n            }\r\n            me._super = temp;\r\n\r\n            // return the instance\r\n            return me;\r\n        };\r\n\r\n    \t/**\r\n    \t * ComponentPulseInternalInOut\r\n\t\t * Class Wrapper to package the old style JS as a RequireJS class.\r\n    \t */\r\n\t    function ComponentPulseInternalInOut( config ){\r\n\t    \treturn _ComponentPulseInternalInOut( config );\r\n\t    }\r\n\t    ComponentPulseInternalInOut.prototype = {};\r\n\r\n\t    return ComponentPulseInternalInOut;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/core/io/components/componentpulseinternalinout.js?");

/***/ }),

/***/ "./src/core/io/components/componentpulseregistry.js":
/*!**********************************************************!*\
  !*** ./src/core/io/components/componentpulseregistry.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Pump API and Application 2.0.0.\n *\n * Copyright(c) 2015 Pumpco Inc.\n *\n  .\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! camelet */ \"camelet\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log ){\n\n\t\t/**\n    \t * #core.io.components.ComponentPulseRegistry\n\t\t * Accepts messages from the Cog Consumer, which are for External publication. Routes them on to other components.\n    \t * @author Andy Monis\n    \t */\n        var _ComponentPulseRegistry = function( config ){\n\n            var TIMEOUT = 5000;\n\n            var me = {};\n\n            me._tracking = {};\n\n            /**\n             * ###createExceptionMethod\n             * Creates a standard Exception message exchange that is sent to the\n             * Component that sent the original message\n             */\n            me.createExceptionMessage = function( componentId ){\n                var message = new camelet.Message({\n                    body: {\n                        pulseHeader: {\n                            \"mep\":\"inout\",\n                            \"pulseClass\": \"exception.pulse.failure\",\n                            \"pulseId\":camelet.Utils.generateUuid(),\n                            \"pulseResponseTimeout\":\"0\",\n                            \"pulseType\":\"command\",\n                            \"referenceId\":me._referenceId,\n                            \"timestamp\":camelet.Utils.now(),\n                            \"requestingComponentId\": componentId\n                        },\n                        pulseBody: {\n                            \"status\": { \"code\":\"error\", \"message\":\"timeout\" }\n                        }\n                    }\n                });\n\n                // Create the exchange & add the message\n                var exchange = new camelet.Exchange();\n                exchange.setMessage( message );\n\n                return exchange;\n            };\n\n            /**\n             * ###tracker\n             * A polling function that checks for outstanding pulses in the registry\n             * every 5 seconds.\n             * @return {JSON} [description]\n             */\n            me.tracker = function(){\n                var keys = Object.keys( me._tracking );\n                if( keys.length > 0 ){\n                    // Raise an exception\n                    for( var i=0; i<keys.length; i++ ){\n                        // Output the tracked item and the timestamp to see how long it has been waiting\n                        console.log( \"ComponentPulseRegistry: tracking(\" + keys[ i ] + \":\" + me._tracking[ keys[ i ] ] + \")\"  );\n\n                        // Get the tracking object\n                        var trackObj = me._tracking[ keys[ i ] ];\n\n                        if( trackObj.notified === false ){\n                            trackObj.notified = true;\n\n                            //AMONIS: 13/10/2016: DO NOT USE COMPONENTID as that is used for backend routing.\n                            //Need to find a way to route back to frontend service.\n                            //\n                            // Create a new Exception pulse\n                            //var exception = this.createExceptionMessage( trackObj.compId );\n\n                            // Send the exception\n                            //me.pulse( exception );\n                        }\n                    }\n                }\n\n                // ReStart the timer to check for tracked objects\n                setTimeout( me.tracker.bind( me ), TIMEOUT );\n            };\n\n            me.track = function( exchange ){\n                var message = exchange.getMessage();\n                var body = message.getBody();\n\n                // Create a tracking flag\n                me._tracking[ body.pulseHeader.referenceId ] = {\n                    exchange:   exchange,                       // Store the exchange for future referenceId\n                    notified:   false,                          // Flag to indicate if an exception has been raised for this.\n                    timestamp:  Date.now(),                     // The Time at which tracking was started,\n                    compId:     body.pulseHeader.componentId    // Shortcut to save processing time\n                };\n            };\n\n            me.untrack = function( exchange ){\n                var message = exchange.getMessage();\n                var body = message.getBody();\n\n                // inbound message\n                if( me._tracking[ body.pulseHeader.referenceId ] !== undefined ){\n                    var temp = me._tracking[ body.pulseHeader.referenceId ].exchange.getMessage().getBody();\n                    console.log( \"Tracked>>:\" + body.pulseHeader.pulseClass + \":\" +  body.pulseHeader.referenceId );\n\n                    // remove the reference to the tracked pulse\n                    delete me._tracking[ body.pulseHeader.referenceId ];\n                }\n            };\n\n            /**\n             * ###onsend\n             * Hardcoded to FALSE to prevent messages from being double sent.\n             * This component just needs to look at messages ( a bit like a listener )\n             * @param {JSON} endpoint [description]\n             * @param {JSON} message  [description]\n             * @return {JSON}          [description]\n             */\n            me.onsend = function( endpoint, message ){\n                var header = message.getHeaders();\n                var body = message.getBody();\n\n                return false;\n            };\n\n\n            /**\n             * ###onprocess\n             * Checks to see if the Pulse should be tracked.\n             * Stores by refId if it should\n             * Checks responses for matching refId\n             * Alerts the user to a problem if a time limit is exceeded\n             * AUDIT TRAIL looks like this\n             * [\n                  {\"message\": \"Processed\",\"id\": \"56BB47A3-5E45-4F3C-A3DF-1AEA0204EB88\",\"name\": \"consumer-pulse-cog\",\"timestamp\": 1476280273197},\n                  {\"message\": \"Processed\",\"id\": \"123CF2E5-ABCB-4F60-9547-5E9A9CB39935\",\"name\": \"component-pulse-controller\",\"timestamp\": 1476280273198},\n                  {\"message\": \"Processed\",\"id\": \"A073CD71-D2DA-41E3-BFCB-DFB22307F1BF\",\"name\": \"component-pulse-external-polling\",\"timestamp\": 1476280273198},\n                  {\"message\": \"Processed\",\"id\": \"F87315FC-98C5-4302-A9ED-01896FBBD0D6\",\"name\": \"component-pulse-external-out\",\"timestamp\": 1476280273198},\n                  {\"message\": \"Processed\",\"id\": \"0009E8FC-CCB3-414A-83E7-25C7E6901A5B\",\"name\": \"producer-pulse-external-open\",\"timestamp\": 1476280273198},\n                  {\"message\": \"Processed\",,\"name\": \"component-pulse-registry\",\"timestamp\": 1476280273201}\n                ]\n             * @param {JSON} component [description]\n             * @param {JSON} exchange  [description]\n             * @return {JSON}           [description]\n             */\n            me.onprocess = function( component, exchange  ){\n                var message = exchange.getMessage();\n                var body = message.getBody();\n\n                // AMONIS: 12/10/2016: Track a pulse. tracked property only set via PumpFace\n                // and will not be available on a Pulse from PumpHouse.\n                if( body.pulseHeader.tracked ){\n                    // This is a new Pulse, with a Tracking Flag\n                    console.log( \">>PH:\" + body.pulseHeader.pulseClass + \":\" +  body.pulseHeader.referenceId );\n\n                    if( !body.pulseHeader.referenceId )\n                        console.log( \"ComponentPulseRegistry: cannot track message without a refId.\" );\n\n                    me.track( exchange );\n                } else {\n                    // This is a response from PumpHouse ( it won;t have a tracking flag as thats a PF thing )\n                    // Check for matching refId in _tracking collection and remove if found;\n\n                    // Get the Exchanges Audit Trail;\n                    var audit = exchange.properties.getAuditItems();\n\n                    // If this is from PumpHouse it will have been proessed by component-pulse-external-in\n                    var second = audit[ 1 ];\n                    if( second.name === \"component-pulse-external-in\" ){\n                        me.untrack( exchange );\n                    }\n                }\n\n                return exchange;\n            };\n\n            /**\n             * Constructor\n             */\n\n            // Set the default properties\n            config = config || {};\n            config.name = config.name || \"component-pulse-registry\";\n            config.scheme = config.scheme || \"\";\n            config.context = config.context || \"\";\n            config.inOptions = config.inOptions || [\n                { cls:\"pumpco.system.core.cog\", list:\"black\" },     // Internal pumpco cog messages, used for show / hide\n                { cls:\"pumpco.roadie.\", list:\"black\" },             // Internal roadie communication\n                { cls:\"pumpco.internal.\", list:\"black\" },           // Black list incorrectly named Internal requests.\n                { cls:\"pumpco.\", list:\"white\" },\n                { cls:\"user.registration\", list:\"white\" }           // Legacy support for old pulse names\n            ];\n            config.outOptions = config.outOptions || [];\n            // Override onsend with local implementation\n            config.onsend = me.onsend;\n            // Override onprocess with local implementation\n            config.onprocess = me.onprocess;\n\n            var temp = camelet.DynamicRouter( config );\n            for( var prop in temp ){\n                me[ prop ] = temp[ prop ];\n            }\n            me._super = temp;\n\n            // Override the parent onsend\n            me._super.onsend = me.onsend;\n\n            // Start the timer to check for tracked objects\n            setTimeout( me.tracker.bind( me ), TIMEOUT );\n\n            // return the instance\n            return me;\n        };\n\n    \t/**\n    \t * ComponentPulseRegistry\n\t\t * Class Wrapper to package the old style JS as a RequireJS class.\n    \t */\n\t    function ComponentPulseRegistry( config ){\n\t    \treturn _ComponentPulseRegistry( config );\n\t    }\n\t    ComponentPulseRegistry.prototype = {};\n\n\t    return ComponentPulseRegistry;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/core/io/components/componentpulseregistry.js?");

/***/ }),

/***/ "./src/core/io/components/consumerpulsecog.js":
/*!****************************************************!*\
  !*** ./src/core/io/components/consumerpulsecog.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! camelet */ \"camelet\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log ){\r\n\r\n\t\t/**\r\n    \t * #core.io.components.ConsumerPulseCog\r\n\t\t * Accepts ( consumes ) pulses from Cogs. This is the component that all Cog ( out ) pulsing is wired to.\r\n    \t * @author Andy Monis\r\n    \t */\r\n        var _ConsumerPulseCog = function( config ){\r\n\r\n            var me = {};\r\n\r\n            me.messageInCount = 0;\r\n            // Create an instance of a DynamicRouter and override default behaviour\r\n\r\n\r\n            // METHODS\r\n\r\n            /**\r\n             * ### onsend\r\n             * Override the default onsend method with the new version.\r\n             * @params {EndPoint} endpoint: the endpoint to action, prior to sending\r\n             * @params {Mesaage} message: the Camelet Message that is being sent.\r\n             * @returns {boolean} should this message be sent or not?\r\n             */\r\n            me.onsend = function( endpoint, message ){\r\n                var header = message.getHeaders();\r\n                var body = message.getBody();\r\n\r\n                var sendFlag = endpoint.withOptions( body.pulseHeader.pulseClass );\r\n\r\n                // Don't send if this Controller is paused\r\n                var schemeOption = me.getOption( \"scheme\" );\r\n                if( schemeOption === \"paused\" ){\r\n                    sendFlag = false;\r\n                }\r\n\r\n                return sendFlag;\r\n            };\r\n\r\n            /**\r\n             * ###onprocess\r\n             * @param {JSON} component [description]\r\n             * @param {JSON} exchange  [description]\r\n             * @return {JSON}           [description]\r\n             */\r\n            me.onprocess = function( component, exchange ){\r\n                // Add an audit item that shows, it has\r\n                // exchange.properties.addAuditItem( \"consumer-pulse-cog\" );\r\n\r\n                return exchange;\r\n            };\r\n\r\n            /**\r\n             * Constructor\r\n             */\r\n\r\n            // Set the default properties\r\n            config = config || {};\r\n            config.name = config.name || \"consumer-pulse-cog\";\r\n            config.scheme = config.scheme || \"pulse\";\r\n            config.context = config.context || \"/pumpco/cog\";\r\n            config.inOptions = config.inOptions || [ { cls:\"\" } ];\r\n            config.outOptions = config.outOptions || [ { cls:\"\" } ];\r\n            config.onsend = me.onsend;\r\n            config.onprocess = me.onprocess;\r\n\r\n            var temp = camelet.DynamicRouter( config );\r\n            for( var prop in temp ){\r\n                me[ prop ] = temp[ prop ];\r\n            }\r\n            me._super = temp;\r\n\r\n            // return the instance\r\n            return me;\r\n        };\r\n\r\n    \t/**\r\n    \t * ConsumerPulseCog\r\n\t\t * Class Wrapper to package the old style JS as a RequireJS class.\r\n    \t */\r\n\t    function ConsumerPulseCog( config ){\r\n\t    \treturn _ConsumerPulseCog( config );\r\n\t    }\r\n\r\n\t    ConsumerPulseCog.prototype = {};\r\n\r\n\t    return ConsumerPulseCog;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/core/io/components/consumerpulsecog.js?");

/***/ }),

/***/ "./src/core/io/components/consumerpulseexternalopen.js":
/*!*************************************************************!*\
  !*** ./src/core/io/components/consumerpulseexternalopen.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! camelet */ \"camelet\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log ){\r\n\r\n\t\t/**\r\n    \t * #core.io.components.ConsumerPulseExternalOpen\r\n\t\t * Accepts ( consumes ) messages from the Open channel ( i.e. fro mPumpHouse ) and routes them back into the Pump.\r\n    \t * @author Andy Monis\r\n    \t */\r\n        var _ConsumerPulseExternalOpen = function( config ){\r\n\r\n            var me = {};\r\n\r\n            // METHODS\r\n\r\n            /**\r\n             * ### onsend\r\n             * Override the default onsend method with the new version.\r\n             * @params {EndPoint} endpoint: the endpoint to action, prior to sending\r\n             * @params {Mesaage} message: the Camelet Message that is being sent.\r\n             * @returns {boolean} should this message be sent or not?\r\n             */\r\n            me.onsend = function( endpoint, message ){\r\n                var headers = message.getHeaders();\r\n                var body = message.getBody();\r\n\r\n                var sendFlag = endpoint.withOptions( body.pulseHeader.pulseClass );\r\n\r\n                return sendFlag;\r\n            };\r\n\r\n            /**\r\n             * @method Constructor\r\n             *\r\n             */\r\n\r\n            // Set the default properties\r\n            config = config || {};\r\n            config.name = config.name || \"consumer-pulse-external-open\";\r\n            //config.scheme = config.scheme || \"pulse\";\r\n            config.scheme = config.scheme || \"xhr\";\r\n            config.context = config.context || \"/pumpco/external/open\";\r\n            config.inOptions = config.inOptions || [ { cls:\"\" } ];\r\n            config.outOptions = config.outOptions || [ { cls:\"\" } ];\r\n            config.onsend = me.onsend;\r\n\r\n            var temp = camelet.DynamicRouter( config );\r\n            for( var prop in temp ){\r\n                me[ prop ] = temp[ prop ];\r\n            }\r\n            me._super = temp;\r\n\r\n            // return the instance\r\n            return me;\r\n        };\r\n\r\n    \t/**\r\n    \t * ConsumerPulseExternalOpen\r\n\t\t * Class Wrapper to package the old style JS as a RequireJS class.\r\n    \t */\r\n\t    function ConsumerPulseExternalOpen( config ){\r\n\t    \treturn _ConsumerPulseExternalOpen( config );\r\n\t    }\r\n\t    ConsumerPulseExternalOpen.prototype = {};\r\n\r\n\t    return ConsumerPulseExternalOpen;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/core/io/components/consumerpulseexternalopen.js?");

/***/ }),

/***/ "./src/core/io/components/consumerpulseexternalsecure.js":
/*!***************************************************************!*\
  !*** ./src/core/io/components/consumerpulseexternalsecure.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! camelet */ \"camelet\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log ){\r\n\r\n\t\t/**\r\n    \t * #core.io.components.ConsumerPulseExternalSecure\r\n\t\t * Accepts ( consumes ) Messages from the Secure channel.\r\n    \t * @author Andy Monis\r\n    \t */\r\n        var _ConsumerPulseExternalSecure = function( config ){\r\n\r\n            var me = {};\r\n\r\n            // METHODS\r\n\r\n            /**\r\n             * ### onsend\r\n             * Override the default onsend method with the new version.\r\n             * @params {EndPoint} endpoint: the endpoint to action, prior to sending\r\n             * @params {Mesaage} message: the Camelet Message that is being sent.\r\n             * @returns {boolean} should this message be sent or not?\r\n             */\r\n            me.onsend = function( endpoint, message ){\r\n                var headers = message.getHeaders();\r\n                var body = message.getBody();\r\n\r\n                var sendFlag = endpoint.withOptions( body.pulseHeader.pulseClass );\r\n\r\n                return sendFlag;\r\n            };\r\n\r\n            /**\r\n             * @method Constructor\r\n             *\r\n             */\r\n\r\n            // Set the default properties\r\n            config = config || {};\r\n            config.name = config.name || \"consumer-pulse-external-secure\";\r\n            config.scheme = config.scheme || \"pulse\";\r\n            config.context = config.context || \"/pumpco/external/secure\";\r\n            config.inOptions = config.inOptions || [ { cls:\"\" } ];\r\n            config.outOptions = config.outOptions || [ { cls:\"\" } ];\r\n            config.onsend = me.onsend;\r\n\r\n            var temp = camelet.DynamicRouter( config );\r\n            for( var prop in temp ){\r\n                me[ prop ] = temp[ prop ];\r\n            }\r\n            me._super = temp;\r\n\r\n            // return the instance\r\n            return me;\r\n        };\r\n\r\n    \t/**\r\n    \t * ###ConsumerPulseExternalSecure\r\n\t\t * Class Wrapper to package the old style JS as a RequireJS class.\r\n    \t */\r\n\t    function ConsumerPulseExternalSecure( config ){\r\n\t    \treturn _ConsumerPulseExternalSecure( config );\r\n\t    }\r\n\r\n\t    ConsumerPulseExternalSecure.prototype = {};\r\n\r\n\t    return ConsumerPulseExternalSecure;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/core/io/components/consumerpulseexternalsecure.js?");

/***/ }),

/***/ "./src/core/io/components/producerpulsecog.js":
/*!****************************************************!*\
  !*** ./src/core/io/components/producerpulsecog.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! camelet */ \"camelet\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log ){\r\n\r\n        var _ProducerPulseCog = function( config ){\r\n            /**\r\n\t\t\t * #core.io.components.ProducerPulseCog\r\n\t\t\t * Forwards ( produces ) messages to the relevant cogs. These can be point to point, if the messages has a requestingComponentId or broadcast for Events etc.\r\n\t\t\t * @author Andy Monis\r\n\t\t\t */\r\n            var me = {};\r\n\r\n            // METHODS\r\n\r\n            /**\r\n             * ### onsend\r\n             * Override the default onsend method with the new version.\r\n             * @params {EndPoint} endpoint: the endpoint to action, prior to sending\r\n             * @params {Mesaage} message: the Camelet Message that is being sent.\r\n             * @returns {boolean} should this message be sent or not?\r\n             */\r\n            me.onsend = function( endpoint, message ){\r\n                var headers = message.getHeaders();\r\n                var body = message.getBody();\r\n\r\n                var sendFlag = endpoint.withOptions( body.pulseHeader.pulseClass );\r\n\r\n                // Implementing ComponentId overriding. Using the ReferenceId and a command string\r\n                if( body.pulseHeader.referenceId && body.pulseHeader.referenceId.indexOf( \"routing-override::\" ) > -1 ){\r\n                    sendFlag = false;\r\n\r\n                    // Overridden routing\r\n                    var component = body.pulseHeader.referenceId.substring( \"routing-override::\".length );\r\n                    // Trim off custom params\r\n                    var paramsIndex = component.indexOf( \"-\" );\r\n                    if( paramsIndex > -1 )\r\n                        component = component.substring( 0, paramsIndex );\r\n\r\n                    // Endpoint.name is of the format \"Producer-4dca52ee6ef96cfa2bc2b10f-In\" where the ComponentId is \"4dca52ee6ef96cfa2bc2b10f\"\r\n                    if( endpoint.name.indexOf( component ) >= 0 ){\r\n                        sendFlag = true;\r\n                    } else {\r\n                        camelet.Log.debug( this, \"*S* CP:\" + me.name  + \"[\" + component + \"](ComponentId Does not match EndPoints)\" );\r\n                    }\r\n\r\n                } else {\r\n                    // Default componentId routing\r\n                    if( body.pulseHeader.requestingComponentId ){\r\n                        // If there is a requestingComponentId, we should only send the message back to the requestor\r\n                        sendFlag = false;\r\n\r\n                        // Endpoint.name is of the format \"Producer-4dca52ee6ef96cfa2bc2b10f-In\" where the ComponentId is \"4dca52ee6ef96cfa2bc2b10f\"\r\n                        if( endpoint.name.indexOf( body.pulseHeader.requestingComponentId ) >= 0 ){\r\n\t\t\t\t\t\t\t// AMONIS: 06/10/2016: Check to see if the pulseClass is registered in the EndPoint ( resources.json for the Cog )\r\n\t\t\t\t\t\t\tvar classRegistered = endpoint.withOptions( body.pulseHeader.pulseClass );\r\n\t\t\t\t\t\t\tif( classRegistered === false ){\r\n\t\t\t\t\t\t\t\t// AMONIS: 06/10/2016: TODO: Tighten up wiring rules\r\n\t\t\t\t\t\t\t\t// If the Class is not registered we should really prevent it from being routed.\r\n\t\t\t\t\t\t\t\t// Outputting messages for now, but will be tightened up in the future\r\n\t\t\t\t\t\t\t\tconsole.log( \"WARNING: Wiring Pulse [\" + body.pulseHeader.pulseClass + \"] sent to Component [\" + body.pulseHeader.requestingComponentId + \"] is not Registered: Check resources.json.\")\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsendFlag = true;\r\n                        } else {\r\n                            camelet.Log.debug( this, \"*S* CP:\" + me.name  + \"[\" + body.pulseHeader.pulseClass + \"](ComponentId Does not match EndPoints)\" );\r\n                        }\r\n                    }\r\n                }\r\n\r\n                camelet.Log.debug( this, \"*S* CP:\" + me.name  + \"[\" + body.pulseHeader.pulseClass + \"](\" + me.messageInCount++ + \")\" );\r\n\r\n                return sendFlag;\r\n            };\r\n\r\n            /**\r\n             * @method Constructor\r\n             *\r\n             */\r\n\r\n            // Set the default properties\r\n            config = config || {};\r\n            config.name = config.name || \"producer-pulse-cog\";\r\n            config.scheme = config.scheme || \"pulse\";\r\n            config.context = config.context || \"/pumpco/cog\";\r\n            config.inOptions = config.inOptions || [ { cls:\"\" } ];\r\n            config.outOptions = config.outOptions || [ { cls:\"\" } ];\r\n            config.onsend = me.onsend;\r\n\r\n            var temp = camelet.DynamicRouter( config );\r\n            for( var prop in temp ){\r\n                me[ prop ] = temp[ prop ];\r\n            }\r\n            me._super = temp;\r\n\r\n            // return the instance\r\n            return me;\r\n        };\r\n\r\n    \t/**\r\n    \t * ProducerPulseCog\r\n\t\t * Class Wrapper to package the old style JS as a RequireJS class.\r\n    \t */\r\n\t    function ProducerPulseCog( config ){\r\n\t    \treturn _ProducerPulseCog( config );\r\n\t    }\r\n\t    ProducerPulseCog.prototype = {};\r\n\r\n\t    return ProducerPulseCog;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/core/io/components/producerpulsecog.js?");

/***/ }),

/***/ "./src/core/io/components/producerpulseexternalopen.js":
/*!*************************************************************!*\
  !*** ./src/core/io/components/producerpulseexternalopen.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! camelet */ \"camelet\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log ){\r\n\r\n\t\t/**\r\n    \t * #core.io.components.ProducerPulseExternalOpen\r\n\t\t * Forwards ( produces ) messages to the Open channel ( ie.e. PumpHouse ) our of the Pump.\r\n    \t * @author Andy Monis\r\n    \t */\r\n        var _ProducerPulseExternalOpen = function( config ){\r\n\r\n            var me = {};\r\n\r\n            // METHODS\r\n\r\n            /**\r\n             * ### onprocess\r\n             * Override the default capability to set the AuthToken if on eis found in the response.\r\n             * This should result in all communication going to the Secure channel ( including polling requests )\r\n             * from now on, until a logout.response is received.\r\n             * @params {Camelet.Component} component: the component to work with\r\n             * @params {Camelet.Exchange} exchange: the full Camelet exchange\r\n             */\r\n            me.onprocess = function( component, exchange ){};\r\n\r\n            /**\r\n             * ### onsend\r\n             * Override the default onsend method with the new version.\r\n             * @params {EndPoint} endpoint: the endpoint to action, prior to sending\r\n             * @params {Mesaage} message: the Camelet Message that is being sent.\r\n             * @returns {boolean} should this message be sent or not?\r\n             */\r\n            me.onsend = function( endpoint, message ){\r\n                var headers = message.getHeaders();\r\n                var body = message.getBody();\r\n\r\n                var sendFlag = endpoint.withOptions( body.pulseHeader.pulseClass );\r\n\r\n                return sendFlag;\r\n            };\r\n\r\n            /**\r\n             * Constructor\r\n             */\r\n\r\n            // Set the default properties\r\n            config = config || {};\r\n            config.name = config.name || \"producer-pulse-external-open\";\r\n            //config.scheme = config.scheme || \"pulse\";\r\n            config.scheme = config.scheme || \"xhr\";\r\n            config.context = config.context || \"/pumpco/external/open\";\r\n            config.inOptions = config.inOptions || [ { cls:\"\" } ];\r\n            config.outOptions = config.outOptions || [ { cls:\"\" } ];\r\n            config.onsend = me.onsend;\r\n\r\n            var temp = camelet.DynamicRouter( config );\r\n            for( var prop in temp ){\r\n                me[ prop ] = temp[ prop ];\r\n            }\r\n            me._super = temp;\r\n\r\n            me._super.onprocess = me.onprocess;\r\n\r\n            // return the instance\r\n            return me;\r\n        };\r\n\r\n    \t/**\r\n    \t * ProducerPulseExternalOpen\r\n\t\t * Class Wrapper to package the old style JS as a RequireJS class.\r\n    \t */\r\n\t    function ProducerPulseExternalOpen( config ){\r\n\t    \treturn _ProducerPulseExternalOpen( config );\r\n\t    }\r\n\t    ProducerPulseExternalOpen.prototype = {};\r\n\r\n\t    return ProducerPulseExternalOpen;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/core/io/components/producerpulseexternalopen.js?");

/***/ }),

/***/ "./src/core/io/components/producerpulseexternalsecure.js":
/*!***************************************************************!*\
  !*** ./src/core/io/components/producerpulseexternalsecure.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! camelet */ \"camelet\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log ){\r\n\r\n\t\t/**\r\n    \t * #core.io.components.ProducerPulseExternalSecure\r\n\t\t * Forwards ( produces ) messages to the Secure channel ( ie.e. PumpHouse ) our of the Pump.\r\n    \t * @author Andy Monis\r\n    \t */\r\n        var _ProducerPulseExternalSecure = function( config ){\r\n\r\n            var me = {};\r\n\r\n            // METHODS\r\n\r\n            /**\r\n             * ### onsend\r\n             * Override the default onsend method with the new version.\r\n             * @params {EndPoint} endpoint: the endpoint to action, prior to sending\r\n             * @params {Mesaage} message: the Camelet Message that is being sent.\r\n             * @returns {boolean} should this message be sent or not?\r\n             */\r\n            me.onsend = function( endpoint, message, properties ){\r\n                var headers = message.getHeaders();\r\n                var body = message.getBody();\r\n\r\n                var sendFlag = endpoint.withOptions( body.pulseHeader.pulseClass );\r\n\r\n                if( sendFlag ){\r\n                    var scheme = properties.getValue( \"scheme\" );\r\n                    // Check that this endpoint is to be used for the exchange 'scheme' as set by component-pulse-controller\r\n                    if( scheme !== endpoint.scheme ){\r\n                        sendFlag = false;\r\n                    }\r\n                }\r\n\r\n                return sendFlag;\r\n            };\r\n\r\n            /**\r\n             * Constructor\r\n             */\r\n\r\n            // Set the default properties\r\n            config = config || {};\r\n            config.name = config.name || \"producer-pulse-external-secure\";\r\n            config.scheme = config.scheme || \"pulse\";\r\n            config.context = config.context || \"/pumpco/external/secure\";\r\n            config.inOptions = config.inOptions || [ { cls:\"\" } ];\r\n            config.outOptions = config.outOptions || [ { cls:\"\" } ];\r\n            config.onsend = me.onsend;\r\n\r\n            var temp = camelet.DynamicRouter( config );\r\n            for( var prop in temp ){\r\n                me[ prop ] = temp[ prop ];\r\n            }\r\n            me._super = temp;\r\n\r\n            // return the instance\r\n            return me;\r\n        };\r\n\r\n    \t/**\r\n    \t * ProducerPulseExternalSecure\r\n\t\t * Class Wrapper to package the old style JS as a RequireJS class.\r\n    \t */\r\n\t    function ProducerPulseExternalSecure( config ){\r\n\t    \treturn _ProducerPulseExternalSecure( config );\r\n\t    }\r\n\t    ProducerPulseExternalSecure.prototype = {};\r\n\r\n\t    return ProducerPulseExternalSecure;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/core/io/components/producerpulseexternalsecure.js?");

/***/ }),

/***/ "./src/core/io/endpoints/basic.js":
/*!****************************************!*\
  !*** ./src/core/io/endpoints/basic.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Pump API and Application 2.0.0.\n *\n * Copyright(c) 2015 Pumpco Inc.\n *\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! core/io/endpoints/qos */ \"./src/core/io/endpoints/qos.js\"), __webpack_require__(/*! camelet */ \"camelet\"), __webpack_require__(/*! the */ \"the\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log, Qos ){\n\n        /**\n\t\t *\n    \t * @author Andy Monis\n    \t */\n        var BasicEP = function( config ){\n            config = config || {};\n\n            // **const** {string} SCHEME The scheme to use for configuring the EndPoint in the Pump\n            this.SCHEME = \"socket\";\n\n            // **private** {string} _authToken A reference of the latest authToken used ( mainly for reconnecting )\n            this._authToken = null;\n\n            // **private** {boolean} _standalone Switches the Endpoint into test mode for running standalone ( i.e. not as part of the Pump )\n            this._standalone    = config.standalone || false;\n\n            // **private** {SockJs} _socket A reference to the SockJs object if successfully created\n            this._socket = undefined;\n\n            // **private** {pointer} _inEp A reference to a Camelet Endpoint\n            this._inEp = undefined;\n\n            // **private** {pointer} _outEp A reference to a Camelet Endpoint\n            this._outEp = undefined;\n\n            // **property** {json} capabilities Store the capabilities for the EndPoint ( routing information etc )\n            this.capabilities = {\n                consume: [ { cls: \"\" } ],\n                produce: [ { cls: \"\" } ]\n            };\n\n            // **property** {string} name The name of the Endpoint. Useful for debugging.\n            this.name = config.name;\n\n            // **property** {string} context The context that this Endpoint is running in, this is used for correctly routing messages.\n\t        this.context = config.context || \"/pumpco/external/secure\";\n\n            // **property** {core/pump} pump A reference to the Pump\n\t        this.pump = config.pump;\n\n            // **property** {string} url The URL that the endpoint should communicat to\n\t        this.url       = config.url || undefined;\n\n\t        // Socket Callbacks\n\t        this.onsuccess            = config.onSuccess           || function(){};\n\t        this.onclose              = config.onClose             || function(){};\n\t        this.onfailure            = config.onFailure           || function(){};\n\t        this.onreconnect          = config.onReconnect         || function(){};\n\t        this.onerror              = config.onError             || function(){};\n\t        this.onTransportFailure   = config.onTransportFailure  || function(){};\n        };\n\n\n        BasicEP.supported = function(){\n                return true;\n        };\n\n        /**\n         * ### xhrToExchange\n         * @param  {type} xhr\n         * @return {type}     [description]\n         */\n        BasicEP.xhrToExchange = function( xhr ){\n\n            var exchange = new camelet.Exchange();\n\n            var properties = exchange.properties;\n\n            //var pulse = JSON.parse( xhr.responseText );\n            var message = new camelet.Message({\n                body: xhr\n            });\n\n            exchange.setMessage( message );\n\n            return exchange;\n        };\n\n        BasicEP.prototype = {};\n\n        /**\n         * ### createEndpoints\n         * Creates 2 new Camelet EndPoints for sending and receiving information.\n         * @return {type} [description]\n         */\n        BasicEP.prototype.wireEndpoints = function(){\n            // Create the Endpoints only if NOT in standalone mode\n            if( this._standalone === false ){\n                // Create an OUT endpoint for sending messages TO the Pump\n                this._outEp = camelet.Endpoint({\n                    name:       this.name + \"-Out\",\n                    scheme:     this.SCHEME,\n                    context:    this.context,\n                    options:    this.capabilities.produce\n                });\n\n                // Create an IN endpoint for receiving messages FROM the Pump\n                this._inEp = camelet.Endpoint({\n                    name:       this.name + \"-In\",\n                    scheme:     this.SCHEME,\n                    context:    this.context,\n                    options:    this.capabilities.consume,\n                    listeners: [ { fn: this.pulsed, scope: this } ]\n                });\n\n                // Check for a Pump handle\n                if( this.pump ){\n                    // Register the two endpoints with the Pump\n                    var ep1 = this.pump.registerConsumer( this._outEp );\n    \t            var ep2 = this.pump.registerProducer( this._inEp );\n                } else {\n                    log.emergency( \"core/io/endpoints/sockjs: Error no pump reference found to register endpoint with.\")\n                }\n\n                // Check the endpoints and return a status;\n\t            return ( this._inEp && this._outEp ) ? { in:this._inEp, out:this._outEp } : false;\n            } else {\n                // return false if in standalone mode\n                return false;\n            }\n        };\n\n        /**\n         * ### onmessage\n         * @param  {type} response\n         * @return {type}          [description]\n         */\n        BasicEP.prototype.onmessage = function( evt ){\n            // AMONIS: 25/01/2017: Test for a valid pulse\n            if( evt.data.length > 2 ){\n                // Parse the response from String into JSON\n                var pulse = JSON.parse( evt.data);\n\n                // Parse the pulse onto a Camelet Exchange ( puts the Pulse in the Body )\n                var exchange = BasicEP.xhrToExchange( pulse );\n\n                // Get the referenceId from the body ( pulse )\n                var referenceId = __get( \"pulseHeader.referenceId\", pulse );\n\n                // Calculate some QoS data on the response if possible\n                // var qos = me.qos.response( referenceId, evt.data.length );\n\n                // Call the onQos callback if there is some QoS data.\n                // if( qos )\n                    // me.onQos( qos );\n\n                this.pulse( exchange );\n            }\n        };\n\n        /**\n         * ### close\n         * Closes an existing SockJS connection ( if it exists )\n         * 0 = not closed ( no action )\n         * 1 = closed ok\n         * -1 = error closing\n         * @return {type} [description]\n         */\n        BasicEP.prototype.close = function(){\n            return true;\n        };\n\n        /**\n         * ### send\n         * @param  {type} json\n         * @return {type}      [description]\n         */\n        BasicEP.prototype.send = function( json ){\n            return true;\n        };\n\n        /**\n         * ###pulse\n         */\n        BasicEP.prototype.pulse = function( exchange ){\n            var message = exchange.getMessage();\n            var body    = message.getBody();\n\n            var dt = the.dateTime();\n            var ts = the.formatTime( dt, \"HH:mm:ss\" ) + \":\" + dt.getMilliseconds()\n\n            // AMONIS: 13/07/2015: Change to support PingSocket which doesn't return a proper pulse\n            var pulseClass = __get( \"pulseHeader.pulseClass\", body );\n            if( pulseClass )\n                the.log.info( this, \"[\" + ts + \"]:\" + this.SCHEME + \"-<-\" + pulseClass );\n\n            the.log.pulse( this, body );\n\n            // AMONIS: 13/05/16: Implement some basic Quality Of Service for the endpoint\n            //me.qos.request( pulseHeader.referenceId, messageLength );\n\n            if( this._outEp ){\n                // Send the messsage\n                this._outEp.send( exchange );\n            }\n        };\n\n        /**\n         * ###pulsed\n         * Sends the Exchange to PumpHouse\n         */\n        BasicEP.prototype.pulsed = function( exchange ){\n            var message = exchange.getMessage();\n            var body    = message.getBody();\n\n            var dt = the.dateTime();\n            var ts = the.formatTime( dt, \"HH:mm:ss\" ) + \":\" + dt.getMilliseconds()\n            the.log.info( this, \"[\" + ts + \"]:\" + this.SCHEME + \"->-\" + body.pulseHeader.pulseClass );\n\n            // Get the referenceId from the body ( pulse )\n            var referenceId = __get( \"pulseHeader.referenceId\", body );\n\n            // JSONIFY the body ( the pulse ) for sending\n            // var json = JSON.stringify( body );\n\n            // AMONIS: 13/05/16: Implement some basic Quality Of Service for the endpoint\n            // me.qos.request( referenceId, json.length );\n\n            // Send the message ( push it down the socket )\n            // this._socket.push( json );\n            this.send( body );\n        };\n\n        return BasicEP;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/core/io/endpoints/basic.js?");

/***/ }),

/***/ "./src/core/io/endpoints/outbox.js":
/*!*****************************************!*\
  !*** ./src/core/io/endpoints/outbox.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Pump API and Application 2.0.0.\n *\n * Copyright(c) 2015 Pumpco Inc.\n *\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){\n\n        /**\n\t\t *\n    \t * @author Andy Monis\n    \t */\n        var Outbox = function(){\n            // **private** _data [Items(s)] Internal collection of the last sent pulses\n            this._data = [];\n        };\n\n        // **const** {int} MAX The maximum number of entries to store\n        Outbox.MAX = 10;\n\n        Outbox.prototype = {};\n\n        Outbox.prototype.add = function( item ){\n            // Add the item to the outbox\n            this._data.push( item );\n\n            // Trim the outbox to the Max size if required.\n            if( this._data.length > 10 )\n                this._data.shift();\n        };\n\n        Outbox.prototype.find = function( key, val ){\n            var item = undefined;\n            var index = undefined;\n            for( var i=0; i<this._data.length; i++ ){\n                if( this._data[ i ][ key ] === val ){\n                    item = this._data[ i ];\n                    index = i;\n                    break;\n                }\n            }\n\n            if( index )\n                this.data = this.data.splice( index, 1 );\n\n            return item;\n        };\n\n        return Outbox;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/core/io/endpoints/outbox.js?");

/***/ }),

/***/ "./src/core/io/endpoints/qos.js":
/*!**************************************!*\
  !*** ./src/core/io/endpoints/qos.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n */\r\n\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! camelet */ \"camelet\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log ){    \t\r\n\r\n\t\t/**\r\n\t\t * #Qos\r\n\t\t * Quality of Service module.\r\n\t\t * Accepts Requests and Responses, from any endpoint, and calcuates some approx QoS data on them.\r\n\t\t * @author Andy Monis\r\n\t\t */\r\n\t    function Qos( config ){\r\n\t    \t// **private** {map} _ids: Record of ReferenceIds sent\r\n\t        this._ids = {};\r\n\t    }\r\n\r\n\t    Qos.prototype = {};\r\n\r\n\t    /**\r\n\t     * ###request\r\n\t     * Stores a Request by id, for matching later\r\n\t     * @params {string} id: the of the request\r\n\t     * @params {int} length: the size of the request pulse\r\n\t     */\r\n\t    Qos.prototype.request = function( id, length ){\r\n\t    \t// Record the object in the Map by id.\r\n\t    \tthis._ids[ id ] = { sent:Date.now(), size:length };\r\n\t    };\r\n\r\n\t    /**\r\n\t     * ###response\r\n\t     * Matches the Response to a Request and calc some QoS data on it.\r\n\t     * @params {string} id: the of the response\r\n\t     * @params {int} length: the size of the response pulse\r\n\t     */\r\n\t    Qos.prototype.response = function( id, length ){\r\n\t    \t// Match an Request to this Response by Id\r\n\t    \tvar _request = this._ids[ id ];\r\n\r\n\t    \t// return if there is no matching request. ( don't calc any QoS data )\r\n\t    \tif( !_request )\r\n\t    \t\treturn undefined;\r\n\r\n\t    \t// Record the time now\r\n\t    \tvar received = Date.now();\r\n\r\n\t    \t// Process the data\r\n\t    \tvar qos = this.process( id, _request.sent, _request.size, received, length );\r\n\r\n            // Prune the _ids collection\r\n            this.prune( id );\r\n\r\n            // return the QoS data\r\n            return qos\r\n\t    };\r\n\r\n\t    /**\r\n\t     * ###process\r\n\t     * Process the times and data sent to calculate some approx QoS data.\r\n\t     * @params {string} id: usually the referenceId of the Pulse, used as a key\r\n\t     * @params {int} sent: the time the request was sent in ms\r\n\t     * @params {int} requestSize: the size of the request pulse\r\n\t     * @params {int} received: the time the response was received in me\r\n\t     * @params {int} responseSize: the size of the response pulse\r\n\t     */\r\n\t    Qos.prototype.process = function( id, sent, requestSize, received, responseSize ){\r\n            // determine the MS diff.\r\n            var ms = received - sent;\r\n\r\n            // Add the request & response sizes togther to get full tranmission data size\r\n            var size = requestSize + responseSize;\r\n\r\n            // Determine an approx bytes / s\r\n            var msSecondsRatio = 1000 / ms;\r\n            var bytesPerSecond = size * msSecondsRatio;\r\n\r\n            // return the QoS calculations\r\n            return { bps:Math.round( bytesPerSecond ), ms:ms }\r\n        };\r\n\r\n        /**\r\n         * ###prune\r\n         * Check for a large amount (10) of lingering keys. This points to requests being sent and not completed.\r\n         * Clear down the _ids and start again.\r\n         */\r\n        Qos.prototype.prune = function( id ){\r\n        \t// Clear out old record\r\n            delete this._ids[ id ];\r\n\r\n        \t// Record how many QoS keys exist ( each request should be responded to, so a build up of keys would mean a problem )\r\n            var keysHeld = Object.keys( this._ids ).length;\r\n            if( keysHeld > 10 ){\r\n            \t// Log the problem\r\n            \tlog.emergency( \"endpoint.xhr:stored QoS keys >= \" + keysHeld );\r\n\r\n            \t// Clear down the QoS keys\r\n            \tthis._ids = {};\r\n            }\r\n        };\r\n\r\n\t    return Qos;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/core/io/endpoints/qos.js?");

/***/ }),

/***/ "./src/core/io/endpoints/websocket.js":
/*!********************************************!*\
  !*** ./src/core/io/endpoints/websocket.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Pump API and Application 2.0.0.\n *\n * Copyright(c) 2015 Pumpco Inc.\n *\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! core/io/endpoints/basic */ \"./src/core/io/endpoints/basic.js\"), __webpack_require__(/*! core/io/endpoints/outbox */ \"./src/core/io/endpoints/outbox.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log, BasicEp, Outbox ){\n\n        /**\n    \t * #core.io.endpoints.SockJs\n\t\t * Provides a WEBSOCKET endpoint implementation\n\t\t *\n\t\t * At the moment this EndPoint ONLY works in Secure mode. So the initial\n\t\t * SiteSpec request and authentication is done using the regular XHR.\n\t\t *\n    \t * @author Andy Monis\n    \t */\n        var WebSocketEP = function( config ){\n            config = config || {};\n\n            // Construct this object from an instance of its parent.\n            BasicEp.call( this, config );\n\n            // **const** {string} SCHEME The scheme to use for configuring the EndPoint in the Pump\n            this.SCHEME = \"socket\";\n\n            // **private** {timer} _timeout Set on every request to determine if the socket is timing out.\n            this._timeout = null;\n\n            // **private** [Exchange] _outbox A record of the last 10 or so pulse exchanges\n            this._outbox = new Outbox();\n        };\n\n        // **const** {int} TIMEOUT The amount of time to wait before suspecting that an error has occurred\n        WebSocket.TIMEOUT = 5000;\n\n        /**\n         * ### supported\n         * Checks to see if WebSockets are supported on the current platform\n         * @return {type} [description]\n         */\n        WebSocketEP.supported = function(){\n            if ( \"WebSocket\" in window )\n                return true;\n            else\n                return false;\n        };\n\n        WebSocketEP.prototype = Object.create( BasicEp.prototype );\n\n        /**\n         * ### connect\n         * @param  {type} context\n         * @param  {type} capabilities\n         * @return {type}              [description]\n         */\n        WebSocketEP.prototype.open = function( authToken ){\n            // Update the stored \"authToken\" if one exists\n            if( authToken ){\n                this._authToken = authToken;\n            }\n\n            // Connect to the endpoint ( using the authToken as a Param)\n            var url = this.url + \"?authToken=\" + this._authToken;\n\n            console.log( \"WebSocketEP.open(): (re)connecting\" );\n\n            // Create the new Socket / or overwrite the existing one.\n            // There does not appear to be a performance penalty in just re-opening.\n            // debugger\n            if( this._socket ){\n                this.close();\n            }\n\n            this._socket = new WebSocket( url );\n\n            // CONNECTING\t0\tThe connection is not yet open.\n            // OPEN\t1\tThe connection is open and ready to communicate.\n            // CLOSING\t2\tThe connection is in the process of closing.\n            // CLOSED\t3\tThe connection is closed or couldn't be opened.\n\n            // attach an \"open\" event handler, triggered when the connection is upgraded\n            // successfully to websocket and everything is ok.\n            this._socket.onopen     = this.onsuccess.bind( this );\n\n            // attach an \"error\" event handler, triggered when an error occurs,\n            // usually a connot connect\n            this._socket.onerror    = this.onerror.bind( this );\n\n            // attach a \"message\" event handler, triggered whenever a message is\n            // received via the socket.\n            // this._socket.onmessage = this.onmessage.bind( this );\n            this._socket.onmessage  = this.onmessage.bind( this );\n\n            // attach a \"close\" event handler, triggered when the connection is closed\n            // either from an error or in response to a close() call.\n            this._socket.onclose    = this.onclose.bind( this );\n\n            return this._socket;\n        };\n\n        /**\n         * ### close\n         * Closes an existing SockJS connection ( if it exists )\n         * 0 = not closed ( no action )\n         * 1 = closed ok\n         * -1 = error closing\n         * @return {type} [description]\n         */\n        WebSocketEP.prototype.close = function(){\n            // Test for existing connection\n            if( this._socket !== undefined ){\n                // unbind handlers\n                this._socket.onopen     = function(){};\n                this._socket.onerror    = function(){};\n                this._socket.onmessage  = function(){};\n                // close the socket\n                this._socket.close();\n                // delete the var\n                delete this._socket;\n                // set the status to closed ok\n                return true;\n            } else {\n                return false;\n            }\n        };\n\n        /**\n         * ### onmessage\n         * Override the Basic functionality to stop the Timeout operation.\n         * @param  {type} response\n         * @return {type}          [description]\n         */\n        WebSocketEP.prototype.onmessage = function( evt ){\n\n            // Call the parent handler to do the real work\n            BasicEp.prototype.onmessage.call( this, evt );\n        };\n\n        /**\n         * ### send\n         * Start a timeout operation on the socket ( 5 sec )\n         * @param  {type} json\n         * @return {type}      [description]\n         */\n        WebSocketEP.prototype.send = function( json ){\n            json = json || {};\n\n            if( this._socket && this._socket.readyState === 1 ){\n                // Record the last sent messages\n                this._outbox.add( json );\n\n                // Send the pulse down the socket\n                this._socket.send( JSON.stringify( json ) );\n            } else if ( this._socket && this._socket.readyState === 3 ){\n                // Socket is closed and you are attempting to send to it.\n                // Try re-opening...\n                this.open();\n            }\n        };\n\n        return WebSocketEP;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/core/io/endpoints/websocket.js?");

/***/ }),

/***/ "./src/core/io/endpoints/xhr.js":
/*!**************************************!*\
  !*** ./src/core/io/endpoints/xhr.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! core/io/endpoints/qos */ \"./src/core/io/endpoints/qos.js\"), __webpack_require__(/*! camelet */ \"camelet\"), __webpack_require__(/*! jquery */ \"jquery\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log, Qos ){\r\n\r\n    \t/**\r\n    \t * #core.io.endpoints.Xhr\r\n\t\t * Provides the XHR communication capability\r\n    \t * @author Andy Monis\r\n    \t */\r\n        var _Xhr = function( config ){\r\n\t        var me = {};\r\n\r\n\t        // PROPERTIES\r\n\r\n\t        me.capabilities = {\r\n\t            consume: [ { cls: \"\" } ],\r\n\t            produce: [ { cls: \"\" } ]\r\n\t        },\r\n\r\n\t        me._timeout     = 500;\r\n\r\n\t        me.context      = config.context || \"/pumpco/external/open\";\r\n\r\n\t        me._inbox       = [];\r\n\r\n\t        me.inEp         = undefined;\r\n\r\n\t        me.name         = config.name;\r\n\r\n\t        me.outEp        = undefined;\r\n\r\n\t        me._properties  = config.properties || {};\r\n\r\n\t        me.pump         = config.pump;\r\n\r\n\t        me.msgIn        = config.msgIn;\r\n\r\n\t        me._url         = config.url;\r\n\r\n\t        // **private** _lastSent is a property that shows when the last (XHR request was made.\r\n\t        me._lastSent    = -1;\r\n\r\n\t        // **property** {function} onError callback, fired when the XHR endpoint receives a 404. AMONIS: 01/09/2015.\r\n\t        me.onError \t\t= config.onError;\r\n\r\n\t        // **property** {function} onSuccess callback, fired when the XHR endpoint receives a 200. AMONIS: 01/09/2015.\r\n\t        me.onSuccess \t= config.onSuccess;\r\n\r\n\t        // **property** {function} onQos callback. Fired when the Endpoint detects a notable change in status.\r\n\t        me.onQos      \t= config.onQos || function(){};\r\n\r\n\t        // Quality of Service object\r\n\t        me.qos \t\t\t= new Qos();\r\n\r\n\t        // METHODS\r\n\r\n\t        // NEW CODE HERE\r\n\r\n\t        /**\r\n\t         * @method connect\r\n\t         * Creates an IN and an OUT endpoint for connecting to the Pump.\r\n\t         * Wires itself in to listen for a particular context i.e. messages to go external\r\n\t         */\r\n\t        me.connect = function( context, capabilities ){\r\n\t            // Configure thr capability options.\r\n\t            // This would be an unlimited key/pair array\r\n\t            // Could be defined as outEp( '{cls:\"pumpco.*\"}' );\r\n\r\n\t            me.outEp = camelet.Endpoint({\r\n\t                name: me.name + \"-Out\",\r\n\t                scheme: \"xhr\",\r\n\t                context: me.context,\r\n\t                options: me.capabilities.produce\r\n\t            });\r\n\r\n\t            me.inEp = camelet.Endpoint({\r\n\t                name: me.name + \"-In\",\r\n\t                scheme: \"xhr\",\r\n\t                context: me.context,\r\n\t                options: me.capabilities.consume,\r\n\t                listeners: [{\r\n\t                    fn: me.pulsed,\r\n\t                    scope: me\r\n\t                }]\r\n\t            });\r\n\r\n\t            var ep1 = me.pump.registerConsumer( me.outEp );\r\n\t            var ep2 = me.pump.registerProducer( me.inEp );\r\n\r\n\t            return ( ep1 && ep2 ) ? true : false;\r\n\t        };\r\n\r\n\t        /**\r\n\t         * @method disconnect\r\n\t         * Removes the Endpoints from the component\r\n\t         */\r\n\t        me.disconnect = function(){\r\n\t            var ep1 = me.pump.unregisterConsumer( me.outEp );\r\n\t            var ep2 = me.pump.unregisterProducer( me.inEp );\r\n\t        };\r\n\r\n\t        me.generatePollRequest = function(){\r\n\t            var message = new camelet.Message({\r\n\t                body: {\r\n\t                    pulseHeader: {\r\n\t                        \"mep\":\"inout\",\r\n\t                        \"pulseClass\": \"pumpCo.user.pulse.request\",\r\n\t                        \"pulseId\":camelet.Utils.generateUuid(),\r\n\t                        \"pulseResponseTimeout\":\"0\",\r\n\t                        \"pulseType\":\"command\",\r\n\t                        \"referenceId\":\"PollingP-ulse-0000-0000-000000000001\",\r\n\t                        \"timestamp\":camelet.Utils.now()\r\n\t                    },\r\n\t                    pulseBody: {}\r\n\t                }\r\n\t            });\r\n\r\n\t            // Create the exchange & add the message\r\n\t            var exchange = new camelet.Exchange();\r\n\t            exchange.setMessage( message );\r\n\r\n\t            return exchange;\r\n\t        };\r\n\r\n\t        /**\r\n\t         * @method exchangeToXhr\r\n\t         * Converts a regular Exchange into a JSON object suitable for sending over the wire\r\n\t         * @param exchange: Exchange: A valid camelet.Exchange object\r\n\t         */\r\n\t        me.exchangeToXhr = function( exchange ){\r\n\t            // Create the default HTTP Request structure for application/json\r\n\t            var httpHeader = {\r\n\t                \"Accept\":       \"application/json\",\r\n\t                \"Content-Type\": \"application/json\",\r\n\t                \"pumpReferer\":  window.location.toString()\r\n\t            };\r\n\r\n\t            // Add the authToken to the HTTP header if it exists in the exchange\r\n\t            var authToken = exchange.properties.getValue( \"authToken\" );\r\n\t            if( authToken ){\r\n\t                httpHeader.authToken = authToken;\r\n\t            }\r\n\r\n\t            // Add the Authorization to the HTTP header if it exists in the exchange ( expected to be in \"Bearer KJHSDHU93HDIEWHDOI\" format )\r\n\t            var authorization = exchange.properties.getValue( \"Authorization\" );\r\n\t            if( authorization ){\r\n\t                httpHeader[ \"Authorization\" ] = authorization;\r\n\t            }\r\n\r\n\t            // Convert the exchange body to JSON\r\n\t            var message = exchange.getMessage();\r\n\r\n\t            var body = message.getBody();\r\n\t            var httpBody = JSON.stringify( body );\r\n\r\n\t            return { header:httpHeader, data:httpBody };\r\n\t        };\r\n\r\n\t        /**\r\n\t         * @method exchangeToXhr\r\n\t         * Converts a regular Exchange into a JSON object suitable for sending over the wire\r\n\t         * @param exchange: Exchange: A valid camelet.Exchange object\r\n\t         */\r\n\t        me.xhrToExchange = function( xhr ){\r\n\r\n\t            var exchange = new camelet.Exchange();\r\n\r\n\t            var properties = exchange.properties;\r\n\r\n\t            //var pulse = JSON.parse( xhr.responseText );\r\n\t            var message = new camelet.Message({\r\n\t                body: xhr\r\n\t            });\r\n\r\n\t            exchange.setMessage( message );\r\n\r\n\t            return exchange;\r\n\t        };\r\n\r\n\t        /**\r\n\t         * @method poll\r\n\t         * A simple method that is called on a timers.\r\n\t         */\r\n\t        me.poller = function(){\r\n\t            if( me._inbox.length === 0 ){\r\n\t                // Create a basic polling exchange message\r\n\t                me._inbox.push( me.generatePollRequest() );\r\n\t            }\r\n\t            me.xhrSend();\r\n\r\n\t            if( me._poll ){\r\n\t                //setTimeout( me.poller, 5000 );\r\n\t            }\r\n\t        };\r\n\r\n\t        me._poll = false;\r\n\t        me.poll = function(){\r\n\t            //me._poll = !me._poll;\r\n\r\n\t            me.poller();\r\n\t        };\r\n\r\n\t        me.send = function( exchange ){\r\n\t            me._inbox.push( exchange );\r\n\t            me.poll();\r\n\t        };\r\n\r\n\t        /**\r\n\t         * ###xhrReceive\r\n\t         */\r\n\t        me.xhrReceive = function( packet ){\r\n\t            // Calc the message length\r\n                var messageLength = JSON.stringify( packet ).length;\r\n\r\n                // Test for a valid pulse\r\n                if( messageLength > 2 ){\r\n\r\n    \t            var exchange = me.xhrToExchange( packet );\r\n\r\n    \t            // Get the header after parsing from a JSON string\r\n    \t            var pulseHeader = exchange.message.getBody().pulseHeader;\r\n\r\n    \t           \t// Calculate some QoS data on the response if possible\r\n    \t           \tvar qos = me.qos.response( pulseHeader.referenceId, messageLength );\r\n\r\n    \t           \t// Call the onQos callback if there is some QoS data.\r\n    \t           \tif( qos )\r\n    \t           \t\tme.onQos( qos );\r\n\r\n    \t           \t// Pulse the exchange back into the pump ( External Consumer In )\r\n    \t            me.pulse( exchange );\r\n                }\r\n\t        };\r\n\r\n\t        /**\r\n\t         * ###xhrSend\r\n\t         */\r\n\t        me.xhrSend = function(){\r\n\t        \t// Get the exchange from the Inbox\r\n\t        \tvar exchange = me._inbox.pop();\r\n\r\n\t        \t// Unwrap the Camelet Exchange to get the Pulse information\r\n\t        \tvar pulseHeader = exchange.message.getBody().pulseHeader\r\n\r\n\t            // pop the top item from the inbox and convert to XHR format ( headers etc )\r\n\t            var config = me.exchangeToXhr( exchange );\r\n\r\n\t            // Set the QoS flag if no inflight check is currently being processed\r\n\r\n            \t// Get an approx size for the message\r\n\t            var messageLength = JSON.stringify( config ).length + 182;\r\n\r\n\t            // AMONIS: 13/05/16: Implement some basic Quality Of Service for the endpoint\r\n\t            me.qos.request( pulseHeader.referenceId, messageLength );\r\n\r\n\t            // AMONIS: Use JQuery Async Ajax library\r\n\t            var request = $.ajax({\r\n\t                url: me._url,\r\n\t                headers: config.header,\r\n\t                type: \"POST\",\r\n\t                data: config.data,\r\n\t                dataType: \"json\"\r\n\t            });\r\n\r\n\t            // Success handling for XHR requests ( 200's )\r\n\t            request.done( function( msg ) {\r\n\t                // AMONIS: 01/09/2015: Added onError handling for XHR 404's in the pump\r\n\t                me.onSuccess( this.data, msg );\r\n\r\n\t                if( msg )\r\n\t                    me.xhrReceive( msg );\r\n\t            });\r\n\r\n\t            // Error handling for XHR requests ( 404's etc )\r\n\t            request.fail( function( jqXHR, textStatus ) {\r\n\t                the.log.debug( this, \"Request failed: \" + textStatus );\r\n\r\n\t                // AMONIS: 01/09/2015: Added onError handling for XHR 404's in the pump\r\n\t                me.onError( this.data, jqXHR.responseText, jqXHR.status );\r\n\t            });\r\n\t        };\r\n\r\n\t        // NEW CODE HERE\r\n\r\n\t        me.pulse = function( exchange ){\r\n\r\n\t            me.outEp.send( exchange );\r\n\t        };\r\n\r\n\t        me.onPulsed = function( message ){\r\n\t            //if( me.msgIn )\r\n\t            //    me.msgIn( message );\r\n\t        };\r\n\r\n\t        me.pulsed = function( exchange ){\r\n\t            me.send( exchange );\r\n\t            // var msg = exchange.getMessage();\r\n\t            // var body = msg.getBody();\r\n\r\n\t            // me.onPulsed( body );\r\n\t        };\r\n\r\n\t        // return the instance\r\n\t        return me;\r\n\t    };\r\n\r\n\t    /**\r\n    \t * Xhr\r\n    \t * Class Wrapper to package the old style JS as a RequireJS class.\r\n    \t */\r\n\t    function Xhr( config ){\r\n\t    \treturn _Xhr( config );\r\n\t    }\r\n\t    Xhr.prototype = {};\r\n\r\n\t    return Xhr;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/core/io/endpoints/xhr.js?");

/***/ }),

/***/ "./src/core/io/shims/cog.js":
/*!**********************************!*\
  !*** ./src/core/io/shims/cog.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n    Pump\r\n    The Pump is the heart of the OS and connects it to the backend service.\r\n    This initialises and configures the JS Message Routing engine Camelet.\r\n    @author Andy Monis\r\n*/\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n        __webpack_require__(/*! core/events */ \"./src/core/events.js\"),\r\n        __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), \r\n        __webpack_require__(/*! core/io/shims/shim */ \"./src/core/io/shims/shim.js\"),\r\n        __webpack_require__(/*! camelet */ \"camelet\")\r\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log, Shim ){\r\n\r\n    \t/**\r\n    \t * ###Cog\r\n    \t * Cog Shim\r\n    \t */\r\n\t    function Cog( config ){\r\n\t    \treturn new Shim( config );\r\n\t    }\r\n\r\n\t    Cog.prototype = {};\r\n\r\n\t    return Cog;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/core/io/shims/cog.js?");

/***/ }),

/***/ "./src/core/io/shims/service.js":
/*!**************************************!*\
  !*** ./src/core/io/shims/service.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n    Pump\r\n    The Pump is the heart of the OS and connects it to the backend service.\r\n    This initialises and configures the JS Message Routing engine Camelet.\r\n    @author Andy Monis\r\n*/\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n        __webpack_require__(/*! core/events */ \"./src/core/events.js\"),\r\n        __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"),\r\n        __webpack_require__(/*! core/io/shims/shim */ \"./src/core/io/shims/shim.js\"),\r\n        __webpack_require__(/*! camelet */ \"camelet\")\r\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log, Shim ){        \r\n\r\n    \t/**\r\n    \t * ###Service\r\n    \t * Service Shim\r\n    \t */\r\n\t    function Service( config ){\r\n\t    \treturn new Shim( config );\r\n\t    }\r\n\r\n\t    Service.prototype = {};\r\n\r\n\t    return Service;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/core/io/shims/service.js?");

/***/ }),

/***/ "./src/core/io/shims/shim.js":
/*!***********************************!*\
  !*** ./src/core/io/shims/shim.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n    Pump\r\n    The Pump is the heart of the OS and connects it to the backend service.\r\n    This initialises and configures the JS Message Routing engine Camelet.\r\n    @author Andy Monis\r\n*/\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n        __webpack_require__(/*! core/events */ \"./src/core/events.js\"),\r\n        __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"),\r\n\r\n        __webpack_require__(/*! core/io/beans/exchangefacade */ \"./src/core/io/beans/exchangefacade.js\"),\r\n        __webpack_require__(/*! core/io/beans/exchange */ \"./src/core/io/beans/exchange.js\"),\r\n\r\n        __webpack_require__(/*! camelet */ \"camelet\")\r\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log, ExchangeFacade, Exchange ){\r\n\r\n        var _Shim = function( config ){\r\n            /**\r\n             * @class test.App\r\n             * @author Andy Monis\r\n             */\r\n            var me = {};\r\n\r\n            // PROPERTIES\r\n\r\n            me.capabilities = {\r\n                consume: config.consume || [ { cls: \"\" } ],\r\n                produce: config.produce || [ { cls: \"\" } ]\r\n            },\r\n\r\n            me.context = \"/pumpco/cog\";\r\n\r\n            me.inEp = undefined;\r\n\r\n            me.name = config.name;\r\n\r\n            me.outEp = undefined;\r\n\r\n            me.pump = config.pump;\r\n\r\n            me._onPulsed = undefined;\r\n\r\n            // METHODS\r\n\r\n            me.connect = function( context, capabilities ){\r\n                // Configure thr capability options.\r\n                // This would be an unlimited key/pair array\r\n                // Could be defined as outEp( '{cls:\"pumpco.*\"}' );\r\n\r\n                me.outEp = camelet.Endpoint({\r\n                    name: me.name + \"-Out\",\r\n                    scheme: \"pulse\",\r\n                    context: context,\r\n                    options: capabilities.produce\r\n                });\r\n\r\n                me.inEp = camelet.Endpoint({\r\n                    name: me.name + \"-In\",\r\n                    scheme: \"pulse\",\r\n                    context: context,\r\n                    options: capabilities.consume,\r\n                    listeners: [{\r\n                        fn: me.pulsed,\r\n                        scope: me\r\n                    }]\r\n                });\r\n\r\n                var ep1 = me.pump.registerConsumer( me.outEp );\r\n                var ep2 = me.pump.registerProducer( me.inEp );\r\n\r\n                //me.log( me.name + \" connected to Camelet.\" );\r\n\r\n                return ( ep1 && ep2 ) ? true : false;\r\n            };\r\n\r\n            me.pulse = function( exchange ){\r\n                // Convert FROM V1 Exchange\r\n                var cls = exchange.getPulseClass();\r\n                var head = exchange.getPulseHeader();\r\n                var body = exchange.getPulseBody();\r\n\r\n                var message = new camelet.Message({\r\n                    body: {\r\n                        pulseHeader: {\r\n                            \"componentId\": head.componentId,\r\n                            \"requestingComponentId\": head.requestingComponentId, // AMONIS: 20/04/2015: Updated to support OS Service sending a message to a single cog.\r\n                            \"mep\": \"inout\",\r\n                            \"pulseClass\": head.pulseClass,\r\n                            \"pulseId\":head.pulseId,\r\n                            \"pulseResponseTimeout\":head.pulseResponseTimeout,\r\n                            \"pulseType\":head.pulseType,\r\n                            \"referenceId\":head.referenceId,\r\n                            \"timestamp\":head.timestamp,\r\n                            \"tracked\":head.tracked                              // AMONIS: 12/10/2016: Updated to include tracked flag\r\n                        },\r\n                        pulseBody: body\r\n                    }\r\n                });\r\n\r\n                // Create the exchange & add the message\r\n                var cameletExchange = new camelet.Exchange();\r\n                cameletExchange.setMessage( message );\r\n\r\n                this.outEp.send( cameletExchange );\r\n            };\r\n\r\n\r\n            me.onPulsed = function( fn, scope ){\r\n                me._onPulsed = {\r\n                    fn: fn,\r\n                    scope: scope\r\n                };\r\n            };\r\n\r\n            me.pulsed = function( cameletExchange ){\r\n                var cameletMessage = cameletExchange.getMessage();\r\n\r\n                var pulse = cameletMessage.getBody();\r\n\r\n                // Convert TO V1 Exchange\r\n                var exchange = ExchangeFacade.getInOutCommand({\r\n                    ns: pulse.pulseHeader.pulseClass,\r\n                    body: pulse.pulseBody,\r\n                    compId: pulse.pulseHeader.componentId,\r\n                    refId: pulse.pulseHeader.referenceId,\r\n                    reqId: pulse.pulseHeader.requestingComponentId\r\n                });\r\n\r\n                // Optionally set the responseToClass which will exist on Exception pulses only.\r\n                if( pulse.pulseHeader.responseToClass ){\r\n                    exchange.setResponseToClass( pulse.pulseHeader.responseToClass );\r\n                }\r\n                // Set the MsgOut and MsgIn to the same thing.\r\n                // This is legacy because we are using the old style exchange.\r\n                exchange.msgOut = exchange.msgIn;\r\n\r\n                if( me._onPulsed ){\r\n                    //Call handler directly\r\n\r\n                    var jsonExchange = exchange.serialise();\r\n                    if( !the.cssFeature( [ \"boxShadow\" ] ) ){\r\n                        // IE8. Send directly and DO NOT use timer event\r\n                        var ex = new Exchange( {} );\r\n                        ex.deserialise( jsonExchange );\r\n                        me._onPulsed.fn.call( me._onPulsed.scope, ex );\r\n                    } else {\r\n                        (function( json ){\r\n                            setTimeout( function( ){\r\n                                // var ex = Ext.create(\"pumpco.core.jsbean.Exchange\", {});\r\n                                var ex = new Exchange( {} );\r\n                                ex.deserialise( json );\r\n                                me._onPulsed.fn.call( me._onPulsed.scope, ex );\r\n                            }, 0 );\r\n                        })( jsonExchange );\r\n                    }\r\n                } else {\r\n                    the.log.warning( me, \"Attempted to call _onPulsed, but no function registered [\" + me.name + \"]\" );\r\n                }\r\n            };\r\n\r\n            /**\r\n             * @method Constructor\r\n             */\r\n            me.connect( me.context, me.capabilities );\r\n\r\n            // return the instance\r\n            return me;\r\n        };\r\n\r\n    \t/**\r\n    \t * ###Shim\r\n    \t * Shim\r\n    \t */\r\n\t    function Shim( config ){\r\n\t    \treturn _Shim( config );\r\n\t    }\r\n\r\n\t    Shim.prototype = {};\r\n\r\n\t    return Shim;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/core/io/shims/shim.js?");

/***/ }),

/***/ "./src/core/kernel.js":
/*!****************************!*\
  !*** ./src/core/kernel.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Pump API and Application 2.0.0\n * Copyright(c) 2014 Pumpco Inc.\n\n\n */\n\n/**\n * @class Kernel ( Static )\n * The Kernel is the main controller for the OS.\n * The kernel is little more than a Creator and Message passer. To perform complicated tasks the Kernel uses 2 types\n * of processes to perform tasks. SERVICES are processes that run alonside the Kernel and pass messages. These are usually\n * non-visual. APPS run outside of the kernel space, can pass messages, and usually a visual and interact with the user.\n * Events:\n    \"kernel.preservice\"     : Fired after the Kernel has started, but before the services have been booted.\n    \"kernel.postservice\"    : Fired after the Kernel has started, and immeadiately after the services have been booted.\n    \"kernel.started\"        : Fired as the last point of initialisation, when the Kernel is ready to proceed.\n * @author  Andy Monis\n * @date    25-03-2014\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(/*! knockout */ \"knockout\"),\n    //\"the\",\n    __webpack_require__(/*! core/events */ \"./src/core/events.js\"),\n    __webpack_require__(/*! core/invoke */ \"./src/core/invoke.js\"),\n    __webpack_require__(/*! camelet */ \"camelet\"),\n    __webpack_require__(/*! core/pump */ \"./src/core/pump.js\"),\n    __webpack_require__(/*! core/model */ \"./src/core/model.js\"),\n    __webpack_require__(/*! core/security */ \"./src/core/security.js\"),\n    __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"),\n    __webpack_require__(/*! utils/i18n */ \"./src/utils/i18n.js\")\n    // After this point, not referenced in includes below.\n  ], __WEBPACK_AMD_DEFINE_RESULT__ = (function(ko, events, invoke, Camelet, Pump, Model, Security, log, i18n) {\n    /**\n     * @method Constructor\n     * @param config { debug:boolean }\n     */\n    function Kernel(config) {\n      config = config || {};\n      config.runtime = config.runtime || {};\n\n      // Add some startup timing\n      __mark(\"kernel\");\n\n      // **property** name {string} the name of the kernel\n      this.name = \"pumpface\"\n      // **property** version {string} a basic version string for the kernel\n      this.version = \"0.1.06\";\n\n      this.debug = config.debug ? true : false; // Check for a debug flag ( default to false )\n      // this.base           = config.base || undefined;       // Default base path for the Pump to connect to.\n      this.location = config.location || undefined; // Default base locations\n\n      this.services = config.services || []; // Set the services passed in via the config\n      this.apps = config.apps || []; // Set the apps passed in via the config\n      this.model = this.createModel(); // Create the model for use in the kernel\n      this.platform = config.platform || \"Desktop\"; // Default the Platform type to Desktop\n      this.api = {}; // Create the API namespace\n      this.useSocket = config.socket; // Allow the socket usage to be override by config\n\n      this.runtime = {};\n      this.runtime.wrapped = config.runtime.wrapped ? true : false;\n      // **property** pwa property identifies if running in PWA mode: AMONIS: 21/06/2018\n      this.runtime.pwa = config.runtime.pwa ? true : false;\n\n      // AMONIS: 10/06/2016: New minimal spec load\n      if (config.runtime.minimal === true || config.runtime.minimal === \"true\")\n        this.runtime.minimal = true;\n      else\n        this.runtime.minimal = false;\n\n      this.events = events; // expose events\n      //**property** {int} processRequired. Count of all the expected processes to load ( attempt to identify if a service doesn't load )\n      this.processRequired = 0;\n      //**property** {int} processLoaded. Count of all the processes loaded, notified by the API call ( \"kernel.process.loaded\" )\n      this.processLoaded = 0;\n      // **property** {boolean} _paused. Does the kernel this it is paused?\n      this._paused = false;\n\n      // Initialise the Pump, setting the basepath and debug flag\n      this.pump = new Pump({\n        \"kernel\": this,\n        \"debug\": this.debug,\n        \"location\": this.location,\n        // \"base\"      : this.base,\n        \"platform\": this.platform,\n        \"useSocket\": this.useSocket\n      });\n\n      // Initialise the Securioty module\n      this.security = new Security({\n        kernel: this, // Pass a reference to the Kernel, to allow API calls to be made\n        pump: this.pump, // Pass in the Pump ( for communication ) to all services\n        location: this.location // Pass in the Location ( root url ) to all services\n      });\n\n      // AMONIS: 14/03/2016: Configure the I18N language pack ( i18n is a Singleton for the core );\n      i18n.lang = this.loadLang(config.lang);\n\n      /*\n          Add API handling\n       */\n      // **api** kernel.process.loaded resgisters that an initiated process has successfully started.\n      this.addApi(\"kernel.process.loaded\", this.loadedProcess, this);\n      // **api** kernel.get.pumpface.path gets the available path for Pumpface\n      this.addApi(\"kernel.get.pumpface.path\", function() {\n        return this.location.pumpface\n      }.bind(this));\n      // **api** kernel.list.api returns a list of all registered API calls ( by all services )\n      this.addApi(\"kernel.list.api\", this.listApi.bind(this));\n      // **api** kernel.get.info returns an object of basic information\n      this.addApi(\"kernel.get.info\", this.displayVersion.bind(this));\n      // **api** kernel.get.info returns an object of basic information\n      this.addApi(\"kernel.get.paused\", this.isPaused.bind(this));\n\n      /*\n          Add Kernel Event Handling\n          AMONIS: 22/02/2016: Register custom event handling ( de-coupled from environment )\n       */\n\n      // **platform.offline** actions the offline ( no network ) event\n      events.on(\"platform.offline\", this.offline, this);\n\n      // **platform.online** actions the offline ( reconnected network ) event\n      events.on(\"platform.online\", this.online, this);\n\n      // **platform.pause** actions the paused ( app backgrounded / stopped )\n      events.on(\"platform.pause\", this.paused, this);\n\n      // **platform.resume** actions the resumed ( app resumed ) event\n      events.on(\"platform.resume\", this.resumed, this);\n\n      // **kernel.reboot** custom event that reboots the whole platform.\n      events.on(\"kernel.reboot\", this.reboot, this);\n\n      // Expose the kernel for testing\n      if (this.debug)\n        window.kernel = this;\n    };\n\n    // Create a new prototype object to base this on ( in this case a base object )\n    Kernel.prototype = {};\n\n    /**\n     * @method createModel\n     * @private\n     * Creates a new Model for the Kernel to manage the application.\n     */\n    Kernel.prototype.createModel = function() {\n      var model = new Model();\n\n      model.kernel = {};\n\n      // **property** {json} environment\n      model.kernel.platform = ko.observable({\n        \"os\": null, // The OS that is being used\n        \"size\": null, // os-small ( phone ), os-medium ( tablet ), os-large ( desktop )\n        \"orient\": null // os-landscape or os-portrait\n      });\n\n      model.services = {};\n\n      return model;\n    };\n\n    /**\n     * @method start\n     * Called directly on the new Kernel instance by the Boot process.\n     * The boot process is controlled by the developer and can be used to inject context and configuration into the\n     * Kernel. (example usage below)\n         new Kernel( {\n            \"debug\"     : true,\n            \"services\"  : [\n                { cls:Site, params:{} },\n                { cls:Space, params:{} }\n            ]\n        } ).start();\n     */\n    Kernel.prototype.start = function() {\n      log.debug(\"kernel.start()\");\n\n      // Fire a PRE SERVICE boot event\n      events.fire(\n        \"kernel.preservice\", {\n          \"name\": this.name,\n          \"version\": this.version,\n          // \"base\":     this.base,\n          // \"location\": this.location,\n          \"debug\": this.debug, // AMONIS: 24/01/2017: Pass in the debug flag to the preservice callback\n          \"model\": this.model,\n          \"pump\": this.pump,\n          \"runtime\": this.runtime\n        }, {\n          \"sync\": true\n        }\n      );\n\n      // SYNCHONOUS ( There is nothing to be gained by async, except confusion )\n      // Load and start all of the relevant SERVICES with serviceSpec\n      this.loadProcesses(this.services, \"services\");\n    };\n\n    /**\n     * @method started\n     * Invoked after all services have been started.\n     * Finalises all of the startup requirements, such as sorting out the model and binding etc.\n     * @fires kernel.started\n     */\n    Kernel.prototype.started = function() {\n\n      // Expose the model to the debugger; Usful for digging through stuff, but should be hidden;\n      if (this.debug)\n        window.model = this.model;\n\n      // Apply the model to the Knockout Bindings. Vital to get things to display on screen.\n      ko.applyBindings(this.model);\n\n      // Log Pretty message\n      this.logPrettyMessage();\n\n      // AMONIS: 09/01/2016: Register DOM listeners ( resize etc )\n      this.registerBrowserEvents();\n\n      // Wait for All services to start.\n      log.info(\"kernel.started\");\n\n      // Add the timing info for the end of the startup process\n      // this._timings.end = performance.now() || Date.now();\n      __markEnd(\"kernel\");\n\n      // Fire a KERNEL.STARTED event. This signifies that the kernel has loaded its dependencies are ready.\n      events.fire(\"kernel.started\", {\n        kernel: this\n      });\n\n\n      // Fire a KERNEL.POSTSERVICE boot event. This signifies that any post start processing may take place.\n      // These may start at any point though.\n      events.fire(\"kernel.postservice\", {\n        \"name\": this.name,\n        \"version\": this.version,\n        /*\"base\":this.base, \"model\":this.model, \"pump\":this.pump*/\n      });\n    };\n\n    /**\n     * ###logPrettyMessage\n     * Outputs a pretty aOS logo to the browser console.\n     * May want to add a little message as well :-)\n     * @return {JSON} [description]\n     */\n    Kernel.prototype.logPrettyMessage = function() {\n      var output = [\n        \"    _  __\",\n        \" _ / \\\\(_ \",\n        \"(_|\\\\_/__)\"\n      ].join(\"\\n\");\n\n      console.log(output);\n    };\n\n    /**\n     * ###offline\n     */\n    Kernel.prototype.offline = function(params) {\n      log.info(\"kernel.offline()\");\n\n      // pause the pump polling ( only has an effect on polling pumps and not sockets )\n      // this.pump.keepAlivePolling();\n    };\n\n    /**\n     * ###online\n     */\n    Kernel.prototype.online = function(params) {\n      log.info(\"kernel.online()\");\n\n      // Trigger an event to reshow the place\n      events.fire(\"place.reshow\", {});\n    };\n\n    /**\n     * ###paused\n     */\n    Kernel.prototype.paused = function(params) {\n      // Set the paused flag\n      this._paused = true;\n\n      log.info(\"kernel.paused()\");\n    };\n\n    /**\n     * ###resumed\n     */\n    Kernel.prototype.resumed = function(params) {\n      // UnSet the paused flag\n      this._paused = false;\n\n      log.info(\"kernel.resumed()\");\n\n      // Trigger an event to reshow the place\n      events.fire(\"place.reshow\", {\n        state: \"resumed\"\n      });\n    };\n\n    /**\n     * ###reboot\n     * Performs a very (VERY) basic reboot.\n     * Does NO elegant tear down, simply redirects the browser\n     */\n    Kernel.prototype.reboot = function(params) {\n      log.info(\"kernel.reboot()\");\n\n      // AMONIS: 03/11/2016: Strip out login.proxy from the url bar\n      var search = window.location.search.replace(/([&]*login.bypass=[\\w.|]+)/, \"\");\n\n      var url = window.location.origin + window.location.pathname + search;\n\n      window.location.replace(url);\n      //window.location = window.location;\n    };\n\n    // ### loadProcesses\n    // Synchronously Loads a Process, defined in a collection of processes, by callin gthe specified \"cls\" with the \"params\"\n    // and assigning it to the model.\n    // The processes can be NON-visual ( Services ) or Visual ( Apps )\n    Kernel.prototype.loadProcesses = function(collection, modelName) {\n\n      // Set the \"expected\" number of processes to be loaded.\n      this.processRequired = collection.length;\n\n      // Iterate over all of the Processes defined in the collection.\n      __.eachSync2(\n        collection,\n        function(spec, index, collection) {\n\n          // Pass a reference to the Kernel. This can be used for a central communication point.\n          spec.params[\"kernel\"] = this;\n\n          // Register the service model with the Kernel\n          spec.params[\"model\"] = this.model;\n\n          // Pass a reference to the Pump to the Service\n          spec.params[\"pump\"] = this.pump;\n\n          // Pass a reference to the Runtime environment to the Service\n          spec.params[\"runtime\"] = this.runtime;\n\n          // Pass a reference to the Platform Debug status\n          spec.params[\"debug\"] = this.debug;\n\n          // Pass a reference to the Browser Location to help with host platform determining\n          // { fqdn:false, href:\"https://dev.cnect.to/pumpco\", origin:\"https://dev.cnect.to\", pumpface:\"pf-hydra/\" }\n          spec.params[\"location\"] = this.location;\n\n          // Invoke the Cls specifed in the Spec, with the appropriate params\n          var process = new spec.cls(spec.params);\n\n          var processModel = this.model[modelName];\n          processModel[process.name] = process;\n        },\n        function() {}, {\n          scope: this\n        }\n      );\n    };\n\n    /**\n     * ###loadedProcess\n     * API Call mapped to \"kernel.process.loaded\".\n     * Every service should call this to notify the kernel that they have loaded. This allows them to be async in loading\n     * and perform more complex startup processes.\n     */\n    Kernel.prototype.loadedProcess = function(params) {\n      // Increment the processloaded counter;\n      this.processLoaded++;\n\n      // Log which processes have been loaded.\n      log.debug(this.name + \": kernel loaded: \" + params.name);\n\n      // If all of the expected processes have been loaded, trigger the start process.\n      if (this.processLoaded === this.processRequired) {\n        log.debug(this.name + \": All processes ready. Booting.\");\n        // Trigger the started events\n        this.started();\n      }\n    };\n\n    /**\n     * ###loadLang\n     */\n    Kernel.prototype.loadLang = function(langJson) {\n      // If the file passed in is already a JSON object, just return it\n      if (the.isObject(langJson)) {\n        return langJson;\n      }\n\n      // Create an empty language pack as a fallback\n      var tempLang = {};\n\n      // Parse the LangJson into a JSON object.\n      try {\n        tempLang = JSON.parse(langJson);\n      } catch (e) {\n        log.emergency(this.name + \": Failed to load language pack successfully.\");\n      }\n\n      // return the lang pack.\n      return tempLang;\n    };\n\n    // Kernel API\n    // Implementation moved to invoke.js\n\n    /**\n     * @method addApi\n     * Called by services to register a loosley coupled cross service call\n     */\n    Kernel.prototype.addApi = function(name, fn, scope) {\n      invoke.addApi(name, fn, scope);\n    };\n\n    // ### listApi\n    // returns a string ( joined array ) of all the api calls\n    Kernel.prototype.listApi = function() {\n      return invoke.listApi();\n    };\n\n    /**\n     * @method invoke\n     * Called by services to make a loosely coupled cross service call.\n     */\n    Kernel.prototype.invoke = function(name, params, callback) {\n      return invoke.run(name, params, callback);\n    };\n\n\n    // Kernel API\n\n    // Information\n    /**\n     * ###displayVersion\n     * @return {string} details about the kernel version\n     */\n    Kernel.prototype.displayVersion = function() {\n      return {\n        name: this.name,\n        version: this.version\n      };\n    };\n\n    /**\n     * ### isPaused\n     * @return {boolean} is the kernel paused or not ( app sleep )\n     */\n    Kernel.prototype.isPaused = function() {\n      return this._paused;;\n    };\n    // Information\n\n    // HTML 5 Browser Events\n\n    /**\n     * [determineEnvironment description]\n     * { \"os\":null, \"size\":null }\n     */\n    Kernel.prototype.determineEnvironment = function() {\n      var os = \"other\";\n      var size = \"other\";\n      var platform = \"windows\";\n\n      var screenOrientation = __get(\"screen.orientation.type\", window) || \"landscape-primary\";\n\n      if (the.isDesktop) {\n        if (the.isWindows)\n          platform = \"windows\";\n        else if (the.isMac)\n          platform = \"osx\";\n        else if (the.isLinux)\n          platform = \"linux\";\n      } else {\n        if (the.isIos)\n          platform = \"ios\"\n        else if (the.isAndroid)\n          platform = \"android\";\n      }\n\n      var size = \"small\";\n      var screenOrientation = __get(\"screen.orientation.type\", window) || \"landscape\";\n\n      if (screenOrientation === \"landscape-primary\")\n        screenOrientation = \"landscape\"\n      else if (screenOrientation === \"portrait-primary\")\n        screenOrientation = \"portrait\"\n\n      var screenWidth = __get(\"screen.width\", window) || 0;\n      // Phone / Tablet held normally\n      if (screenWidth >= 768)\n        size = \"medium\";\n      if (screenWidth > 1024)\n        size = \"large\";\n\n      // update the model\n      var env = this.model.kernel.platform;\n      env({\n        \"os\": platform,\n        \"size\": size,\n        \"orient\": screenOrientation\n      });\n    };\n\n    /*\n        Capture these consistently in the Kernel and translate to internal OS events.\n        Provides consistent API for services.\n        AMONIS: 01/09/2015\n     */\n    Kernel.prototype.registerBrowserEvents = function() {\n      window.addEventListener(\"resize\", this.determineEnvironment.bind(this), false);\n\n      window.addEventListener('orientationchange', this.determineEnvironment.bind(this), false);\n\n      // AMONIS: 09/01/2017: Run the handler once manually, to default the values\n      this.determineEnvironment();\n\n    };\n\n    // HTML 5 Browser Events\n\n    /**\n     * @method toString\n     * @private\n     * Used primarily for debugging to determine the object and version\n     */\n    Kernel.prototype.toString = function() {\n      return this.name + \":\" + this.version;\n    }\n\n    return Kernel;\n  }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/core/kernel.js?");

/***/ }),

/***/ "./src/core/model.js":
/*!***************************!*\
  !*** ./src/core/model.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0\r\n * Copyright(c) 2014 Pumpco Inc.\r\n  \r\n  \r\n */\r\n\r\n/**\r\n * @class Model\r\n * undefined\r\n * @author  Andy Monis\r\n * @date    14-07-2014\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ \r\n        __webpack_require__(/*! knockout */ \"knockout\"),\r\n        __webpack_require__(/*! core/events */ \"./src/core/events.js\"),\r\n        __webpack_require__(/*! utils/log */ \"./src/utils/log.js\")         \r\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko, events, log ) {      \r\n\r\n        /**\r\n         * @method Constructor\r\n         * @param config { debug:boolean } \r\n         */ \r\n        function Model ( config ) {\r\n            config = config || {};         \r\n        };\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        Model.prototype = {};\r\n\r\n        // /** \r\n        //  * @method getCogs \r\n        //  * function to get the Cogs for the Space ( id )\r\n        //  * @param id {string} id of a space to get the cogs for\r\n        //  */\r\n        // Model.prototype.getCogs = function( id ){\r\n        //     debugger;\r\n        //     var cogs = [];\r\n        //     for( var i=0; i<model.cogs().length; i++ ){\r\n        //         var cog = model.cogs()[ i ];\r\n        //         if( cog.parentId === id ){\r\n        //             cogs.splice( cogs.length, 0, cog );\r\n        //         }                    \r\n        //     }\r\n        //     return cogs;\r\n        // };\r\n\r\n        return Model;\r\n\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://AOS/./src/core/model.js?");

/***/ }),

/***/ "./src/core/pump.js":
/*!**************************!*\
  !*** ./src/core/pump.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n    Pump\r\n    The Pump is the heart of the OS and connects it to the backend service.\r\n    This initialises and configures the JS Message Routing engine Camelet.\r\n\r\n\r\n    COG ->  PULSE   ->  Pump\r\n                        |\r\n                    consumer-pulse-cog\r\n                    component-pulse-internal-inout ( internal.* )\r\n                    producer-pulse-cog  ->  PULSE   ->  COG\r\n\r\n    COG ->  PULSE   ->  Pump\r\n                        |\r\n                        consumer-pulse-cog\r\n                        component-pulse-controller\r\n                        component-pulse-external-polling\r\n                        component-pulse-external-out\r\n                        producer-pulse-external-open        ->  TRANSPORT   -> PUMPHOUSE\r\n                        producer-pulse-external-secure      ->  TRANSPORT   -> PUMPHOUSE\r\n\r\n\r\n\r\n    @author Andy Monis\r\n*/\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n        __webpack_require__(/*! core/events */ \"./src/core/events.js\"),\r\n        __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"),\r\n        // \"atmosphere\",\r\n\r\n        __webpack_require__(/*! core/io/beans/exchangefacade */ \"./src/core/io/beans/exchangefacade.js\"),\r\n        __webpack_require__(/*! core/io/beans/exchange */ \"./src/core/io/beans/exchange.js\"),\r\n        __webpack_require__(/*! core/io/beans/message */ \"./src/core/io/beans/message.js\"),\r\n        __webpack_require__(/*! core/io/beans/pulse */ \"./src/core/io/beans/pulse.js\"),\r\n\r\n        __webpack_require__(/*! core/io/endpoints/xhr */ \"./src/core/io/endpoints/xhr.js\"),\r\n        // \"core/io/endpoints/socket\",\r\n        __webpack_require__(/*! core/io/endpoints/websocket */ \"./src/core/io/endpoints/websocket.js\"),\r\n        __webpack_require__(/*! core/io/shims/cog */ \"./src/core/io/shims/cog.js\"),\r\n        __webpack_require__(/*! core/io/shims/service */ \"./src/core/io/shims/service.js\"),\r\n\r\n        __webpack_require__(/*! core/io/components/componentpulseregistry */ \"./src/core/io/components/componentpulseregistry.js\"),\r\n        __webpack_require__(/*! core/io/components/componentpulsecontroller */ \"./src/core/io/components/componentpulsecontroller.js\"),\r\n        __webpack_require__(/*! core/io/components/componentpulseexternalin */ \"./src/core/io/components/componentpulseexternalin.js\"),\r\n        __webpack_require__(/*! core/io/components/componentpulseexternalout */ \"./src/core/io/components/componentpulseexternalout.js\"),\r\n        __webpack_require__(/*! core/io/components/componentpulseexternalpolling */ \"./src/core/io/components/componentpulseexternalpolling.js\"),\r\n        __webpack_require__(/*! core/io/components/componentpulseinternalinout */ \"./src/core/io/components/componentpulseinternalinout.js\"),\r\n        __webpack_require__(/*! core/io/components/consumerpulsecog */ \"./src/core/io/components/consumerpulsecog.js\"),\r\n        __webpack_require__(/*! core/io/components/consumerpulseexternalopen */ \"./src/core/io/components/consumerpulseexternalopen.js\"),\r\n        __webpack_require__(/*! core/io/components/consumerpulseexternalsecure */ \"./src/core/io/components/consumerpulseexternalsecure.js\"),\r\n        __webpack_require__(/*! core/io/components/producerpulsecog */ \"./src/core/io/components/producerpulsecog.js\"),\r\n        __webpack_require__(/*! core/io/components/producerpulseexternalopen */ \"./src/core/io/components/producerpulseexternalopen.js\"),\r\n        __webpack_require__(/*! core/io/components/producerpulseexternalsecure */ \"./src/core/io/components/producerpulseexternalsecure.js\"),\r\n\r\n        // Not referenced after this point, just making sure they are loaded.\r\n        __webpack_require__(/*! camelet */ \"camelet\"),\r\n        // AMONIS: 10/11/2016: added resolution to the loading problem. Pump has a dependency on __ns ( which is in the.js )\r\n        __webpack_require__(/*! the */ \"the\")\r\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function(\r\n        events, log, /*atmosphere,*/\r\n        ExchangeFacade, Exchange, Message, Pulse,\r\n        Xhr, /*Socket,*/ WebSocketEp, CogShim, ServiceShim,\r\n        ComponentPulseRegistry, ComponentPulseController, ComponentPulseExternalIn, ComponentPulseExternalOut, ComponentPulseExternalPolling,\r\n        ComponentPulseInternalInOut, ConsumerPulseCog, ConsumerPulseExternalOpen,ConsumerPulseExternalSecure,\r\n        ProducerPulseCog, ProducerPulseExternalOpen, ProducerPulseExternalSecure\r\n    ){\r\n        // This runs before Main has been called.\r\n        log.debug( \"core/pump\" );\r\n\r\n        var _this = undefined;\r\n\r\n        // AMONIS: 17/10/2016: Backward compatibility with big global namespace\r\n        __ns( \"pumpco.core.jsbean\" );\r\n\r\n        // Expose Message using the old namespace ( and log to help removal of depreactated calls )\r\n        pumpco.core.jsbean.Message  = function( config ){ console.log( \"pumpco.core.jsbean.Message\" ); return new Message( config ) };\r\n        // Expose Exhange using the old namespace ( and log to help removal of depreactated calls )\r\n        pumpco.core.jsbean.Exchange = function( config ){ console.log( \"pumpco.core.jsbean.Exchange\" ); return new Exchange( config ) };\r\n        // Expose ExchangeFacade using the old namespace ( and log to help removal of depreactated calls )\r\n        pumpco.core.jsbean.ExchangeFacade = ExchangeFacade;\r\n        // Expose Pulse using the old namespace ( and log to help removal of depreactated calls )\r\n        pumpco.core.jsbean.Pulse = function( config ){ console.log( \"pumpco.core.jsbean.Pulse\" ); return new Pulse( config ) };\r\n\r\n        // Expose Atmosphere for the Pump ( Ideally the Socket connection would be re-written to accept this. )\r\n        // window.atmosphere = atmosphere;\r\n\r\n        /**\r\n         * Constructor\r\n         */\r\n        function Pump ( params ) {\r\n            _this = this;\r\n\r\n            params        = params || {};\r\n            this.debug    = params.debug || false;\r\n            this.name     = \"pump\";\r\n            this.version  = \"0.0.1\";\r\n            this._location= params.location || \"\";\r\n            this._baseUrl = this._location.origin  + \"/pump\";\r\n            this._camelet = camelet.Camelet( {} );\r\n\r\n            // **property** {boolean} _online Holds the current state of the Pump.\r\n            this._online  = navigator.onLine;\r\n\r\n            // Store Kernel for reference\r\n            this.kernel = params.kernel;\r\n\r\n            // AMONIS: 11/11/2016: Generate a new Pump EndpointId that is attached to every outgoing pulse\r\n            this._endpointId = the.generateUuid();\r\n\r\n            // camelet.Log.setLevel( \"DEBUG\" );\r\n            if( params.platform === \"Desktop\" )\r\n                this.platform = undefined\r\n            else\r\n                this.platform = params.platform ;\r\n\r\n            this.authToken = \"\";\r\n            this.socketReconnectCount = 0;\r\n\r\n            // **private** {string} _connection: the last connection type after it changed\r\n            this._connection = \"gprs\";\r\n\r\n            // **private** [ints] _qualityAverages: a record of the last 5 qos readings.\r\n            this._qualityAverages = [];\r\n\r\n            // Check if this is IE8 or IE9\r\n            this.isIE8IE9 = !the.cssFeature( [ \"webkitBoxFlex\", \"MozBoxFlex\", \"msFlex\" ] );\r\n\r\n            // Flag to determine if the \"ping\" was successful\r\n            this.useXhr = false;\r\n\r\n            // **property** {int} socketReconnectCount Records the WebSocket connection attempts\r\n            this.socketReconnectCount = 0;\r\n\r\n            // Allow the polling to override the socket creation, for browsers that are not IE8 or IE9 ( which don't support sockets anyway )\r\n            if( !this.isIE8IE9 )\r\n                this.isIE8IE9 = !params.useSocket || this.isIE8IE9;\r\n\r\n            this.build( this._endpointId );\r\n\r\n            // Don't connect polling endpoing for localhost\r\n            // if( this._baseUrl.indexOf( \"localhost\" ) === -1 ){\r\n                // store the custom endpoints for future external access ( useful for debugging and injecting pulses )\r\n                this.endpoints = this.customise();\r\n            // }\r\n\r\n\r\n            // **platform.online** actions the offline ( reconnected network ) event\r\n            events.on( \"platform.online\",   this.online, this );\r\n\r\n            // **platform.pause** actions the paused ( app backgrounded / stopped )\r\n            events.on( \"platform.pause\",    this.paused, this );\r\n\r\n            // **platform.resume** actions the resumed ( app resumed ) event\r\n            events.on( \"platform.resume\",   this.resumed, this );\r\n\r\n            // Register Kernel API calls\r\n            this.kernel.addApi( \"pump.setAuthToken\", this.setAuthToken, this ); // legacy specific naming policy\r\n            // this.kernel.addApi( \"io.authToken.set\",  this.setAuthToken, this );\r\n\r\n            // **io.authToken.get** API call to get the current authtoken from Camelet\r\n            this.kernel.addApi( \"io.authToken.get\", this.getAuthToken, this );\r\n\r\n            // Register Kernel API calls\r\n            this.kernel.addApi( \"pump.isOnline\", this.isOnline, this );\r\n\r\n            this.kernel.addApi( \"pump.signout\", this.signout, this );\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        Pump.prototype = {};\r\n\r\n        /**\r\n         * @method build\r\n         * This is the heart of the pump. The main routes determine how messages get from one end to another,\r\n         * and to what EndPoint they are sent. The logic regarding Authenticated messages, swiotching channels etc\r\n         * is all managed inside the pump routing.\r\n         * Creates all Consumers, Producers and Components, which are at present statically defined.\r\n         * Wires the newly created components together to create logical routes for messages.\r\n         */\r\n        Pump.prototype.build = function( _endpointId ){\r\n            // Camelet Consumers ( Exchange entry points )\r\n            // AMONIS: 11/05/2016: Updated to RequireJs implementation\r\n            this._camelet.registerConsumer( new ConsumerPulseCog( { name:\"consumer-pulse-cog\", endpointId:_endpointId } ) );\r\n            this._camelet.registerConsumer( new ConsumerPulseExternalOpen( { name:\"consumer-pulse-external-open\", endpointId:_endpointId  } ) );\r\n            this._camelet.registerConsumer( new ConsumerPulseExternalSecure( { name:\"consumer-pulse-external-secure\", endpointId:_endpointId  } ) );\r\n\r\n            // Camelet Components ( Exchange processors )\r\n            // AMONIS: 11/05/2016: Updated to RequireJs implementation\r\n            this._camelet.registerComponent( new ComponentPulseController( { name:\"component-pulse-controller\", endpointId:_endpointId , platform:this.platform } ) );\r\n            this._camelet.registerComponent( new ComponentPulseExternalIn( { name:\"component-pulse-external-in\", endpointId:_endpointId  } ) );\r\n            this._camelet.registerComponent( new ComponentPulseExternalOut( { name:\"component-pulse-external-out\", endpointId:_endpointId  } ) );\r\n            this._camelet.registerComponent( new ComponentPulseExternalPolling( { name:\"component-pulse-external-polling\", endpointId:_endpointId  } ) );\r\n            this._camelet.registerComponent( new ComponentPulseInternalInOut( { name:\"component-pulse-internal-inout\", endpointId:_endpointId  } ) );\r\n            // AMONIS: 12/10/2016: Added the Pulse Registry Component\r\n            this._camelet.registerComponent( new ComponentPulseRegistry( { name:\"component-pulse-registry\", endpointId:_endpointId  } ) );\r\n\r\n             // Camelet Producers ( Exchange exit points )\r\n            // AMONIS: 11/05/2016: Updated to RequireJs implementation\r\n            this._camelet.registerProducer( new ProducerPulseCog( { name:\"producer-pulse-cog\", endpointId:_endpointId  } ) );\r\n            this._camelet.registerProducer( new ProducerPulseExternalOpen( { name:\"producer-pulse-external-open\", endpointId:_endpointId  } ) );\r\n            this._camelet.registerProducer( new ProducerPulseExternalSecure( { name:\"producer-pulse-external-secure\", endpointId:_endpointId  } ) );\r\n\r\n            // Wire Internal route In / Out\r\n            this._camelet.wire( \"consumer-pulse-cog\", \"component-pulse-internal-inout\" );\r\n            this._camelet.wire( \"component-pulse-internal-inout\", \"producer-pulse-cog\")\r\n\r\n            // Wire External route Out Open and Out Secure\r\n            this._camelet.wire( \"consumer-pulse-cog\", \"component-pulse-controller\" );\r\n            this._camelet.wire( \"component-pulse-controller\", \"component-pulse-external-polling\" );\r\n            this._camelet.wire( \"component-pulse-external-polling\", \"component-pulse-external-out\" );\r\n            this._camelet.wire( \"component-pulse-external-out\", \"producer-pulse-external-open\" );\r\n            this._camelet.wire( \"component-pulse-external-out\", \"producer-pulse-external-secure\" );\r\n\r\n            // Wire External route In Open and In Secure\r\n            this._camelet.wire( \"consumer-pulse-external-open\", \"component-pulse-external-in\" );\r\n            this._camelet.wire( \"consumer-pulse-external-secure\", \"component-pulse-external-in\" );\r\n            this._camelet.wire( \"component-pulse-external-in\", \"producer-pulse-cog\" );\r\n\r\n            // AMONIS: 12/10/2016: Added Pulse Registry between Controller and Polling\r\n            this._camelet.wire( \"component-pulse-external-in\", \"component-pulse-registry\" );\r\n            this._camelet.wire( \"consumer-pulse-cog\", \"component-pulse-registry\" );\r\n            this._camelet.wire( \"component-pulse-registry\", \"producer-pulse-cog\" );\r\n\r\n            // Add Component Event handler\r\n            var component = this._camelet.getComponentByName( \"component-pulse-external-in\" );\r\n            component.listen( \"authtoken\", this.onAuthToken, true );\r\n        };\r\n\r\n        /**\r\n         * @methos customise\r\n         * Enhances the basic Pump routing with custom Components and Endpoints.\r\n         * The main addition is the Polling XHR EndPoint that links the Frontend Pump with the Backend Pump, although\r\n         * in reality this could be a WebSocket, JSON-P, EMail ...\r\n         */\r\n        Pump.prototype.customise = function(){\r\n            // Create a new Open XHR Endpoint\r\n            // AMONIS: 11/05/2016: Updated to RequireJs implementation\r\n            // var openXhr = pumpco.core.io.endpoints.Xhr( {\r\n            var openXhr = new Xhr( {\r\n                id: \"openXhr\",\r\n                name: \"openXhr\",\r\n                context: \"/pumpco/external/open\",\r\n                pump: this,\r\n                url: this._baseUrl + \"/inout\",\r\n                onError: \tthis.xhrPingError,\r\n                onSuccess: \tthis.xhrPingSuccess,\r\n                onQos: \t\tthis.qualityOfService.bind( this )\r\n            } );\r\n            openXhr.connect();\r\n\r\n            // Create a new Secure XHR Endpoint\r\n            // AMONIS: 11/05/2016: Updated to RequireJs implementation\r\n            var secureXhr = new Xhr( {\r\n                id: \t\t\"secureXhr\",\r\n                name: \t\t\"secureXhr\",\r\n                context: \t\"/pumpco/external/secure\",\r\n                pump: \t\tthis,\r\n                url: \t\tthis._baseUrl + \"/secureInout\",\r\n                onError: \tthis.xhrPingError,\r\n                onSuccess: \tthis.xhrPingSuccess,\r\n                onQos: \t\tthis.qualityOfService.bind( this )\r\n            } );\r\n            secureXhr.connect();\r\n\r\n            // WebSocket\r\n            var webSocketUrl = this._location.origin + \"/PumpHouse/pumpws/websocket\";\r\n            webSocketUrl = webSocketUrl.replace( \"http\", \"ws\" );\r\n            var secureSocket = new WebSocketEp( {\r\n                id:             \"secureWebSocket\",\r\n                name:           \"secureWebSocket\",\r\n                context:        \"/pumpco/external/secure\",\r\n                pump:           this,\r\n                url: \t\t\twebSocketUrl,\r\n                onSuccess:      this.socketCreated.bind( this ),\r\n                onError: \t\tthis.socketError.bind( this ),\r\n                onClose:        this.socketClose.bind( this )\r\n            } );\r\n            secureSocket.wireEndpoints();\r\n\r\n            // expose the EP\r\n            this.secureSocket = secureSocket;\r\n\r\n            // Return the endpoints\r\n            return {\r\n                \"open\":         openXhr,\r\n                \"secure\":       secureXhr,\r\n                \"secureSocket\": secureSocket\r\n                // \"pingSocket\":   pingSocket\r\n            };\r\n        };\r\n\r\n        /* PUMP API */\r\n\r\n        /**\r\n         * @method createEndPoint\r\n         * Method to re-implement the existing Pumps createEndPoint functionality.\r\n         * @param type: String:\r\n         * @param config: Object: configuration options\r\n         */\r\n        Pump.prototype.createEndPoint = function( type, config, produce, consume ){\r\n            var endpoint;\r\n\r\n            // AMONIS: 11/05/2016: Updated to RequireJs implementation\r\n            // endpoint = pumpco.core.io.camelet.shims.Service( { \"name\":config.address, \"pump\":this, \"produce\":produce, \"consume\":consume } );\r\n            endpoint = new ServiceShim( { \"name\":config.address, \"pump\":this, \"produce\":produce, \"consume\":consume } );\r\n\r\n            return endpoint;\r\n        };\r\n\r\n        /**\r\n         * @method registerConsumer\r\n         * A simple wrapper to Camelet.\r\n         * Expects an object in the form of a Camelet Consumer and Config\r\n         * e.g. pump.registerConsumer( pumpco.core.io.components.ConsumerPulseCog( { name:\"consumer-pulse-cog\" } ) );\r\n         */\r\n        Pump.prototype.registerConsumer = function( obj ){\r\n            this._camelet.registerConsumer( obj );\r\n        };\r\n\r\n        /**\r\n         * @method registerConsumer\r\n         * A simple wrapper to Camelet.\r\n         * Expects an object in the form of a Camelet Consumer and Config\r\n         * e.g. pump.registerComponent( \"consumer-pulse-cog\", \"component-pulse-external-polling\" );\r\n         */\r\n        Pump.prototype.registerComponent = function( obj ){\r\n            this._camelet.registerComponent( obj );\r\n        }\r\n\r\n        /**\r\n         * @method registerConsumer\r\n         * A simple wrapper to Camelet.\r\n         * Expects an object in the form of a Camelet Consumer and Config\r\n         * e.g. pump.registerProducer( pumpco.core.io.components.ProducerPulseExternalSecure( { name:\"producer-pulse-external-secure\" } ) );\r\n         */\r\n        Pump.prototype.registerProducer = function( obj ){\r\n            this._camelet.registerProducer( obj );\r\n        }\r\n\r\n        /**\r\n         * @method wire\r\n         * A simple wrapper to Camelet.\r\n         * Expects the name of two components to wire together\r\n         * e.g. pump.wire( \"consumer-pulse-external-open\", \"component-pulse-external-in\" );\r\n         */\r\n        Pump.prototype.wire = function( from, to ){\r\n            this._camelet.wire( from, to );\r\n        }\r\n\r\n        /**\r\n         * @method registerConsumer\r\n         * Registers an Endpoint as a 'consumer' of Messages with the Pump. This is normally called to allow an\r\n         * external Endpoint in an application to listen for Messages from the Pump.\r\n         * @param endpoint: Endpoint: A valid Endpoint constructed by the Pump.\r\n         */\r\n        Pump.prototype.registerConsumer = function( endpoint ){\r\n            return this._camelet.registerConsumerEndpoint( endpoint );\r\n        };\r\n\r\n        /**\r\n         * @method registerProducer\r\n         * Registers an Endpoint as a 'producer' of Messages with the Pump. This is normally called to allow an\r\n         * external Ennpoint in an application to send Messages to the Pump.\r\n         * @param endpoint: Endpoint: A valid Endpoint constructed by the Pump.\r\n         */\r\n        Pump.prototype.registerProducer = function( endpoint ){\r\n            return this._camelet.registerProducerEndpoint( endpoint );\r\n        };\r\n\r\n\r\n        Pump.prototype.unsetAuthToken = function(){\r\n            // Set the external out component to contain the authToken in the headers\r\n            _this._camelet.setComponentProperty( \"component-pulse-external-out\", \"authToken\", undefined );\r\n        };\r\n\r\n        // ### onAuthToken\r\n        // Method that is fired by Camelet \"authToken\" event. This is picked up on the way in by\r\n        // ComponentPulseExternalIn, which is then used to set the AuthToken for all future pulses.\r\n        // There is a dramatic difference in the way XHR and Sockets work here.\r\n        // XHR - The authToken is applied to the header of each request in component-pulse-external-out\r\n        // Socket = The authToken is applied to the Socket object ONCE at startup.\r\n        Pump.prototype.onAuthToken = function( params ){\r\n            log.debug( \"AUTHTOKEN:\" + params.authtoken );\r\n\r\n            console.log( params.authtoken )\r\n\r\n            if( params.authtoken ){\r\n                // Store authToken\r\n                _this.authtoken = params.authtoken;\r\n\r\n\t            // Set the external out component to contain the authToken in the headers\r\n\t            _this._camelet.setComponentProperty( \"component-pulse-external-out\", \"authToken\", params.authtoken );\r\n\r\n                // Clear any OAuth type token\r\n                _this._camelet.setComponentProperty( \"component-pulse-external-out\", \"Authorization\", undefined );\r\n\t        }\r\n\r\n\t        if( params.oauth ){\r\n\t        \t// Set the external out component to contain the OAuth Token ( Authorization: Bearer 2d71d91d-3b28-465b-b989-af5c3391a576 ) in the headers\r\n\t        \t_this.oAuthToken = \"Bearer \" + params.oauth[ \"access_token\" ];\r\n\t        }\r\n\r\n            // Create the Socket\r\n            log.debug( \"core.Pump.onAuthToken( \" + _this.authtoken + \" )\" );\r\n\r\n            // Attempt to open the socket. ( falls back if IE )\r\n            this.socketOpen();\r\n        };\r\n\r\n        Pump.prototype.socketOpen = function(){\r\n            // This section is purely for the Sockets. The authToken needs to be set in the main object\r\n            // and the polling needs to be disabled. ( sockets are not supported in IE8/9 hence this check )\r\n            if( !_this.isIE8IE9 && !_this.useXhr ){\r\n                // IF we have a socket enabled browser, pause and try to connect socket\r\n\r\n                // AMONIS: 10/10/2016: Set polling keepAlive level for XHR or Socket\r\n                _this._camelet.getComponentProperty( \"component-pulse-external-polling\", \"keepAlive\", true );\r\n\r\n                // Favour Socket connectivity\r\n                _this._camelet.setComponentProperty( \"component-pulse-controller\", \"scheme\", \"paused\" );\r\n\r\n                // Open the socket 22/09/2015: Added OAuth token to the socket as well\r\n                _this.secureSocket.open( _this.authtoken );\r\n            }\r\n        };\r\n\r\n        Pump.prototype.xhrOpen = function(){\r\n            // The Secure XHR endpoint is currently always ready, so just favour the xhr scheme and flush\r\n            _this._camelet.setComponentProperty( \"component-pulse-controller\", \"scheme\", \"xhr\" );\r\n\r\n            // AMONIS: Set the polling (keepalive) to use the Socket ( slower ) polling\r\n            _this._camelet.setComponentProperty( \"component-pulse-external-polling\", \"scheme\", \"xhr\" );\r\n\r\n            // AMONIS: 10/10/2016: Set polling keepAlive level for XHR or Socket\r\n            _this._camelet.getComponentProperty( \"component-pulse-external-polling\", \"start\", true );\r\n\r\n            // Flush any queued requests\r\n            _this._camelet.getComponentProperty( \"component-pulse-controller\", \"flush\", true );\r\n        };\r\n\r\n        /**\r\n         * @method setAuthToken\r\n         * allows an authToken to be set manually and not dynamically via an auth pulse\r\n         */\r\n        Pump.prototype.setAuthToken = function( params ){\r\n            if( params && ( params.authtoken || params.oauth ) )\r\n                this.onAuthToken( params );\r\n            else\r\n                this.unsetAuthToken();\r\n        };\r\n\r\n        /**\r\n         * ###getAuthToken\r\n         * @return {string} the authToken or undefined\r\n         */\r\n        Pump.prototype.getAuthToken = function(){\r\n            var authToken = _this._camelet.getComponentProperty( \"component-pulse-external-out\", \"authToken\" );\r\n\r\n            return authToken;\r\n        };\r\n\r\n        /*\r\n         * Called on Successful socket create\r\n         */\r\n        Pump.prototype.socketCreated = function( _event ){\r\n            // reset the reconnect count\r\n            _this.socketReconnectCount = 0;\r\n\r\n            log.debug( \"core.Pump.socketCreated():\" );\r\n\r\n            // Favour Socket connectivity\r\n            _this._camelet.setComponentProperty( \"component-pulse-controller\", \"scheme\", \"socket\" );\r\n\r\n            // AMONIS: Set the polling (keepalive) to use the Socket ( slower ) polling\r\n            _this._camelet.setComponentProperty( \"component-pulse-external-polling\", \"scheme\", \"socket\" );\r\n\r\n            // Flush any queued requests\r\n            _this._camelet.getComponentProperty( \"component-pulse-controller\", \"flush\", true );\r\n\r\n            // Fire an event about socket state.\r\n            events.fire( \"pump.socket-connected\", _event );\r\n        };\r\n\r\n        /*\r\n         * ###socketError\r\n         * Called on Unsuccessful socket connect\r\n         */\r\n        Pump.prototype.socketError = function( _event  ){\r\n            _this.socketReconnectCount++;\r\n\r\n            log.debug( \"core.Pump.socketError(): \" + _this.socketReconnectCount );\r\n\r\n            if( _this.socketReconnectCount < 1 ){\r\n                // Open the socket 22/09/2015: Added OAuth token to the socket as well\r\n                this.socketOpen();\r\n            } else {\r\n                this.xhrOpen();\r\n            }\r\n        };\r\n\r\n        /*\r\n         * Called on Unsuccessful socket connect\r\n         */\r\n        Pump.prototype.socketClose = function( _event  ){\r\n            // Called on socket created success\r\n            log.debug( \"core.Pump.socketClose():\" );\r\n\r\n            // Fire an event about socket state.\r\n            events.fire( \"pump.socket-close\", _event );\r\n        };\r\n\r\n        /**\r\n         * ###xhrPingError\r\n         * Fired when a 404 is received from the pump.\r\n         * Sends out an OS Event with an offline state\r\n         */\r\n        Pump.prototype.xhrPingError = function( request, response, code ){\r\n        \tlog.emergency( \"pump:xhrPingError:\" );\r\n\r\n        \t// Event a change in network state\r\n        \tif( this._online ){\r\n        \t\tevents.fire( \"pump.network.status\", { state:\"offline\" } );\r\n        \t}\r\n\r\n        \t// Update the state of the pump to \"online\"\r\n        \tthis._online = false;\r\n\r\n        \t// Parse the JSON in and pass in event.\r\n        \tvar json = { pulseClass:\"no defined\" };\r\n        \ttry{\r\n        \t\tjson = JSON.parse( request );\r\n        \t} catch ( ex ) {}\r\n\r\n            // Fire an event about socket state.\r\n            events.fire( \"pump.xhr-ping-error\", { state:\"offline\", request:json } );\r\n        };\r\n\r\n        /**\r\n         * ###xhrPingError\r\n         * Fired when a 404 is received from the pump.\r\n         * Sends out an OS Event with an online state\r\n         */\r\n        Pump.prototype.xhrPingSuccess = function( response ){\r\n        \tlog.debug( \"Pump.xhrPingSuccess( 200 )\" );\r\n\r\n        \t// Event a change in network state\r\n        \tif( this._online === false ){\r\n        \t\tevents.fire( \"pump.network.status\", { state:\"online\" } );\r\n        \t}\r\n\r\n        \t// Update the state of the pump to \"online\"\r\n        \tthis._online = true;\r\n\r\n            // Fire an event about socket state.\r\n            events.fire( \"pump.xhr-ping-success\", { state:\"online\"} );\r\n        };\r\n\r\n        /**\r\n         * ###qualityOfService\r\n         */\r\n        Pump.prototype.qualityOfService = function( qos ){\r\n        \t// Store the Last 5 QoS readings ( for more consistency )\r\n        \tthis._qualityAverages.push( qos.bps );\r\n        \tif (this._qualityAverages.length > 5) {\r\n                this._qualityAverages.shift();\r\n                this._qualityAverages.shift();\r\n\t\t    }\r\n\r\n\t\t    // Calculate the average BPS reading\r\n\t\t    var avgBps = 0;\r\n\t\t    for( var i=0; i<this._qualityAverages.length; i++ ){\r\n\t\t    \tavgBps += this._qualityAverages[ i ];\r\n\t\t    }\r\n\t\t    avgBps = avgBps / this._qualityAverages.length;\r\n\r\n\t\t    // Convert the reading into a generalised value\r\n        \tvar connection = \"gprs\";\r\n        \tif( avgBps >= 30000 ){\r\n        \t\tconnection = \"wifi\";\r\n        \t} else if( avgBps >= 20000 ){\r\n        \t\tconnection = \"4g\";\r\n        \t} else if( avgBps >= 5000 ){\r\n        \t\tconnection = \"3g\";\r\n        \t} else if( avgBps >= 1750 ){\r\n        \t\tconnection = \"2g\";\r\n        \t}\r\n\r\n        \t// Check if the network state has changed and notify as appropriate\r\n        \tif( connection !== this._connection ){\r\n        \t\t// Update the changed network state\r\n        \t\tthis._connection = connection;\r\n\r\n        \t\t// broadcast the connection type\r\n        \t\tevents.fire( \"pump.network.status\", { connection:connection } );\r\n\r\n        \t\t// Log the results in debug mode\r\n        \t\tlog.debug( \"Pump:Connection:\" + connection );\r\n        \t}\r\n\r\n        \t// log.emergency( \"Pump:Connection:\" + connection + \"/\" + avgBps );\r\n        };\r\n\r\n        /**\r\n         * ###isOnline\r\n         * Returns the current online/offline state of the pump\r\n         */\r\n        Pump.prototype.isOnline = function(){\r\n        \treturn this._online;\r\n        }\r\n\r\n        /**\r\n         * ###signout\r\n         * Sends a signout pulse via the pump directly\r\n         * @return {JSON} [description]\r\n         */\r\n        Pump.prototype.signout = function(){\r\n            // Internal routing mechanism as the pump doesn't have an endpoint.\r\n            // Maybe it should for consistency?\r\n            this.internelSend( \"pumpCo.user.logout.request\", {} );\r\n        };\r\n\r\n        /*\r\n            THIS IS ALL WRONG - PURELY FOR TESTING\r\n        */\r\n\r\n        Pump.prototype.internelSend = function( ns, body, refId, compId ){\r\n\r\n\r\n            //var incoming = _this._camelet.getComponentByName( \"component-pulse-external-in\" );\r\n\r\n            // Register a 1 time call back for anything coming back in.\r\n            // incoming.listen( \"presend\", function( message ){\r\n            //     //log the message body, which should be the pulse\r\n            //     log.emergency( ko.toJSON( message.getBody() ) );\r\n            // }, true );\r\n\r\n            var type = ns.indexOf( \"event\" ) > -1 ? \"event\" : \"command\";\r\n            var mep  = ns.indexOf( \"event\" ) > -1 ? \"outOnly\" : \"inOut\";\r\n\r\n\r\n            var header = {};\r\n            if( compId )\r\n                header.componentId = compId;\r\n\r\n            header.mep                  = mep;\r\n            header.pulseClass           = ns;\r\n            header.pulseId              = \"000000-0000-00-0000-000000\";\r\n            header.pulseResponseTimeout = \"5000\";\r\n            header.pulseType            = type;\r\n            header.referenceId          =\"command-line\";\r\n            header.timestamp            = the.formatDateTime( the.dateTime() );\r\n\r\n            var message = new camelet.Message({\r\n                body: {\r\n                    pulseHeader: header,\r\n                    pulseBody: body\r\n                }\r\n            });\r\n\r\n            // Create the exchange & add the message\r\n            var cameletExchange = new camelet.Exchange();\r\n            cameletExchange.setMessage( message );\r\n\r\n            var component ;\r\n            if( mep === \"outOnly\" ){\r\n                // OutOnly refers to a message coming from PumpHouse. This need to come IN to the PumpFace Pump\r\n                component = _this._camelet.getComponentByName( \"component-pulse-external-in\" );\r\n            } else if ( ns.indexOf( \"internal\" ) > -1 ){\r\n                // inOut refers to a message that starts at PumpFace and is routed to PumpHouse for a response\r\n                component = _this._camelet.getComponentByName( \"component-pulse-internal-inout\" );\r\n            } else {\r\n                // inOut refers to a message that starts at PumpFace and is routed to PumpHouse for a response\r\n                component = _this._camelet.getComponentByName( \"component-pulse-controller\" );\r\n            }\r\n\r\n            //component.onprocess( cameletExchange );\r\n            component.pulsed( cameletExchange );\r\n        };\r\n\r\n        Pump.prototype.delRoute = function(){\r\n            // Legacy.\r\n            // I think this should unwire a Consumer / Producer.\r\n            // AMONIS: 27/11/2014\r\n        };\r\n\r\n        Pump.prototype.paused = function(){\r\n            console.log( \"pausing pump\" );\r\n            // AMONIS: 30/11/2017: Set polling to stop\r\n            _this._camelet.getComponentProperty( \"component-pulse-external-polling\", \"stop\", true );\r\n        };\r\n\r\n        Pump.prototype.resumed = function(){\r\n            // AMONIS: 30/11/2017: Set polling to stop\r\n            _this._camelet.getComponentProperty( \"component-pulse-external-polling\", \"start\", true );\r\n\r\n            // AMONIS: 10/10/2016: Set polling keepAlive level for XHR or Socket\r\n            _this._camelet.getComponentProperty( \"component-pulse-external-polling\", \"pollNow\", true );\r\n        };\r\n\r\n        /**\r\n         * toString\r\n         * Used generally for debugger;\r\n         */\r\n        Pump.prototype.toString = function(){\r\n            return this.name + \":\" + this.version;\r\n        };\r\n\r\n        // Return the constructor\r\n        return Pump;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/core/pump.js?");

/***/ }),

/***/ "./src/core/security.js":
/*!******************************!*\
  !*** ./src/core/security.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0\r\n * Copyright(c) 2014 Pumpco Inc.\r\n\r\n\r\n */\r\n\r\n/**\r\n * @class Security\r\n * The Security Service\r\n *\r\n * ------------\r\n * | Security |\r\n * ------------\r\n * .construtor()\r\n * .hasAuthMechanism -> checks for existing Auth Tokens ( OAuth / RememberMe )\r\n *                   -> fires event Security.EVENT_NO_TOKEN and triggers Drive & User to clear any cached information\r\n *\r\n *\r\n *\r\n * Resides in the Core, rather than an 'optional' service\r\n * Design thoughts for oAuth Revamp;\r\n * The Security Service should be pluggable to accept different \"auth\" mechanisms.\r\n * The Security Service should accept a \"needs-auth\" event from the Pump, or from a Cog. These are sent when\r\n   either a Cog ( Login ) is run or if an authToken expires in the Pump.\r\n * The Security Service invokes the most appropriate plugin.\r\n * The Security Service handles all of the negotiation\r\n * The Security Service events \"new-authToken\" type event back to the Pump.\r\n * The Pump should just work with authToken and nothing else. It does not know how / what auth mechanism was used.\r\n * @author  Andy Monis\r\n * @date    06-01-2016\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n        __webpack_require__(/*! knockout */ \"knockout\"),\r\n        __webpack_require__(/*! core/events */ \"./src/core/events.js\"),\r\n        __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"),\r\n        __webpack_require__(/*! mixins/endpoint */ \"./src/mixins/endpoint.js\"),\r\n        __webpack_require__(/*! utils/store */ \"./src/utils/store.js\"),\r\n        __webpack_require__(/*! core/security/oauth */ \"./src/core/security/oauth.js\"),\r\n        __webpack_require__(/*! core/security/rememberme */ \"./src/core/security/rememberme.js\"),\r\n        __webpack_require__(/*! utils/i18n */ \"./src/utils/i18n.js\")\r\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko, events, log, Endpoint, Store, OAuthPlugin, RememberMePlugin, i18n ){\r\n\r\n        var BASE_KEY  = \"security.\";\r\n        var OAUTH_KEY = BASE_KEY + \"oauth\";\r\n\r\n        /**\r\n         * ## App\r\n         * The App service manages the Apps loaded into the platform.\r\n         * @param {object} config Object containing all options '{ kernel, model, pump }' as provided by the OS.\r\n         */\r\n        function Security ( config ) {\r\n            // Set this apps name.\r\n            this.name  = \"security\";\r\n\r\n            // **property** {Kernel} kernel a reference to the kernel, used for calling API commands\r\n            this.kernel = config.kernel;\r\n\r\n            // **property** {Pump} pump a reference to the pump, used for creating endpoints\r\n            this.pump = config.pump;\r\n\r\n            // **property** {location} location a reference to the location of the environment ( browser URL if in a browser )\r\n            this.location = config.location;\r\n\r\n            // @private _authMEchanismAvailable {object} contains the name and token if one is available\r\n            this._authMechanismAvailable = { name:undefined, token:undefined };\r\n\r\n            // Initialse the Endpoint Config\r\n            this.createEndpointConfig();\r\n\r\n            // Create the Auth plugins collection ( they may register their own Endpoints as well )\r\n            this._plugins = [];\r\n\r\n            // Add OAuth plugin to the service\r\n            var oAuth = new OAuthPlugin( { parent:this } );\r\n            this._plugins[ oAuth.name ] = oAuth;\r\n\r\n            // Add RememberMe plugin to the service\r\n            var rememberMe = new RememberMePlugin( { parent:this } );\r\n            this._plugins[ rememberMe.name ] = rememberMe;\r\n\r\n            // Initialise the endpoints\r\n            this.pulsing( config );\r\n\r\n            // Request that the plugins check for their own auth tokens\r\n            // AMONIS: 13/01/2017: Update to hasAuthMechanism\r\n            // ( this does much the same work, but fires an event if no mechanisms are found i.e. no OAuth / RememberMe )\r\n            var authMechanisms = this.hasAuthMechanism();\r\n            if( !authMechanisms ){\r\n                // No auto-auth mechanisms found ( e.g. RemeberMe or OAuth )\r\n                // AMONIS: Fallback to force user back to Login Screen, if an auth error occurs, usually due to authToken expiring or being cancelled at the server side.\r\n                // AMONIS: The Plugins handle this if RememberMe or OAuth are used as they can attempt to re-auth silently.\r\n                this.addPulseHandler( \"exception.pumpCo.user.authentication.validation.invalidCredentials\", this.exceptionPumpcoUserAuthenticationValidationInvalidCredentials.bind( this ) );\r\n            }\r\n\r\n            /*\r\n                EVENT handlers\r\n             */\r\n\r\n            this.kernel.addApi( \"security.hasAuthMechanism\", this.hasAuthMechanism.bind( this ), this );\r\n\r\n            this.kernel.addApi( \"security.autoLogin\", this.autoLogin.bind( this ) );\r\n\r\n            this.kernel.addApi( \"security.logout\", this.internalSecurityClearRequest.bind( this ) );\r\n\r\n            events.on( \"security.plugin.success\",  this.authPluginSuccess, this );\r\n\r\n            events.on( \"security.plugin.timeout\",  this.authPluginTimeout, this );\r\n\r\n            events.on( \"security.plugin.failure\",  this.authPluginFailure, this );\r\n\r\n            events.on( \"security.plugin.invalidCredentials\", this.authPluginInvalidCredentials, this );\r\n\r\n            events.on( \"security.plugin.autoauth.failure\", this.authPluginAutoAuthFailure, this );\r\n\r\n            events.on( \"security.plugin.authtoken.invalid\", this.authPluginAuthTokenInvalid, this );\r\n\r\n            // **listener** core.io.internal.send sent from core/io/components/componentpulseexternalout when a pulse is sent to PumpHouse\r\n            events.on( \"core.io.external.send.gap\", function( data ){\r\n                console.log( \"Security: Pulse GAP io.send at: \" + new Date( data.ts ).toString() );\r\n\r\n                this.autoLogin();\r\n            }.bind( this ));\r\n        }\r\n\r\n        /**\r\n         * fired when no valid authentication token ( OAuth / RememberMe ) is found.\r\n         * This should trigger for any caches to be cleared regarding user information\r\n         * @typedef {string}\r\n         */\r\n        Security.EVENT_NO_TOKEN = \"security.auth.no.token\";\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        Security.prototype = {};\r\n\r\n        /**\r\n         * ###createEndpointConfig\r\n         * Create the Default Endpoint Config\r\n         */\r\n        Security.prototype.createEndpointConfig = function(){\r\n            // Create the Default Endpoint Config\r\n            this.addEndpointConfig( { \"className\":\"pumpCo.user.logout.request\", \"targetName\":\"out\" } );\r\n\r\n            this.addEndpointConfig( { \"className\":\"internal.security.auth.attempt\", \"targetName\":\"in\" } );\r\n\r\n            // Internal event sent when a user has been successfully loaded\r\n            this.addEndpointConfig( { \"className\":\"internal.security.auth.success\", \"targetName\":\"in\" } );\r\n\r\n            // Security Queries\r\n            this.addEndpointConfig( { \"className\":\"internal.security.auth.exists.request\", \"targetName\":\"in\" } );\r\n            this.addEndpointConfig( { \"className\":\"internal.security.auth.exists.response\", \"targetName\":\"out\" } );\r\n            this.addEndpointConfig( { \"className\":\"internal.security.auth.invalidCredentials\", \"targetName\":\"out\" } );\r\n\r\n            // Security Clear\r\n            this.addEndpointConfig( { \"className\":\"internal.security.clear.request\", \"targetName\":\"in\" } );\r\n\r\n            // Exception handling\r\n            this.addEndpointConfig( { \"className\":\"exception.pumpCo.user.authentication.validation.invalidCredentials\", \"targetName\":\"in\" } );\r\n        };\r\n\r\n        Security.prototype.addEndpointConfig = function( endpointConfig ){\r\n            this._endpointConfig = this._endpointConfig || [];\r\n\r\n            if( endpointConfig.targetName === \"in\" ){\r\n                this._endpointConfig.push( { \"className\":endpointConfig.className, \"targetName\":this.name } );\r\n            } else {\r\n                this._endpointConfig.push( { \"className\":endpointConfig.className, \"targetName\":\"PumpHouse\" } );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###pulsing\r\n         */\r\n        Security.prototype.pulsing = function( params ){\r\n            // Mixin Endpoint functionality\r\n            __mixin( this, new Endpoint( params ) );\r\n\r\n            // Initialise the endpoint\r\n            this.initEndpoint( this.name, this._endpointConfig );\r\n\r\n\r\n            // **handler** internal.security.auth.attempt is recieved when the cog asks the core to try an authentication method.\r\n            this.addPulseHandler( \"internal.security.auth.attempt\", this.internalSecurityAuthAttempt.bind( this ) );\r\n\r\n            // **handler** internal.security.auth.success is received from a cog IF the cog has done the authentication already ( OLD METHOD )\r\n            this.addPulseHandler( \"internal.security.auth.success\", this.internalSecurityAuthSuccess.bind( this ) );\r\n\r\n            // **handler** internal.security.auth.exists: responds with either true or false\r\n            this.addPulseHandler( \"internal.security.auth.exists.request\", this.internalSecurityAuthExistsRequest.bind( this ) );\r\n\r\n            // **handler** internal.security.clear.request: removes the oauth token if it exists\r\n            this.addPulseHandler( \"internal.security.clear.request\", this.internalSecurityClearRequest.bind( this ) );\r\n\r\n            // **handler** \"exception.pumpCo.user.authentication.validation.invalidCredentials\": fired when invalid AuthToken credentials are used. ( fire back to login )\r\n            // this.addPulseHandler( \"exception.pumpCo.user.authentication.validation.invalidCredentials\", this.exceptionPumpcoUserAuthenticationValidationInvalidCredentials.bind( this ) );\r\n\r\n            // Get the plugins to register handlers directly\r\n            for( var key in this._plugins ){\r\n                // AMONIS: 26/01/2016: Only loop over properties. Ignore functions on the prototype chain\r\n                if( this._plugins.hasOwnProperty( key ) ){\r\n                    this._plugins[ key ].registerPulseHandlers();\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###internalSecurityAuthSuccess\r\n         * Handles a valid authentication from an AppFlow or with an existing oAuth token etc.\r\n         */\r\n        Security.prototype.internalSecurityAuthSuccess = function( exchange ){\r\n            var body = exchange.getPulseBody();\r\n            var head = exchange.getPulseHeader();\r\n\r\n            var authToken   = body.authToken;\r\n\r\n            if( authToken || oauth ){\r\n\r\n                // Regular authToken login\r\n                if( authToken ){\r\n                    // Allow the plugins to perform initialisation following successful Auth Request\r\n                    for( var key in this._plugins ){\r\n                        // AMONIS: 26/01/2016: Only loop over properties. Ignore functions on the prototype chain\r\n                        if( this._plugins.hasOwnProperty( key ) ){\r\n                            this._plugins[ key ].postAuthSuccess( body );\r\n                        }\r\n                    }\r\n\r\n                    // Carry on authenticating\r\n                    this.processAuthentication.call( this, authToken );\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###processAuthentication\r\n         */\r\n        Security.prototype.processAuthentication = function( authToken, oauth ){\r\n            // AMONIS: 19/01/2016: This should never really get anything bar an authToken now.\r\n            // Pump only deals with authToken and thats it.\r\n\r\n            // Set the oauth / auth token ( this sets the appropriate XHR header etc. )\r\n            var body = { \"authtoken\":authToken, \"oauth\":oauth };\r\n\r\n            // Note: authtoken needs to be lowercase for this function call.\r\n            this.kernel.invoke( \"pump.setAuthToken\", body );\r\n\r\n            // Pulse the response back to the caller ( or anyone listening )\r\n            this.pulse( \"internal.security.auth.response\", { status:\"ok\" } );\r\n\r\n            // Trigger the internal event for User Service to pickup\r\n            events.fire( \"security.auth.success\", body );\r\n        };\r\n\r\n        /**\r\n         * ###exchangeOAuthToken\r\n         * Exchanges a valid oauth token for a regular ( pumpco ) authtoken.\r\n         */\r\n        Security.prototype.pumpcoUserOauthLoginRequest = function( oauthToken ){\r\n            // Pulse the response back to the caller ( or anyone listening )\r\n            this.pulse( \"pumpCo.user.oauth2.login.request\", {} );\r\n        };\r\n\r\n        /**\r\n         * ###exchangeOAuthToken\r\n         *  body :{\r\n                {\r\n                    \"status\": {\r\n                        \"code\": \"success\",\r\n                        \"message\": \"admin.mld logged in.\"\r\n                },\r\n                \"authToken\": \"a494e249e97b892ddc7db2822ce9ac90ddef0dc8467bd3d76978d5ceec11924f\"\r\n            }\r\n         */\r\n        Security.prototype.pumpcoUserOauthLoginResponse = function( exchange ){\r\n            var body = exchange.getPulseBody();\r\n\r\n            // Continue the login process\r\n            this.processLogin( body.authToken );\r\n        };\r\n\r\n        /**\r\n         * ###internalSecurityAuthAttempt\r\n         * Attempts to authenticate using the provided details\r\n         * @pararms\r\n         */\r\n        Security.prototype.internalSecurityAuthAttempt = function( exchange ){\r\n            var body = exchange.getPulseBody();\r\n\r\n            // Check that an authentication type has been set\r\n            var type = body.type;\r\n            if( !type ) {\r\n                log.emergency( \"ERROR: internalSecurityAuthAttempt\" );\r\n            }\r\n\r\n            // Pass on the request to the appropriate plugin\r\n            this._plugins[ type.toLowerCase() ].attempt( body.params );\r\n        };\r\n\r\n        /**\r\n         * ###internalSecurityAuthExistsRequest\r\n         */\r\n        Security.prototype.internalSecurityAuthExistsRequest = function( exchange ){\r\n            var result = this.internalSecurityAuthExists.call( this );\r\n\r\n            if( result.exists === false ){\r\n                // Pulse the response back to the caller ( or anyone listening )\r\n                this.pulse( \"internal.security.auth.exists.response\", result );\r\n            }\r\n\r\n        };\r\n\r\n        /**\r\n         * ###internalSecurityAuthExists\r\n         */\r\n        Security.prototype.internalSecurityAuthExists = function(){\r\n\r\n            // Defined the default result set\r\n            var result = { \"exists\":false, \"type\":\"none\" };\r\n\r\n            // Attempt to get the OAUTH keys\r\n            var oauth = Store.get( OAUTH_KEY );\r\n            if( oauth ){\r\n\r\n                var isBefore = the.dateTime().isBefore( the.parseDateTime( oauth[ \"expires_at\" ] ) )\r\n\r\n                if( isBefore ){\r\n                    result[ \"exists\" ] = true;\r\n                    result[ \"type\" ] = \"oauth\";\r\n\r\n                    this.processAuthentication.call( this, undefined, oauth );\r\n                } else {\r\n                    Store.del( BASE_KEY );\r\n                }\r\n            }\r\n\r\n            return result;\r\n\r\n        };\r\n\r\n        Security.prototype.internalSecurityClearRequest = function( params ){\r\n            params = params || { wait:0 };\r\n\r\n            // Remove any oAuth tokens from the stores.\r\n            Store.del( BASE_KEY );\r\n\r\n            // Request that the Drive De-authorises and logged in ( and cached ) user details\r\n            this.kernel.invoke( \"drive.deauth\", {} );\r\n\r\n            // AMONIS: 03/11/2016: This appears to cause serious problems reloading.\r\n            // It cancels a connection to PumpHouse, but appears unable to re-establish\r\n            // which seems to be a PF / PH combination problem.\r\n            // Removing prevents this error\r\n            // Even just refreshing the browser with the URL typed in causes an issue,\r\n            // so I think it is bigger than a simple error. Maybe cookies, sockets cached?\r\n            // this.kernel.invoke( \"pump.signout\", {} );\r\n\r\n            // // Reload the browser ( effectively click refresh ) after 2s\r\n            setTimeout( function(){\r\n                // Send a reboot event, which should kick the user out and back to the login screen.\r\n                events.fire( \"kernel.reboot\", {} );\r\n            }.bind( this ), params.wait );\r\n        };\r\n\r\n        /**\r\n         * ###exceptionPumpcoUserAuthenticationValidationInvalidCredentials\r\n         * Fired by PumpHouse when an invalid AuthToken is used.\r\n         * Return user to the login process\r\n         * AMONIS: 18/02/2016: This method maybe called alot. If the server is being refixtured this error will be constantly\r\n         * thrown\r\n         */\r\n        Security.prototype.exceptionPumpcoUserAuthenticationValidationInvalidCredentials = function( exchange ){\r\n\r\n            console.log( \"Security.prototype.exceptionPumpcoUserAuthenticationValidationInvalidCredentials\" );\r\n\r\n            // Get the body\r\n            var body = exchange.getPulseBody();\r\n\r\n            // AMONIS: 18/02/2016: Clear the plugin storage to prevent an infinite loop\r\n            //this._authMechanismAvailable\r\n            var name = this._authMechanismAvailable.name;\r\n            var token = this._authMechanismAvailable.token;\r\n\r\n            if( name ){\r\n                log.debug( \"Security: Clean plugin auth: '\"+ name + \"', '\" + token + \"'\" );\r\n\r\n                // Pass on respnsibility to the plugin to do the authentication\r\n                this._plugins[ name ].clean();\r\n\r\n                // Re-check for other valid OAuth tokens\r\n                this.checkForAuthTokens();\r\n            } else {\r\n                // Notify that a new authToken has been aquired\r\n                events.fire( \"security.plugin.failure\", {} );\r\n            }\r\n\r\n        };\r\n\r\n        /**\r\n         * ###checkForAuthTokens\r\n         * Invoked when the Kernel is ready. DOM should be created etc.\r\n         */\r\n        Security.prototype.checkForAuthTokens = function(){\r\n\r\n            // Reset the property\r\n            this._authMechanismAvailable = { name:undefined, token:undefined };\r\n\r\n            // Request all plugins check for available tokens\r\n            for( var key in this._plugins ){\r\n\r\n                if( this._plugins.hasOwnProperty( key ) ){\r\n                    // Request the plugin checks for token\r\n                    var result = this._plugins[ key ].check();\r\n                    if( result !== undefined && result !== null ){\r\n                        this._authMechanismAvailable.name = this._plugins[ key ].name;\r\n                        this._authMechanismAvailable.token = result;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            return this._authMechanismAvailable;\r\n        };\r\n\r\n        /**\r\n         * ###hasAuthMechanism\r\n         * returns an object containing the auth mechanism found or undefined\r\n         */\r\n        Security.prototype.hasAuthMechanism = function(){\r\n            // Re-check for auth mechanism\r\n            this.checkForAuthTokens();\r\n\r\n            // return the auth mechanism or undefined\r\n            if( this._authMechanismAvailable.name ){\r\n                return this._authMechanismAvailable;\r\n            } else {\r\n                // AMONIS: 13/01/2017: Remove any stored credentials at this point. The user is being redirected to the login screen.\r\n                events.fire( \"security.auth.no.token\", {} );\r\n\r\n                return undefined;\r\n            }\r\n        };\r\n\r\n        // pump.setAuthToken\r\n        Security.prototype.authPluginAuthTokenInvalid = function(){\r\n            // Show a toast message about re-connecting\r\n            // this.kernel.invoke( \"toast.show\", { \"msg\":i18n.resolve( \"security-establish-network\" )} );\r\n\r\n            this.kernel.invoke( \"pump.setAuthToken\" );\r\n        };\r\n\r\n        /**\r\n         * ###autoLogin\r\n         */\r\n        Security.prototype.autoLogin = function(){\r\n            //this._authMechanismAvailable\r\n            var name = this._authMechanismAvailable.name;\r\n            var token = this._authMechanismAvailable.token;\r\n\r\n            if( name && token ){\r\n              log.debug( \"AUTO-LOGIN: '\"+ name + \"', '\" + token + \"'\" );\r\n\r\n              // Pass on respnsibility to the plugin to do the authentication\r\n              this._plugins[ name ].autoLogin();\r\n            } else {\r\n              // Notify that a new authToken has been aquired\r\n              events.fire(\"security.plugin.failure\", {});\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###gotNewAuthToken\r\n         * Usually triggered by a plugin firing \"security.got.new.authtoken\"\r\n         */\r\n        Security.prototype.authPluginSuccess = function( params ){\r\n            // Show a toast message about re-connecting\r\n            //this.kernel.invoke( \"toast.show\", { \"msg\":i18n.resolve( \"security-network-ok\" ) } );\r\n\r\n            this.processAuthentication( params.authToken );\r\n        };\r\n\r\n        /**\r\n         * ###authTokenTimeout\r\n         * Usually triggered by a plugin firing \"security.got.new.authtoken\"\r\n         */\r\n        Security.prototype.authPluginTimeout = function( params ){\r\n            // Auth Failure, due to timeout ( offline )\r\n            // AMONIS: 23/02/2016:\r\n            // OAuth can timeout if the device is offline, PumpHouse is offline or any number of reasons inbetween.\r\n            // This lets the user in on the pre-cached site.\r\n            // When connection is restored the Pump / Security should re-negotiate the AuthToken ( TBC )\r\n            events.fire( \"security.auth.offline\" );\r\n        };\r\n\r\n        /**\r\n         * ###authPluginInvalidCredentials\r\n         */\r\n        Security.prototype.authPluginInvalidCredentials = function( params ){\r\n            this.kernel.invoke( \"toast.show\", { \"msg\":i18n.resolve( \"security-invalid-credentials\" ) } );\r\n\r\n            // Pulse the response back to the caller ( or anyone listening )\r\n            this.pulse( \"internal.security.auth.invalidCredentials\", {} );\r\n        };\r\n\r\n        /**\r\n         * ###authPluginAutoAuthFailure\r\n         * received when the plugin has failed to automatically re-authenticate due to an invalid / revoked token\r\n         */\r\n        Security.prototype.authPluginAutoAuthFailure = function( params ){\r\n            // If this happens we want to fire the user back to the login as fast as possible.\r\n\r\n            // Send a Security Clear Request ( but give the toast time to show )\r\n            setTimeout( function(){\r\n                this.internalSecurityClearRequest()\r\n            }.bind( this ), 0 );\r\n        };\r\n\r\n        /**\r\n         * ###authPluginFailure\r\n         * Usually triggered by a response from an Auth plugin ( can be re-created by a refixture )\r\n         */\r\n        Security.prototype.authPluginFailure = function( params ){\r\n            // Toast a message to the user\r\n            this.kernel.invoke( \"toast.show\", { \"msg\":i18n.resolve( \"security-sccount-problem\" ) } );\r\n\r\n            // Send a Security Clear Request ( but give the toast time to show )\r\n            setTimeout( function(){\r\n                this.internalSecurityClearRequest()\r\n            }.bind( this ), 5000 );\r\n        };\r\n\r\n        return Security;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/core/security.js?");

/***/ }),

/***/ "./src/core/security/oauth.js":
/*!************************************!*\
  !*** ./src/core/security/oauth.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Pump API and Application 2.0.0\n * Copyright(c) 2014 Pumpco Inc.\n */\n\n/**\n * @class OAuth Plugin\n\n * @author  Andy Monis\n * @date    13-01-2016\n\n * 1) Plugin should check for its own properties ( cookie, local storage etc. )\n * 2) Plugin should return ( pulse ) that it has a valid authentication option\n * 3) Login Cog pulses to use auth mechanism ( if desired )\n\n * Invalidating authToken\n * https://pumpco.cnect.to/PumpHouse/persistence/clearAuthToken?token=YOUR_AUTH_TOKEN\n *\n * https://pumpco.cnect.to/PumpHouse/oauth2Test/clearOAuthRefreshToken?token=YOUR_REFRESH_TOKEN\n * This allows you to invalidate a connection and therefore trigger an oauth reconnect\n\n * Process\n * Security Service \"asks\" plugin to check for an existing token ( OAuth.prototype.check  )\n * If a token is found the Security Service \"asks\" to perform an \"autoLogin\" ( OAuth.prototype.autoLogin )\n * The Plugin fires an OAuth request ( OAuth.prototype.attempt )\n * The AutoLogin \"removes\" the \"access_token\" from the cookie, once it has been used\n * The Plugin receives a response to ( OAuth.prototype.attemptCallback )\n * The plugin triggers \"security.plugin.invalidCredentials\" if the login fails.\n * On success the Plugin triggers \"security.plugin.response\", which inturn trigger a refresh request for the OAuth Token\n which is then stored ( importantly with a new \"access_token\" ), which can be used on next login.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! knockout */ \"knockout\"), __webpack_require__(/*! jquery */ \"jquery\"), __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! mixins/endpoint */ \"./src/mixins/endpoint.js\"), __webpack_require__(/*! utils/store */ \"./src/utils/store.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(ko, jquery, events, log, Endpoint, Store) {\n\n    /**\n     * ###createCookie\n     * Creates a standard Cookie\n     */\n    function createCookie(json, client_id, client_pw) {\n      var cookie = {\n        \"access_token\": json[\"access_token\"],\n        \"refresh_token\": json[\"refresh_token\"],\n        \"bearer\": json[\"bearer\"],\n        \"expires_in\": json[\"expires_in\"],\n        // Required for re-authing\n        \"client_id\": client_id,\n        \"client_pw\": client_pw\n      };\n      return cookie;\n    }\n\n    function ajax(config, callback) {\n\n      var request = $.ajax(config);\n\n      // Success handling for XHR requests ( 200's )\n      request.done(function(msg) {\n        // AMONIS: 01/09/2015: Added onError handling for XHR 404's in the pump\n        // callback( this.data, msg, 200 );\n\n        var json = {\n          data: this.data,\n          response: msg,\n          status: 200\n        };\n\n        // Fire the appropriate event handler\n        // me.$fire( config.name, json );\n        callback(json);\n      });\n\n      // Error handling for XHR requests ( 404's etc )\n      request.fail(function(jqXHR, textStatus) {\n        //callback( this.data, jqXHR.responseText, jqXHR.status );\n\n        var json = {\n          data: this.data,\n          response: jqXHR.responseText,\n          status: jqXHR.status\n        };\n\n        callback(json);\n\n        // Fire the appropriate event handler\n        // me.$fire( config.name, json );\n      });\n\n    };\n\n    /**\n     * ###encode\n     * A quick encryption method to create a Basic Auth header\n     */\n    function encode(user, pass) {\n      var tok = user + ':' + pass;\n      var hash = btoa(tok);\n      return \"Basic \" + hash;\n    };\n\n    var BASE_KEY = \"security.\";\n    var OAUTH_KEY = BASE_KEY + \"oauth\";\n\n    // var SECURITY_TIMEOUT = 1000;\n    var SECURITY_TIMEOUT = 1;\n    var SECURITY_TIMEOUT_ACTIONED = \"timeout_actioned\";\n\n    /**\n     * ## App\n     * The App service manages the Apps loaded into the platform.\n     * @param {object} config Object containing all options '{ kernel, model, pump }' as provided by the OS.\n     */\n    function OAuth(config) {\n      // @property oauth {string} name of the plugin\n      this.name = \"oauth\";\n\n      // @private _hasToken {boolean} set to either true or false if a valid auth token for this plugin is found\n      this._hasToken = false;\n\n      // @private _parent {object} a reference to the parent security service\n      this._parent = config.parent;\n\n      // @private _pulseTimeout used to handle if no response from pulse\n      this._pulseTimeout = undefined;\n\n      // @private _addedHandlers prevent re-adding of event listeners\n      this._addedHandlers = false;\n\n      // this._refreshRefId = undefined;\n\n      // Register the Pulses that the Plugin Sends / Recieves\n      this._parent.addEndpointConfig({\n        \"className\": \"pumpCo.user.oauth2.login.request\",\n        \"targetName\": \"out\"\n      });\n      this._parent.addEndpointConfig({\n        \"className\": \"pumpCo.user.oauth2.login.response\",\n        \"targetName\": \"in\"\n      });\n\n      // Register OAuth refresh pulses\n      this._parent.addEndpointConfig({\n        \"className\": \"pumpCo.user.oauth2.refresh.request\",\n        \"targetName\": \"out\"\n      });\n      this._parent.addEndpointConfig({\n        \"className\": \"pumpCo.user.oauth2.refresh.response\",\n        \"targetName\": \"in\"\n      });\n\n      this._parent.addEndpointConfig({\n        \"className\": \"exception.pumpCo.user.authentication.validation.invalidCredentials\",\n        \"targetName\": \"in\"\n      });\n      this._parent.addEndpointConfig({\n        \"className\": \"exception.pumpCo.user.authorisation.validation.accessDenied\",\n        \"targetName\": \"in\"\n      });\n\n      this._parent.addEndpointConfig({\n        \"className\": \"exception.pulse.failure\",\n        \"targetName\": \"in\"\n      });\n      this._parent.addEndpointConfig({\n        \"className\": \"exception.system.internal\",\n        \"targetName\": \"in\"\n      });\n\n    }\n\n    // Create a new prototype object to base this on ( in this case a base object )\n    OAuth.prototype = {};\n\n    /**\n     * ###registerPulseHandlers\n     * Implements the Security Plugin Interface.\n     */\n    OAuth.prototype.registerPulseHandlers = function() {\n      // Valid OAuth Response\n      this._parent.addPulseHandler(\"pumpCo.user.oauth2.login.response\", this.loginResponse.bind(this));\n\n      this._parent.addPulseHandler(\"pumpCo.user.oauth2.refresh.response\", this.oauthRefreshResponse.bind(this));\n    };\n\n    /**\n     * ###postAuthSuccess\n     * Invoked by the Service following a successful Authentication.\n     * Allows the plugin to process any further params provided\n     */\n    OAuth.prototype.postAuthSuccess = function(json) {};\n\n    /**\n     * ###attempt\n     * Attempts to authenticate using the params\n     * @params {\n            grant_type: \"password\",\n            client_id:  oauthId,        // OAuth App id\n            client_pw:  oauthPw,        // OAuth App pw\n            scope:      \"pulse\",\n            username:   username,       // This is the users username\n            password:   password        // This is the users password\n        }\n     */\n    OAuth.prototype.attempt = function(params) {\n      var defaults = {\n        grant_type: \"password\",\n        scope: \"pulse\",\n\n        client_id: params.client_id || undefined, // OAuth App id\n        client_pw: params.client_pw || undefined, // OAuth App pw\n\n        username: params.username.toLowerCase() || undefined, // This is the users username\n        password: params.password || undefined // This is the users password\n      }\n\n      if (!defaults.client_id || !defaults.client_pw || !defaults.username || !defaults.password) {\n        log.emergency(\"ERROR: OAuth.prototype.attempt: missing credentials\");\n      }\n\n      // OAUTH specifically requires that an XHR request is sent.\n      var cookie = createCookie({}, params.client_id, params.client_pw);\n      this.clean(cookie);\n\n      // Create the BASIC authentication header\n      var authorisationToken = encode(defaults.client_id, defaults.client_pw);\n\n      // Set the correct path for the request in PumpHouse\n      var url = this._parent.location.origin + \"/PumpHouse/oauth2/token\";\n\n      var config = {\n        // Name is used to trigger the event handler for\n        name: \"oauth\",\n        // The url to send the xhr request to\n        url: url,\n        // The data ( which will be converted appropriately, the default is GET so this will be a query string )\n        data: {\n          grant_type: defaults.grant_type,\n          client_id: defaults.client_id,\n          scope: defaults.scope,\n          username: defaults.username,\n          password: defaults.password\n        },\n        // Set the method to POST\n        method: \"POST\",\n        // Send the oAuth \"app\" username / password credentials ( this is important and must match PH config )\n        headers: {\n          \"Authorization\": authorisationToken\n        }\n      };\n\n      // Make the ajax request\n      ajax(config, this.attemptCallback.bind(this));\n    };\n\n    /**\n     * ###attemptCallback\n     */\n    OAuth.prototype.attemptCallback = function(json) {\n      if (json.status === 200) {\n        // Successful OAuth Request\n        var cookie = createCookie(json.response);\n        this.clean(cookie);\n\n        // Perform the autoLogin\n        this.autoLogin();\n      } else {\n        // UnSuccessful OAuth Request\n        events.fire(\"security.plugin.invalidCredentials\", {});\n      }\n    };\n\n    /**\n     * ###loginResponse\n     */\n    OAuth.prototype.loginResponse = function(exchange) {\n      var body = exchange.getPulseBody();\n\n      // Log the OAuth Request to static logging\n      Store.log(\"pumpCo.user.oauth2.login.response \" + JSON.stringify(body));\n\n      this.internalSecurityAuthResponse.call(this, body);\n    };\n\n    /**\n     * ###refreshOAuthToken\n     * local storage example\n     * { \"access_token\":\"312ef941-a437-4824-884e-bdfb70f690c7\",\n         \"refresh_token\":\"9318e664-eb19-448b-8e3f-c394ae0fed06\",\n         \"expires_in\":43199,\"expires_at\":\"2016-02-25T21:15:22+0000\"\n       }\n     */\n    OAuth.prototype.refreshOAuthToken = function() {\n      // Check for existence of a valid token, and attempt refresh if one exists\n      if (!this._hasToken)\n        return;\n\n      // Generate Base64 Authorization token\n      var authorisationToken = encode(this._hasToken[\"client_id\"], this._hasToken[\"client_pw\"]);\n\n      // Generate the appropriate body\n      var body = {\n        \"authentication\": authorisationToken,\n        \"refresh\": {\n          \"refresh_token\": this._hasToken[\"refresh_token\"],\n          \"client_id\": this._hasToken[\"client_id\"],\n          \"grant_type\": \"refresh_token\"\n        }\n      }\n\n      // Create a refId for the Refresh Request\n      // this._refreshRefId = the.generateUuid();\n\n      // Log the refresh request\n      Store.log(\"pumpCo.user.oauth2.refresh.request \" + JSON.stringify(body));\n\n      // AMONIS: 13/10/2016: Converted to a tracked Pulse and added componentId of this service\n      this._parent.pulseTracked(\"pumpCo.user.oauth2.refresh.request\", body);\n    };\n\n    /**\n     * ###oauthRefreshResponse\n     * Triggered after a successful login, and a refresh request has been fired.\n     * Creates a new cookie and stores the information. Preserving the old client_id and client_pw\n     ```js\n        {\"access_token\":\"87e87ab3-2b10-48c9-ba1d-73f282beb4c3\",\"token_type\":\"bearer\",\"refresh_token\":\"e118fafe-71f7-4d20-a33a-4772c79a839c\",\"expires_in\":43199,\"scope\":[\"pulse\"],\"status\":{\"code\":\"success\"}}\n     ```\n     */\n    OAuth.prototype.oauthRefreshResponse = function(exchange) {\n      var body = exchange.getPulseBody();\n\n      // Log the refresh request\n      Store.log(\"pumpCo.user.oauth2.refresh.response \" + JSON.stringify(exchange));\n\n      // Create a new cookie from the response\n      var cookie = createCookie(body);\n\n      // Update the stored one with the new details\n      this.clean(cookie);\n\n      // Clear the refreshRefId as we have a success\n      // this._refreshRefId = undefined;\n\n      // AMONIS: 11/10/2016: Added attempt autologin with newly aquired OAuth token\n      this.autoLogin();\n    };\n\n    /**\n     * ###securityTimeout\n     * A timeout to handle no response from the OAuth pulses\n     */\n    OAuth.prototype.securityTimeout = function(response) {\n      // Set the pulseTimeout to a flag, to show this branch was actioned\n      clearTimeout(this._pulseTimeout);\n\n      // The platform is likely offline, hence the timeout, so don't bother trying to refresh the token, this will likely fail as well.\n\n      // Notify that a new authToken was not aquired as we are offline\n      events.fire(\"security.plugin.timeout\", {});\n    };\n\n    /**\n     * ###internalSecurityAuthSuccess\n     *\n     * Pulse body should be in the format of: -\n        {\n            \"status\": {\n                \"code\": \"success\",\n                \"message\": \"admin.mld logged in.\"\n            },\n            \"authToken\": \"a494e249e97b892ddc7db2822ce9ac90ddef0dc8467bd3d76978d5ceec11924f\"\n        }\n     */\n    OAuth.prototype.internalSecurityAuthResponse = function(response) {\n      // Clear the timeout as we have a valid response\n      clearTimeout(this._pulseTimeout);\n      this._pulseTimeout = undefined;\n\n      // Check the status code and process\n      if (response.status.code === \"success\") {\n        log.debug(\"OAuth exchanged for: \" + response.authToken);\n\n        // Notify that a new authToken has been aquired\n        events.fire(\"security.plugin.success\", {\n          authToken: response.authToken\n        });\n      } else {\n        log.debug(\"OAuth could not be exchanged: \" + response.status.message);\n\n        // Handling V1. Remove the existing OAuth Token, and send back to the beginning. ( login )\n        Store.del(OAUTH_KEY);\n\n        // Notify that a new authToken has been aquired\n        events.fire(\"security.plugin.failure\", {});\n      }\n    };\n\n    /**\n     * ###exceptionHandler\n     * This has occurred because the AuthToken has become invalid.\n     */\n    OAuth.prototype.exceptionPumpcoUserAuthenticationValidationInvalidCredentials = function(exchange) {\n      var body = exchange.getPulseBody();\n      var header = exchange.getPulseHeader();\n\n      if (!this._hasToken) {\n        log.debug(\"OAUTH: CANCELLING exception as its not for me.\");\n        // Don't process as you don't have a token\n\n        return -1;\n      }\n\n      Store.log(JSON.stringify(exchange));\n\n      // Query the Kernel to see if the App is currently sleeping ( backgrounded )\n      var isPaused = this._parent.kernel.invoke(\"kernel.get.paused\", {});\n      if (isPaused === true) {\n        Store.log(\"Ignoring exception. I'm asleep...\");\n        return -1;\n      }\n\n      // Only process these requests if the App is awake\n      if (header.responseToClass === \"pumpCo.user.oauth2.login.request\") {\n\n        // Fire a synchronous event to the Security Service\n        events.fire(\"security.plugin.authtoken.invalid\", {}, {\n          sync: true\n        });\n\n        // AMONIS: 11/10/2016: Added refresh access token\n        this.refreshOAuthToken();\n      } else if (header.responseToClass === \"pumpCo.user.oauth2.refresh.request\") {\n        // AMONIS: 20/06/2018: Arrived here after a server re-fixture.\n        // Likely OAuth and Refresh tokes are invalid.\n        log.emergency( \"OAUTH: Login & Refresh fail. Re-direct to login.\" );\n\n        events.fire(\"security.plugin.autoauth.failure\", {}, {\n          sync: true\n        });\n      }\n    };\n\n    /**\n     * ### exceptionPumpcoUserAuthorisationValidationAccessDenied\n     * Usually triggered when an \"secure\" channel has a problem.\n     * This is either an XHR secureInout or Socket\n     * @param  {[type]} exchange\n     * @return {[type]}          [description]\n     */\n    OAuth.prototype.exceptionPumpcoUserAuthorisationValidationAccessDenied = function(exchange) {\n      var body = exchange.getPulseBody();\n      var header = exchange.getPulseHeader();\n\n      // We probably have an invalid connection here, socket or xhr, so we\n      // need to look at re-authenticating.\n      Store.log(JSON.stringify(exchange));\n\n      // Attempt to reauthenticate\n      this.autoLogin();\n    };\n\n    /**\n     * ### exceptionSystemInternal\n     * AMONIS: 20/06/2018: Not sure when this is received\n     * @param  {[type]} exchange\n     * @return {[type]}          [description]\n     */\n    OAuth.prototype.exceptionSystemInternal = function(exchange) {\n      var body = exchange.getPulseBody();\n      var header = exchange.getPulseHeader();\n\n      if (header.responseToClass === \"pumpCo.user.oauth2.refresh.request\") {\n        events.fire(\"security.plugin.autoauth.failure\", {}, {\n          sync: true\n        });\n      }\n    };\n\n    OAuth.prototype.exceptionPulseFailure = function(exchange) {\n      console.log(\"exceptionPulseFailure\")\n    };\n\n    /**\n     * ###clean\n     * Removes any local storage records for the plugin.\n     */\n    OAuth.prototype.clean = function(newOAuth) {\n      var existingOAuth = Store.get(OAUTH_KEY);\n      if (!existingOAuth)\n        existingOAuth = createCookie({});\n\n      if (newOAuth) {\n        // Merge\n        for (var key in newOAuth) {\n          // Update property only if a valid value exists\n          if (newOAuth[key] && newOAuth[key] !== \"\") {\n            existingOAuth[key] = newOAuth[key];\n          }\n        }\n\n        // Store the new OAuth token if provided\n        Store.set(OAUTH_KEY, existingOAuth);\n      } else {\n        Store.del(OAUTH_KEY);\n      }\n\n      // Log to persistent log the stored values.\n      Store.log(\"local-storage \" + JSON.stringify(existingOAuth));\n\n      // Update the internal flag to say if a token is found.\n      this.check();\n    };\n\n    /**\n     * ###check\n     * Part one. Determine if a valid oauth token exists.\n     */\n    OAuth.prototype.check = function() {\n      // Check for the oauth token\n      this._hasToken = Store.get(OAUTH_KEY);\n\n      // Check to see if a token was found at all\n      if (!this._hasToken)\n        return undefined;\n\n      // An OAuth token should be in the format of...\n      /*{\n          \"access_token\":\"72c86d4f-b87c-499b-9968-dd90db992855\",\n          \"refresh_token\":\"d42d0774-515e-4776-a421-1950e898f750\",\n          \"expires_in\":43199,\n          \"expires_at\":\"2016-01-19T01:20:13+0000\"\n      }*/\n      if (!this._hasToken[\"access_token\"] ||\n        !this._hasToken[\"refresh_token\"] ||\n        !this._hasToken[\"expires_in\"]) {\n\n        // blank out the token\n        this._hasToken = undefined;\n\n        // Probably have to use the refresh_token if the time stamp has passed\n      }\n\n      // AMONIS: 27/09/2016: TRELLO-S94#22: Moved the exception attachment to only occur in the check.\n      if (this._hasToken && this._addedHandlers === false) {\n        this._parent.addPulseHandler(\"exception.pumpCo.user.authentication.validation.invalidCredentials\", this.exceptionPumpcoUserAuthenticationValidationInvalidCredentials.bind(this));\n        this._parent.addPulseHandler(\"exception.pumpCo.user.authorisation.validation.accessDenied\", this.exceptionPumpcoUserAuthorisationValidationAccessDenied.bind(this));\n        this._parent.addPulseHandler(\"exception.pulse.failure\", this.exceptionPulseFailure.bind(this));\n        this._parent.addPulseHandler(\"exception.system.internal\", this.exceptionSystemInternal.bind(this));\n\n        this._addedHandlers = true;\n      }\n\n      // return the result for good measure\n      return this._hasToken;\n    };\n\n    /**\n     * ###autoLogin\n     * Implements the Security Plugin Interface.\n     */\n    OAuth.prototype.autoLogin = function() {\n      // Set the oauth / auth token ( this sets the appropriate XHR header etc. )\n      var body = {\n        \"oauth\": this._hasToken\n      };\n\n      // Check the OAuth token is still valid ( this just gets the latest values )\n      this.check();\n\n      // Note: authtoken needs to be lowercase for this function call.\n\n      // Pulse to replace the oauth token.\n      var authentication = \"Bearer \" + this._hasToken[\"access_token\"];\n      log.debug(authentication);\n\n      // Set a pulse timeout for offline pump\n      this._pulseTimeout = setTimeout(this.securityTimeout.bind(this), 2000);\n\n      // Log the OAuth Request to static logging\n      Store.log(\"pumpCo.user.oauth2.login.request { authentication:\" + authentication + \"}\");\n\n      // Pulse to get a valid auth token\n      this._parent.pulse(\"pumpCo.user.oauth2.login.request\", {\n        \"authentication\": authentication\n      });\n    };\n\n    return OAuth;\n  }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/core/security/oauth.js?");

/***/ }),

/***/ "./src/core/security/rememberme.js":
/*!*****************************************!*\
  !*** ./src/core/security/rememberme.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0\r\n * Copyright(c) 2014 Pumpco Inc.\r\n\r\n\r\n */\r\n\r\n/**\r\n * @class RememberMe Plugin\r\n\r\n * @author  Andy Monis\r\n * @date    13-01-2016\r\n\r\n * 1) Plugin should check for its own properties ( cookie, local storage etc. )\r\n * 2) Plugin should return ( pulse ) that it has a valid authentication option\r\n * 3) Login Cog pulses to use auth mechanism ( if desired )\r\n\r\n * Process\r\n * Security Service \"asks\" plugin to check for an existing token ( RememberMe.prototype.check  )\r\n * If a token is found the Security Service \"asks\" to perform an \"autoLogin\" ( RememberMe.prototype.autoLogin )\r\n * The Plugin fires an RememberMe request ( RememberMe.prototype.attempt )\r\n * The AutoLogin \"removes\" the \"access_token\" from the cookie, once it has been used\r\n * The Plugin receives a response to ( RememberMe.prototype.attemptCallback )\r\n * The plugin triggers \"security.plugin.invalidCredentials\" if the login fails.\r\n * On success the Plugin triggers \"security.plugin.response\", which inturn trigger a refresh request for the RememberMe Token\r\n which is then stored ( importantly with a new \"access_token\" ), which can be used on next login.\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! knockout */ \"knockout\"), __webpack_require__(/*! jquery */ \"jquery\"), __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! mixins/endpoint */ \"./src/mixins/endpoint.js\"), __webpack_require__(/*! utils/store */ \"./src/utils/store.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko, jquery, events, log, Endpoint, Store ){\r\n\r\n        // Key passed back by PH Appflows\r\n        var REMEMBER_ME_TOKEN = \"rememberMeToken\";\r\n\r\n    \t/**\r\n\t\t * ###createCookie\r\n\t\t * Creates a standard Cookie\r\n\t\t */\r\n\t\tfunction createCookie( json ){\r\n            var cookie = {};\r\n            cookie[ REMEMBER_ME_KEY ] = json[ REMEMBER_ME_TOKEN ];\r\n            return cookie;\r\n\t\t};\r\n\r\n        /**\r\n         * ###encode\r\n         * A quick encryption method to create a Basic Auth header\r\n         */\r\n        function encode( user, pass ){\r\n            var tok = user + ':' + pass;\r\n            var hash = btoa( tok );\r\n            return \"Basic \" + hash;\r\n        };\r\n\r\n        var BASE_KEY  = \"security.\";\r\n        var REMEMBER_ME_KEY = BASE_KEY + \"rememberme\";\r\n\r\n        var SECURITY_TIMEOUT = 1000;\r\n        var SECURITY_TIMEOUT_ACTIONED = \"timeout_actioned\";\r\n\r\n        /**\r\n         * ## App\r\n         * The App service manages the Apps loaded into the platform.\r\n         * @param {object} config Object containing all options '{ kernel, model, pump }' as provided by the OS.\r\n         */\r\n        function RememberMe ( config ) {\r\n            // @property RememberMe {string} name of the plugin\r\n            this.name       = \"rememberme\";\r\n\r\n            // @private _hasToken {boolean} set to either true or false if a valid auth token for this plugin is found\r\n            this._hasToken  = false;\r\n\r\n            // @private _parent {object} a reference to the parent security service\r\n            this._parent = config.parent;\r\n\r\n            // @private _pulseTimeout used to handle if no response from pulse\r\n            this._pulseTimeout = undefined;\r\n\r\n            // Register the Pulses that the Plugin Sends / Recieves\r\n            this._parent.addEndpointConfig( { \"className\":\"pumpCo.user.rememberme.login.request\", \"targetName\":\"out\" } );\r\n            this._parent.addEndpointConfig( { \"className\":\"pumpCo.user.rememberme.login.response\", \"targetName\":\"in\" } );\r\n\r\n            this._parent.addEndpointConfig( { \"className\":\"exception.pumpCo.user.authentication.validation.invalidCredentials\", \"targetName\":\"in\" } );\r\n\r\n            events.on( \"security.plugin.rememberme.response\",  this.refreshRememberMeToken, this );\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        RememberMe.prototype = {};\r\n\r\n        /**\r\n         * ###registerPulseHandlers\r\n         * Implements the Security Plugin Interface.\r\n         */\r\n        RememberMe.prototype.registerPulseHandlers = function(){\r\n            // Valid RememberMe Response\r\n            this._parent.addPulseHandler( \"pumpCo.user.rememberme.login.response\", this.loginResponse.bind( this ) );\r\n\r\n            // AMONIS: 27/09/2016: Moved to register only on demand in check()\r\n            // this._parent.addPulseHandler( \"exception.pumpCo.user.authentication.validation.invalidCredentials\", this.exceptionHandler.bind( this ) );\r\n        };\r\n        //pumpCo.user.RememberMe2.refresh.request\r\n\r\n        /**\r\n         * ###postAuthSuccess\r\n         * @params {json} json: The params used to invoke the authentication\r\n         * When RememberMe is used, an extra param ( rememberMeToken ) will be provided. This should be stored\r\n         * in a cookie for future use\r\n         * {\r\n         *      \"username\":\"andy.monis\",\r\n         *      \"authToken\":\"52f67e3e00a34be8ea4aab04228f25207d1e09c1551b6abe0b4b24a32c42847e\",\r\n         *      \"rememberMeToken\":\"cEVnUitEUi9RNkhYUUZmT0JVc3krUT09Oml3Y0JFRStmZzlEdDhRN3c5RWNFbFE9PQ\"\r\n         * }\r\n         */\r\n        RememberMe.prototype.postAuthSuccess = function( json ){\r\n            if( json[ REMEMBER_ME_TOKEN ] ){\r\n                var cookie = createCookie( json );\r\n                this.clean( cookie );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###attempt\r\n         * Attempts to authenticate using the params\r\n         * @params {\r\n                grant_type: \"password\",\r\n                client_id:  RememberMeId,        // RememberMe App id\r\n                client_pw:  RememberMePw,        // RememberMe App pw\r\n                scope:      \"pulse\",\r\n                username:   username,       // This is the users username\r\n                password:   password        // This is the users password\r\n            }\r\n         */\r\n        RememberMe.prototype.attempt = function( params ){\r\n            // REMEMBERME does NOT DO the authentication.\r\n        };\r\n\r\n        /**\r\n         * ###loginResponse\r\n         {\r\n            \"authToken\":\"59d33760ff2197810a6a5114ec6d55693b2ad5979a011e367f93d0bab051a9d0\",\r\n            \"username\":\"andy.monis\",\r\n            \"rememberMeToken\":\"UVdybHh5TnVRRjl4Tnh5VkxBbTVPUT09OittSGhpc2pZbU4vRzNPNG1PL21VSnc9PQ\",\r\n            \"status\":{\"code\":\"success\"}\r\n        }\r\n         */\r\n        RememberMe.prototype.loginResponse = function( exchange ){\r\n            var body = exchange.getPulseBody();\r\n\r\n            // Trigger refresh of RememberMe token\r\n            events.fire( \"security.plugin.rememberme.response\", {} );\r\n\r\n            this.internalSecurityAuthResponse.call( this, body );\r\n        };\r\n\r\n        /**\r\n         * ###refreshRememberMeToken\r\n         * local storage example\r\n         * { \"access_token\":\"312ef941-a437-4824-884e-bdfb70f690c7\",\r\n             \"refresh_token\":\"9318e664-eb19-448b-8e3f-c394ae0fed06\",\r\n             \"expires_in\":43199,\"expires_at\":\"2016-02-25T21:15:22+0000\"\r\n           }\r\n         */\r\n        RememberMe.prototype.refreshRememberMeToken = function(){};\r\n\r\n        /**\r\n         * ###securityTimeout\r\n         * A timeout to handle no response from the RememberMe pulses\r\n         */\r\n        RememberMe.prototype.securityTimeout = function( response ){\r\n            // Set the pulseTimeout to a flag, to show this branch was actioned\r\n            clearTimeout( this._pulseTimeout );\r\n            this._pulseTimeout = SECURITY_TIMEOUT_ACTIONED;\r\n\r\n            // The platform is likely offline, hence the timeout, so don't bother trying to refresh the token, this will likely fail as well.\r\n\r\n            // Notify that a new authToken was not aquired as we are offline\r\n            events.fire( \"security.plugin.timeout\", {} );\r\n        };\r\n\r\n        /**\r\n         * ###internalSecurityAuthSuccess\r\n         *\r\n         * Pulse body should be in the format of: -\r\n            {\r\n                \"authToken\":\"114b51db836c3cc3645dad23b4fa93c1f2c428817995229eecd46dd8d30eb189\",\r\n                \"username\":\"andy.monis\",\r\n                \"rememberMeToken\":\"OXNJSmpZL1dvKytQa3gvZXlyMUprdz09OmFtWElyMGdySXdObHpEU3BiUndhTUE9PQ\",\r\n                \"status\":{\"code\":\"success\"}\r\n            }\r\n         */\r\n        RememberMe.prototype.internalSecurityAuthResponse = function( response ){\r\n            // Check that a Security Timeout hasn't occurred already\r\n            if( this._pulseTimeout && this._pulseTimeout === SECURITY_TIMEOUT_ACTIONED ){\r\n                log.debug( \"SECURITY: Pulse timed out on auth request.\" );\r\n                return -1;\r\n            }\r\n\r\n            // Clear the timeout as we have a valid response\r\n            clearTimeout( this._pulseTimeout );\r\n            this._pulseTimeout = undefined;\r\n\r\n            // Check the status code and process\r\n            if( response.status.code === \"success\" ){\r\n                log.debug( \"RememberMe exchanged for: \" + response.authToken );\r\n\r\n                var cookie = createCookie( response );\r\n                this.clean( cookie );\r\n\r\n                // Notify that a new authToken has been aquired\r\n                events.fire( \"security.plugin.success\", { authToken:response.authToken } );\r\n            } else {\r\n                log.debug( \"RememberMe could not be exchanged: \" + response.status.message );\r\n\r\n                // Handling V1. Remove the existing RememberMe Token, and send back to the beginning. ( login )\r\n                Store.del( REMEMBER_ME_KEY );\r\n\r\n                // Notify that a new authToken has been aquired\r\n                events.fire( \"security.plugin.failure\", {} );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###exceptionHandler\r\n         * This has occurred because the AuthToken has become invalid.\r\n         */\r\n        RememberMe.prototype.exceptionHandler = function( exchange ){\r\n            var body    = exchange.getPulseBody();\r\n            var header  = exchange.getPulseHeader();\r\n\r\n            log.debug( \"REMEMBERME: exception.pumpCo.user.authentication.validation.invalidCredentials\" );\r\n\r\n            log.debug( \"++body++\" );\r\n            log.debug( JSON.stringify( body ) );\r\n            log.debug( \"++this++\" );\r\n            log.debug( JSON.stringify( this._hasToken ) );\r\n\r\n            if( !this._hasToken ){\r\n                log.debug( \"REMEMBERME: CANCELLING exception as its not for me.\" );\r\n                // Don't process as you don't have a token\r\n\r\n                return -1;\r\n            }\r\n\r\n            if( header.pulseClass === \"exception.pumpCo.user.authentication.validation.invalidCredentials\" ){\r\n\r\n                // console.log( \"RememberMe.prototype.exceptionHandler\" );\r\n\r\n                if( this._hasToken && this._hasToken[ REMEMBER_ME_KEY ] ){\r\n\r\n                    // Fire a synchronous event to the Security Service\r\n                    events.fire( \"security.plugin.authtoken.invalid\", {}, { sync:true } );\r\n\r\n                    this.autoLogin();\r\n                } else {\r\n                    // Send an auto-auth failure.\r\n\r\n                    // This is usually caused by an invalid / out-of-date RememberMe token\r\n                    events.fire( \"security.plugin.autoauth.failure\", {} );\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###clean\r\n         * Removes any local storage records for the plugin.\r\n         */\r\n        RememberMe.prototype.clean = function( newCookie ){\r\n            // Remove any existing tokens\r\n\r\n            var existingCookie = Store.get( REMEMBER_ME_KEY );\r\n            if( !existingCookie )\r\n            \texistingCookie = createCookie({});\r\n\r\n            if( newCookie ){\r\n            \t// Merge\r\n            \tfor( var key in newCookie ){\r\n                    // Update property only if a valid value exists\r\n                    if( newCookie[ key ] && newCookie[ key ] !== \"\" ){\r\n                \t\texistingCookie[ key ] = newCookie[ key ];\r\n                    }\r\n            \t}\r\n\r\n                // Store the new RememberMe token if provided\r\n                Store.set( REMEMBER_ME_KEY, existingCookie );\r\n            } else {\r\n            \tStore.del( REMEMBER_ME_KEY );\r\n            }\r\n\r\n            // Update the internal flag to say if a token is found.\r\n            this.check();\r\n        };\r\n\r\n        /**\r\n         * ###check\r\n         * Part one. Determine if a valid RememberMe token exists.\r\n         */\r\n        RememberMe.prototype.check = function(){\r\n            // Check for the RememberMe token\r\n            this._hasToken = Store.get( REMEMBER_ME_KEY );\r\n\r\n            // Check to see if a token was found at all\r\n            if( !this._hasToken )\r\n                return undefined;\r\n\r\n            // An RememberMe token should be in the format of...\r\n            /*{\r\n                \"rememberme_token\":\"72c86d4f-b87c-499b-9968-dd90db992855\"\r\n            }*/\r\n            if( !this._hasToken[ REMEMBER_ME_KEY ] ){\r\n\r\n                // blank out the token\r\n                this._hasToken = undefined;\r\n            }\r\n\r\n            // AMONIS: 27/09/2016: TRELLO-S94#22: Moved the exception attachment to only occur in the check.\r\n            if( this._hasToken ){\r\n                this._parent.addPulseHandler( \"exception.pumpCo.user.authentication.validation.invalidCredentials\", this.exceptionHandler.bind( this ) );\r\n            }\r\n\r\n            // return the result for good measure\r\n            return this._hasToken;\r\n        };\r\n\r\n        /**\r\n         * ###autoLogin\r\n         * Implements the Security Plugin Interface.\r\n            \"pulseHeader\": {\r\n               \"mep\": \"inout\",\r\n               \"pulseId\": \"56ec14e652aa262efa58ea0e\",\r\n               \"referenceId\": \"56ec14e652aa262efa58ea0d\",\r\n               \"pulseClass\": \"pumpCo.user.rememberme.login.request\",\r\n               \"pulseType\": \"command\",\r\n               \"pulseResponseTimeout\":300000,\r\n\r\n               \"timestamp\": \"2016-03-18T14:47:02.949\"\r\n           },\r\n           \"pulseBody\": {\r\n                \"token\": \"VTgxa20xd3FjTFM1dngwRk5PT3EvQT09OlVEbkNZb3huMVdMZEF0NHNOY1NJenc9PQ\"\r\n            }\r\n         */\r\n        RememberMe.prototype.autoLogin = function(){\r\n\r\n            var token = Store.get( REMEMBER_ME_KEY );\r\n\r\n            // Remove the access_token just used.\r\n            delete this._hasToken[ REMEMBER_ME_KEY ];\r\n            Store.set( REMEMBER_ME_KEY, this._hasToken );\r\n\r\n            // Set a pulse timeout for offline pump\r\n            // this._pulseTimeout = setTimeout( this.securityTimeout.bind( this ), SECURITY_TIMEOUT );\r\n\r\n            // Pulse to get a valid auth token\r\n            this._parent.pulse( \"pumpCo.user.rememberme.login.request\", {\r\n                \"token\": token[ REMEMBER_ME_KEY ]\r\n            } );\r\n\r\n        };\r\n\r\n        return RememberMe;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/core/security/rememberme.js?");

/***/ }),

/***/ "./src/live.js":
/*!*********************!*\
  !*** ./src/live.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n  .\r\n */\r\n\r\n/**\r\n * # live\r\n * ## *operating system start point*\r\n *\r\n * ### **url param** roadieUrl\r\n * Allows a User, Place, Space to be directly loaded, from an external url source, in the form of...\r\n ```js\r\n\t\t\t\t\t\t \t\t  \tUser\t\t\t\t\tPlace\t\t\t\t\tSpace\r\n \"?roadieUrl=roadie://visit/visit/0036ebcb703dc21700000001\"\r\n \"?roadieUrl=roadie://visit/space/05e0f67f000117750d7cfb4d/c26c05e8002268ff00011775/4bc641c75e35baa500011775\"\r\n ```\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t\t__webpack_require__(/*! aos.config */ \"./src/aos.config.js\"),\r\n\t\t__webpack_require__(/*! aos.utils */ \"./src/aos.utils.js\"),\r\n\t\t__webpack_require__(/*! utils/params */ \"./src/utils/params.js\"),\r\n\t\t__webpack_require__(/*! text!templates/main.html */ \"./node_modules/text-loader/index.js!./views/main.html\"),\r\n\t\t// \"json!lang/lang.json\", // AMONIS: 2018: RequireJS lang.json import\r\n\t\t__webpack_require__(/*! lang/lang.json */ \"./lang/lang.json\"), \t\t\t// AMONIS: 2018: Webpack lang.json import\r\n\t\t// Import the Libraries\r\n\t\t__webpack_require__(/*! knockout */ \"knockout\"),\r\n\t\t__webpack_require__(/*! jquery */ \"jquery\"),\r\n\t\t__webpack_require__(/*! datejs */ \"./lib/datejs/date-en.js\"),\r\n\t\t__webpack_require__(/*! the */ \"the\"),\r\n\t\t__webpack_require__(/*! phil */ \"phil\"),\r\n\t\t// \"hydra\",\r\n\t\t// Import the OS Source\r\n\t\t__webpack_require__(/*! utils/log */ \"./src/utils/log.js\"),\r\n\t\t__webpack_require__(/*! utils/history */ \"./src/utils/history.js\"),\r\n\t\t__webpack_require__(/*! utils/store */ \"./src/utils/store.js\"),\r\n\t\t__webpack_require__(/*! core/events */ \"./src/core/events.js\"),\r\n\t\t__webpack_require__(/*! core/kernel */ \"./src/core/kernel.js\"),\r\n\t\t__webpack_require__(/*! services/drive */ \"./src/services/drive.js\"),\r\n\t\t__webpack_require__(/*! services/contact */ \"./src/services/contact.js\"),\r\n\t\t__webpack_require__(/*! services/site */ \"./src/services/site.js\"),\r\n\t\t__webpack_require__(/*! services/place */ \"./src/services/place.js\"),\r\n\t\t__webpack_require__(/*! services/space */ \"./src/services/space.js\"),\r\n\t\t__webpack_require__(/*! services/cog */ \"./src/services/cog.js\"),\r\n\t\t__webpack_require__(/*! services/roadie */ \"./src/services/roadie.js\"),\r\n\t\t__webpack_require__(/*! services/console */ \"./src/services/console.js\"),\r\n\t\t__webpack_require__(/*! services/user */ \"./src/services/user.js\"),\r\n\t\t__webpack_require__(/*! services/header */ \"./src/services/header.js\"),\r\n\t\t__webpack_require__(/*! services/toast */ \"./src/services/toast.js\"),\r\n\t\t__webpack_require__(/*! services/card */ \"./src/services/card.js\"),\r\n\t\t__webpack_require__(/*! services/clipboard */ \"./src/services/clipboard.js\"),\r\n\t\t__webpack_require__(/*! services/environment */ \"./src/services/environment.js\"),\r\n\t\t// \"iNoBounce\",\r\n\t\t// Import additional libraries that don't adhere to commonjs\r\n\t\t__webpack_require__(/*! services/app */ \"./src/services/app.js\"),\t\t// AMONIS: 10/02/2017: referenced as an Abstract for external services to extend ( this just pust it in the build file really )\r\n\t\t__webpack_require__(/*! apps/appbuilder/builder */ \"./src/apps/appbuilder/builder.js\"),\r\n\r\n\t\t__webpack_require__(/*! bindings/body */ \"./src/bindings/body.js\"),\r\n\t\t// AMONIS: 05/12/2016: These two jquery plugins are currently referenced so that they are built into PumpfaceOs\r\n\t\t__webpack_require__(/*! polyfils/es6-array */ \"./lib/polyfils/es6-array.js\"),\r\n\t\t__webpack_require__(/*! polyfils/es6-collections */ \"./lib/polyfils/es6-collections.js\"),\r\n\t\t__webpack_require__(/*! polyfils/es6-assign */ \"./lib/polyfils/es6-assign.js\"),\r\n\t\t__webpack_require__(/*! cog/my */ \"./src/cog/my.js\")\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = (function( AOSConfig, AOSUtils, Params, html, LangJson, ko, jquery, DateJs, The, Phil, /*Hydra,*/\r\n\t\t\t  Log, Hist, Store, events, Kernel,\r\n\t\t\t  Drive, Contact, Site, Place, Space, Cog, Roadie, ConsoleService, User, Header, Toast, Card, Clipboard, Environment\r\n\t\t\t)\r\n\t\t\t  // iNoBounce )\r\n\t{\r\n\t\t/*\r\n\t\t\tAMONIS: 23/04/2018: Refactored to allow a global export as a \"library\"\r\n\t\t\tThis allows Weback to call into this module and existing \"RequireJS\"\r\n\t\t\tto work as well.\r\n\t\t */\r\n\t\tfunction main(){\r\n\t\t\t__mark( \"boot\" );\r\n\r\n\t\t\t// PARAMS: process all dynamic url / config switches\r\n\t\t\tvar switches = AOSUtils.queryAppParams();\r\n\r\n\t\t\t// AMONIS: 23/05/2018: Implementation of basic ServiceWorker to cache site\r\n\t\t\t// BROWSER ENGINE: Setup service workers\r\n\t\t\tAOSUtils.serviceWorkers();\r\n\r\n\t\t\t// HTML: Scaffold ( Inject body html as soon as possible )\r\n\t\t\tAOSUtils.basicAppStyles( html, switches.appParams );\r\n\r\n\t\t\t// LOG:\r\n\t\t\tAOSUtils.configureLogging( switches.logConfig );\r\n\r\n\t\t\t// PHIL: Phil template location. This is hopefully moving to legacy status,\r\n\t\t\t// as I move towards Components, which won't require the templates to be\r\n\t\t\t// separate, which is a build pain point.\r\n\t\t\tAOSUtils.configurePhil( switches.location );\r\n\r\n\t\t\t/**\r\n\t\t     * @event kernel.started\r\n\t\t     * \"kernel-started\" which is only sent once, when the OS is ready to use.\r\n\t\t     */\r\n\t\t\tevents.on( \"kernel.started\", function( params ){\r\n\r\n\t\t\t\t// Test for the existence of siteId or siteName in the global page params ( index.html )\r\n\t\t\t\tvar _id \t= window.siteId || undefined;\r\n\t\t\t\tvar _name \t= window.siteName || undefined;\r\n\r\n\t\t\t\tvar msg = __markEnd( \"boot\" )\r\n\t\t\t\tthe.log.emergency( msg );\r\n\t\t\t\t// Persist log message\r\n\t\t\t\tStore.log( msg );\r\n\r\n\t\t\t\t// Mark the loading of the Site ( site pulse )\r\n\t\t\t\t__mark( _id );\r\n\r\n\t\t\t\t//AMONIS: 18/09/2015: Look for site by Id or Name ( prefer Id )\r\n\t\t\t\tevents.fire( \"site.addSystemSite\", {\r\n\t\t\t\t\t\"id\": \t_id,\r\n\t\t\t\t\t\"app\": _name\r\n\t\t\t\t} );\r\n\r\n\t\t\t}, { \"once\":true } ) ;\r\n\r\n\t\t\t/*\r\n\t\t\t \tKERNEL\r\n\t\t\t */\r\n\t\t\ttry {\r\n\t\t\t\tnew Kernel( {\r\n\t\t\t\t\t\"debug\"\t\t: switches.debugParams || false,\r\n\t\t\t\t\t\"location\"\t: switches.location,\r\n\t\t\t\t\t\"lang\" \t\t: LangJson,\t\t\t\t// AMONIS: 14/03/16: Pass in the Core Lang file for all services ( expects JSON formatted text file )\r\n\t\t\t\t\t\"platform\"\t: switches.platform,\r\n\t\t\t\t\t\"socket\"\t: switches.useSocket,\r\n\t\t\t\t\t\"runtime\"   : { \"wrapped\":switches.wrappedParams, \"minimal\":switches.minimalParams, \"pwa\":switches.pwaParams },\r\n\t\t\t\t\t\"services\"\t: [\r\n\t\t\t\t\t\t{ \"cls\":ConsoleService, \"params\":{ \"consoleParams\":switches.consoleParams } },\r\n\t\t\t\t\t\t{ \"cls\":Drive, \t\t\t\t\t\"params\":{ \"driveParams\":switches.driveParams, \"location\":switches.location, \"build\":switches.buildParams } },\r\n\t\t\t\t\t\t{ \"cls\":Contact,\t\t\t\t\"params\":{} },\r\n\t\t\t\t\t\t{ \"cls\":Site, \t\t\t\t\t\"params\":{ \"appParams\":switches.appParams } },\r\n\t\t\t\t\t\t{ \"cls\":Place, \t\t\t\t\t\"params\":{ \"launchParams\":switches.launchParams, \"roadieParams\":switches.roadieParams} },\r\n\t\t\t\t\t\t{ \"cls\":Space, \t\t\t\t\t\"params\":{} },\r\n\t\t\t\t\t\t{ \"cls\":Cog, \t\t\t\t\t\t\"params\":{ \"cogDebug\":switches.cogDebug, \"cogParams\":switches.cogParams, \"location\":switches.location } },\r\n\t\t\t\t\t\t{ \"cls\":Roadie, \t\t\t\t\"params\":{ \"platform\":switches.platform } },\r\n\t\t\t\t\t\t{ \"cls\":User, \t\t\t\t\t\"params\":{} },\r\n\t\t\t\t\t\t{ \"cls\":Header, \t\t\t\t\"params\":{ \"appParams\":switches.appParams } },\r\n\t\t\t\t\t\t{ \"cls\":Toast, \t\t\t\t\t\"params\":{} },\r\n\t\t\t\t\t\t{ \"cls\":Card, \t\t\t\t\t\"params\":{} },\r\n\t\t\t\t\t\t{ \"cls\":Clipboard,\t\t\t\"params\":{} },\r\n\t\t\t\t\t\t{ \"cls\":Environment, \t\t\"params\":{} }\r\n\t\t\t\t\t]\r\n\t\t\t\t} ).start();\r\n\t\t\t} catch ( ex ){\r\n\t\t\t\tLog.emergency( \"EXCEPTION: \" + ex.message );\r\n\t\t\t\tLog.emergency( ex.stack.toString() );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn main;\r\n\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/live.js?");

/***/ }),

/***/ "./src/mixins/endpoint.js":
/*!********************************!*\
  !*** ./src/mixins/endpoint.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n    Events\r\n    An events controller for passing information between processing in the system.\r\n    Aimed at complex Aysnchronous events, not DOM events.\r\n    @author Andy Monis\r\n*/\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n        __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"),\r\n        __webpack_require__(/*! core/io/shims/service */ \"./src/core/io/shims/service.js\")\r\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( log, ServiceShim ){\r\n        // This runs before Main has been called.\r\n        log.debug( \"mixins/endpoint\" );\r\n\r\n        /**\r\n         * Constructor\r\n         */\r\n        function Endpoint ( params ) {\r\n            // Expect the Pump reference to be passed through.\r\n            this.pump = params.pump;\r\n\r\n            this.handlers = {};\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        Endpoint.prototype = {};\r\n\r\n        Endpoint.prototype.addPulseHandler = function( name, fn ){\r\n            this.handlers[ name ] = fn;\r\n        };\r\n\r\n        Endpoint.prototype.getPulseHandler = function( name ){\r\n            return this.handlers[ name ];\r\n        };\r\n\r\n        Endpoint.prototype.initEndpoint = function( name, routes ){\r\n            log.debug(this, \"Service Mixin init()\");\r\n\r\n            var consume = [];\r\n            var produce = [];\r\n\r\n            for (var i = 0; i < routes.length; i++) {\r\n                var route = routes[ i ];\r\n                if( route.targetName === \"PumpHouse\" ){\r\n                    produce.push( { cls:route.className, list:\"white\" } );\r\n                } else {\r\n                    consume.push( { cls:route.className, list:\"white\" } );\r\n                }\r\n                //the.pump.addRoute(routes[i]);\r\n                log.debug(this, \"Added whitelisting of [\" + route.className + \"] to Target [\" + route.targetName + \"] \");\r\n            }\r\n\r\n            // Create the Endpoint Shim with the correct endpoint Black / White listing ( capabilities )\r\n            // AMONIS: 11/05/2016: Updated to RequireJs implementation\r\n            // this.endPoint = pumpco.core.io.camelet.shims.Service( {\r\n            this.endPoint = new ServiceShim( {\r\n                name:       name,\r\n                pump:       this.pump,\r\n                consume:    consume,\r\n                produce:    produce\r\n            } );\r\n\r\n            // Setup the generic callback handler\r\n            this.endPoint.onPulsed( this.pulsed, this );\r\n            log.debug(this, \"Created generic Callback Handle for [\" + name + \"]\");\r\n        };\r\n\r\n        /**\r\n         * ###pulse\r\n         */\r\n        Endpoint.prototype.pulse = function ( ns, body, refId, compId, reqId ){\r\n            log.debug( \"Endpoint.pulse(\" + ns + \")\" );\r\n\r\n            log.debug( \"Endpoint.pulse(): exchangeFacade= \" + pumpco.core.jsbean.ExchangeFacade );\r\n\r\n            var exchange = pumpco.core.jsbean.ExchangeFacade.getInOutCommand({\r\n                ns: ns,             // namespace: The pulse name\r\n                refId: refId,       // referenceId: Used to specify a referenceId, so a cog can match a request to a response, if required.\r\n                body: body,         // body: Used to specify the main body content\r\n                compId: compId,     // componentId: Used to say which component requested this\r\n                reqId: reqId        // requestingComponentId: Used to mimic a response from PumpHouse\r\n            });\r\n\r\n            log.debug( \"Endpoint.pulse(): Exchange= \" + exchange );\r\n\r\n            this.endPoint.pulse( exchange );\r\n        };\r\n\r\n        /**\r\n         * ###pulse\r\n         */\r\n        Endpoint.prototype.pulseTracked = function ( ns, body, refId, compId, reqId ){\r\n            log.debug( \"Endpoint.pulse(\" + ns + \")\" );\r\n\r\n            log.debug( \"Endpoint.pulse(): exchangeFacade= \" + pumpco.core.jsbean.ExchangeFacade );\r\n\r\n            var exchange = pumpco.core.jsbean.ExchangeFacade.getInOutCommand({\r\n                ns: ns,             // namespace: The pulse name\r\n                refId: refId,       // referenceId: Used to specify a referenceId, so a cog can match a request to a response, if required.\r\n                body: body,         // body: Used to specify the main body content\r\n                compId: compId,     // componentId: Used to say which component requested this\r\n                reqId: reqId,       // requestingComponentId: Used to mimic a response from PumpHouse,\r\n                tracked: true       // tracked: Flag to indicate that this pulse should be tracked by the PulseRegistry\r\n            });\r\n\r\n            log.debug( \"Endpoint.pulse(): Exchange= \" + exchange );\r\n\r\n            this.endPoint.pulse( exchange );\r\n        };\r\n\r\n        // Endpoint.prototype.getPulseClass = function( pulse ){\r\n        //     return pulse.pulseHeader.pulseClass;\r\n        // };\r\n\r\n        Endpoint.prototype.pulsed = function ( exchange ) {\r\n            // Get the Pulse Class from the exchange\r\n            var className = exchange.getPulseClass();\r\n\r\n            log.debug( \"Endpoint.pulsed(\" + className + \")\" );\r\n\r\n            // Get a Pulse Handler for this to allow mapping of classes to specific handlers\r\n            var handler = this.getPulseHandler( className );\r\n\r\n            if (handler) {\r\n                handler.call( this, exchange );\r\n            } else {\r\n                the.log.debug(\"No handler found for class [\" + className + \"]\");\r\n            }\r\n        };\r\n\r\n        // Return the Endpoint function\r\n        return Endpoint;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/mixins/endpoint.js?");

/***/ }),

/***/ "./src/mixins/map.js":
/*!***************************!*\
  !*** ./src/mixins/map.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n    Mapping\r\n    Maps JSON data onto a model, preserving Observables.\r\n    Expected for use with Knockout, but does not require it.\r\n    @author Andy Monis\r\n*/\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ){\r\n\r\n        return {\r\n\r\n            \"clone\": function( obj ){\r\n                var clone = {};\r\n\r\n                for( var key in obj ){\r\n                    clone[ key ] = obj[ key ];\r\n                }\r\n\r\n                return clone;\r\n            },\r\n\r\n            /**\r\n             * ###setObjProp\r\n             * Assign a value ( from the spec ), but map it to the \"desired\" property type.\r\n             * If the desired type and the input type match, there is no issue, but if there is a difference,\r\n             * then attempt to map.\r\n             * e.g. desired = [], input = undefined, \"string\" or [ \"string\", \"string\" ];\r\n             * If the input is a string or undefined, then it should be mapped to [] or [ \"string\" ]\r\n             */\r\n            \"setObjProp\": function( to, from, key ){\r\n                var _typeReference  = typeof to[ key ];\r\n                var _typeValue      = typeof from[ key ];\r\n\r\n                var _instanceReference = to[ key ] instanceof Array;\r\n\r\n                if( _typeValue === _typeReference ){\r\n                    to[ key ] = from[ key ];\r\n                } else {\r\n                    if( _typeReference === \"object\" && _instanceReference ){\r\n                        // Array\r\n                        to[ key ].push( from[ key ] );\r\n                    } else {\r\n                        // Primitive\r\n                        to[ key ] = from[ key ].toString();\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @method fromJS\r\n             * Maps JSON data onto an object, preserving observables.\r\n             */\r\n            \"fromJS\": function( obj, spec ){\r\n                // Handle Array using a template\r\n                if( the.isArray( obj ) ){\r\n                    for( var i=0; i<spec.length; i++ ){\r\n                        // The template row is assumed to be the first row.\r\n                        var tempItem    = this.clone( obj[ 0 ] );\r\n                        var specItem    = spec[ i ];\r\n\r\n                        var value = this.fromJS( tempItem, specItem );\r\n                        if( typeof obj === \"function\" )\r\n                            obj().push( value );\r\n                        else\r\n                            obj.push( value );\r\n                    }\r\n\r\n                    // remove the Template row\r\n                    if( typeof obj === \"function\" )\r\n                        obj().shift();\r\n                    else\r\n                        obj.shift();\r\n\r\n                } else {\r\n                    for( var key in obj ){\r\n                        if( spec[ key ] ){\r\n                            if( typeof spec[ key ] === \"object\" ){\r\n                                obj[ key ] = this.fromJS( obj[ key ], spec[ key ] );\r\n                            } else {\r\n                                if( typeof( obj[ key ] ) === \"function\" ){\r\n                                    obj[ key ]( spec[ key ] );\r\n                                } else {\r\n                                    // obj[ key ] = spec[ key ];\r\n                                    this.setObjProp( obj, spec, key );\r\n                                }\r\n                            }\r\n                        }\r\n                        // Shortcut * to allow copying of all children\r\n                        if( key === \"*\" ){\r\n                            if( typeof( obj ) === \"function\" )\r\n                                obj( spec );\r\n                            else\r\n                                obj = spec;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return obj;\r\n            }\r\n        }\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/mixins/map.js?");

/***/ }),

/***/ "./src/services/abstract.js":
/*!**********************************!*\
  !*** ./src/services/abstract.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//\r\n// Pump API and Application 2.0.0.\r\n//\r\n// Copyright(c) 2015 Pumpco Inc.\r\n//\r\n\r\n// # services.Abstract\r\n// ## *An Abstract Services to be extended into Concrete services*\r\n// Performs som ebasic tasks to construct a standard PFOS service.\r\n// Stores references to \"kernel\", \"model\", \"pump\" for reference\r\n\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! knockout */ \"knockout\"), __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko, events, log ){\r\n\r\n        /**\r\n         * ## Abstract\r\n         * A base object for constructing PFOS Service from.\r\n         * @param {object} config Object containing all options '{ kernel, model, pump }'\r\n         */\r\n        function Abstract ( params ) {\r\n\r\n            // @static name:    Service name\r\n            this.name    = \"Abstract\";\r\n\r\n            // @static version: Service version number\r\n            this.version = \"0.0.1\";\r\n\r\n            // @property kernel: Internal pointer to the kernel for OS level talkback & events.\r\n            this.kernel     = params.kernel;\r\n            // @property model: Internal pointer to the model to add Service model requirements to in oganised manner.\r\n            this.model      = params.model;\r\n            // @property pump: Internal pointer to the pump to allow pulsing and routing.\r\n            this.pump       = params.pump;\r\n            // @property runtime: Internal property set by the Kernel. Contains settings to determine how it is running.\r\n            this.runtime        = params.runtime || {};\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        Abstract.prototype = {};\r\n\r\n        // ###extendModel\r\n        // Extends the Core Model to include a new function.\r\n        // Used to allow rendering to access the App\r\n        Abstract.prototype.extendModel = function( name, fn ){\r\n\r\n            var model = this.model;\r\n\r\n            this.model[ name ] = fn;\r\n        };\r\n\r\n        Abstract.prototype.ready = function( name ){\r\n        \tthis.kernel.invoke( \"kernel.process.loaded\", { \"name\":name } );\r\n        };\r\n\r\n        // ###toString\r\n        // Simply returns that name of the App for debugging.\r\n        /**\r\n         * ## toString\r\n         * @return {string} the name of this object\r\n         */\r\n        Abstract.prototype.toString = function(){\r\n            return this.name + \":\" + this.version;\r\n        }\r\n\r\n        // Return the Abstract constructor\r\n        return Abstract;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/services/abstract.js?");

/***/ }),

/***/ "./src/services/app.js":
/*!*****************************!*\
  !*** ./src/services/app.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n  .\r\n */\r\n\r\n/**\r\n *  # services.App\r\n * ## *A Service to manage the runtime of OS level Apps*\r\n * Starts / stops and updates the state of OS level Apps.\r\n * OS level Apps are different to Cog apps in that they run at the OS / Service level. In this\r\n * instance they are being use to develop the offline editor for building Cogs in.\r\n *\r\n * ####Usage in Kernel App config:\r\n *\r\n * ```js\r\n *  \"services\" : [\r\n *      { \"cls\":App, \"params\":{\r\n *          \"apps\":[\r\n *              { \"cls\":<app-class>, \"params\":{} }\r\n *              ...\r\n *          ]\r\n *      }\r\n *      ...\r\n * ]\r\n * ```\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! services/abstract */ \"./src/services/abstract.js\"), __webpack_require__(/*! bindings/app */ \"./src/bindings/app.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( Abstract ){\r\n\r\n        // *_this* is a reference to the created instance for use in callbacks if scope if lost.\r\n        var _this;\r\n\r\n        //  *_super* is a reference to the parent object should functionality need to be directly accessed.\r\n        var _super = Abstract.prototype\r\n\r\n        /**\r\n         * ## App\r\n         * The App service manages the Apps loaded into the platform.\r\n         * @param {object} config Object containing all options '{ kernel, model, pump }' as provided by the OS.\r\n         */\r\n        function App ( config ) {\r\n            // BAD BAD BAD: Don;t do this.\r\n            _this = this;\r\n\r\n            // Construct this object from an instance of its parent.\r\n            Abstract.call( this, config );\r\n\r\n            // Set this apps name.\r\n            this.name  = \"app\";\r\n\r\n            // @property apps a new Observable for the Site Model\r\n            this.model.apps = this.apps = ko.observableArray( [] );\r\n\r\n            // Extend the model with service functionality\r\n            this.extendModel( \"getApps\", this.getApps );\r\n\r\n            // Iterate over the Apps config\r\n            if( config.apps ){\r\n                // instantiate any Apps\r\n                this.loadProcesses( config.apps, \"apps\" );\r\n            }\r\n\r\n            // Notify that this service is ready.\r\n            this.ready( this.name );\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        App.prototype = Object.create( _super );\r\n\r\n        // ### loadProcesses\r\n        // Synchronously Loads a Process, defined in a collection of processes, by callin gthe specified \"cls\" with the \"params\"\r\n        // and assigning it to the model.\r\n        // The processes can be NON-visual ( Services ) or Visual ( Apps )\r\n        App.prototype.loadProcesses = function( collection, modelName ){\r\n\r\n            // Iterate over all of the Processes defined in the collection.\r\n            __.eachSync2(\r\n                collection,\r\n                function( spec, index, collection ){\r\n                    // Pass a reference to the Kernel. This can be used for a central communication point.\r\n                    spec.params[ \"kernel\" ] = this.kernel;\r\n\r\n                    // Register the service model with the Kernel\r\n                    spec.params[ \"model\" ] = this.model;\r\n\r\n                    // Pass a reference to the Pump to the Service\r\n                    spec.params[ \"pump\" ] = this.pump;\r\n\r\n                    // Invoke the Cls specifed in the Spec, with the appropriate params\r\n                    var process = new spec.cls( spec.params );\r\n\r\n                    var processModel = this.model[ modelName ];\r\n\r\n                    // Add the process to the collection. (Its an observable)\r\n                    processModel.push( process );\r\n                },\r\n                function(){},\r\n                { scope:this }\r\n            );\r\n        };\r\n\r\n        /**\r\n         * ## getApps\r\n         * retruns a collection of apps by id ( usually the app name )\r\n         * @param id {string} name of the app to get\r\n         * Note: Function is attached to model, and is called in model scope.\r\n         */\r\n        App.prototype.getApps = function( id ){\r\n            var apps = [];\r\n\r\n            for( var i=0; i<this.apps().length; i++ ){\r\n                var app = this.apps()[ i ];\r\n                if( app.name === id ){\r\n\r\n                    // Only copy across none \"_\" internal properties\r\n                    var obj = {};\r\n                    for( var key in app ){\r\n                        if( key.indexOf( \"_\" ) === -1 ){\r\n                            obj[ key ] = app[ key ];\r\n                        }\r\n                    }\r\n\r\n                    // Add to apps array\r\n                    apps.splice( apps.length, 0, obj);\r\n                }\r\n            }\r\n\r\n            return apps;\r\n        };\r\n\r\n        return App;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/services/app.js?");

/***/ }),

/***/ "./src/services/card.js":
/*!******************************!*\
  !*** ./src/services/card.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n  .\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! services/abstract */ \"./src/services/abstract.js\"), __webpack_require__(/*! knockout */ \"knockout\"), __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! mixins/endpoint */ \"./src/mixins/endpoint.js\"), __webpack_require__(/*! beans/header */ \"./src/beans/header.js\"), __webpack_require__(/*! bindings/header */ \"./src/bindings/header.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( Abstract, ko, events, log, Endpoint, Bean, Binding ){\r\n        var _this;\r\n\r\n        //  *_super* is a reference to the parent object should functionality need to be directly accessed. \r\n        var _super = Abstract.prototype\r\n\r\n        /*\r\n            #services.Card\r\n            The Card service loads Card specifications from PumpHouse and sets them up in teh platform \r\n            ready for use. What this actually means is that the templates / models are created for use \r\n            by knockout.\r\n            @author Andy Monis\r\n        */\r\n        function Card ( params ) {  \r\n            _this = this;            \r\n\r\n            // Construct this object from an instance of its parent.\r\n            Abstract.call( this, params );\r\n\r\n            // Set this apps name.\r\n            this.name  = \"card\"; \r\n            \r\n            this.current = undefined;\r\n\r\n            // Mixin Endpoint functionality\r\n            __mixin( this, new Endpoint( params ) ); \r\n\r\n            // Add capability to request Cards\r\n            this.initEndpoint( this.name, [\r\n                { \"className\":\"pumpCo.roadie.visit.request\", \"targetName\":\"PumpHouse\" },\r\n                { \"className\":\"internal.service.card.requires.request\", \"targetName\":this.name },\r\n                { \"className\":\"internal.service.card.requires.response\", \"targetName\":\"PumpHouse\"},\r\n\r\n                { \"className\":\"pumpCo.user.card.spec.get.request\", \"targetName\":\"PumpHouse\" },\r\n                { \"className\":\"pumpCo.user.card.spec.get.response\", \"targetName\":this.name  }                \r\n            ] );  \r\n\r\n            // PULSE HANDLERS \r\n\r\n            // internal.system.toast.update is fired by any cog that wants to alert a message to the user\r\n            this.addPulseHandler(\"internal.service.card.requires.request\", this.requiresPulse );\r\n            this.addPulseHandler(\"pumpCo.user.card.spec.get.response\", this.cardSpecResponse );\r\n            \r\n            // Add a new Observable for the Place Model\r\n            this.model.card = this.card = {};  \r\n            this.card.loadedCards = {};    \r\n            this.card.waitingCards = {}; \r\n           \r\n            // Notify that this service is ready.\r\n            this.ready( this.name );\r\n        }        \r\n  \r\n\t\t// Create a new prototype object to base this on ( in this case a base object )\r\n        Card.prototype = Object.create( _super );  \r\n\r\n        /**\r\n         * ###loadCards \r\n           {\r\n                \"name\": \"pump:userProfileCard\",\r\n                \"type\": \"pump:user\",\r\n                \"label\": \"system.card.pump.userProfileCard.label\",\r\n                \"version\": 1,\r\n                \"html\": \"\",\r\n                \"htmlUrl\": \"\",\r\n                \"script\": \"\",\r\n                \"scriptUrl\": \"\",\r\n                \"image\": \"\",\r\n                \"params\": {},\r\n                \"appFlow\": {\r\n                    \"update\": \"system.card.pump.userProfileCard.v1.edit\",\r\n                    \"create\": \"system.card.pump.userProfileCard.v1.edit\"\r\n                }\r\n            }\r\n         */\r\n        Card.prototype.loadCard = function( json ){\r\n            if( !json.name ){ \r\n                log.emergency( \"Service.Card: Invalid Card Spec, no name specified\" );\r\n            }            \r\n\r\n            // Store a reference to the card that was loaded ( don't store the spec as its in the DOM )\r\n            _this.card.loadedCards[ json.name ] = true;\r\n\r\n            /*\r\n                AMONIS: 26/01/2016: \r\n                The Card may not be loaded into the DOM here, as it may not have any valid script etc. \r\n                Not having any valid script / html effectively means that the Card \"HAS NOT\" been overridden. \r\n                Therefore the Generic Card Rendering will be used. \r\n                Store a reference to record that we atleast requested this Card, so that we don't try getting \r\n                it again during the same session.                 \r\n             */\r\n\r\n            // Check if there is any valid script ( JS )\r\n            if( !json.script || json.script === \"\" )\r\n                return -1\r\n\r\n            // Check to see if the script is an array.\r\n            var script = json.script;\r\n            if( the.isArray( json.script ) ){\r\n                script = json.script.join( \"\\n\" );\r\n            }\r\n\r\n            // Check if there is any valid html ( the template )\r\n            if( !json.html || json.html === \"\" )\r\n                return -2;\r\n\r\n            // Construct the Card Template\r\n            _this.invokeHtml( json.name, json.html );\r\n\r\n            // Invoke the Card code ( which will run it like a Cog )\r\n            _this.invokeJs( script, json.params );            \r\n\r\n            return 0;\r\n        };        \r\n\r\n        /**\r\n         * ###invokeJs\r\n         * Basically evals the Card code. \r\n         * Should really do some sanity checking here...\r\n         */\r\n        Card.prototype.invokeJs = function( _content, _params ){\r\n\r\n            var my = { \r\n                \"$error\": log.error\r\n            };\r\n            // Setup the closure for params\r\n            var params = _params;\r\n            // Evaluate the Card\r\n            eval( _content );        \r\n        };\r\n\r\n        /**\r\n         * ###invokeHtml\r\n         * Injects the HTML UI for the Card into the DOM\r\n         */\r\n        Card.prototype.invokeHtml = function( name, content ){\r\n            var html = phil.resolveComments( content );\r\n\r\n            phil.injectTmpl( name, html );\r\n        };\r\n\r\n        /**\r\n         * ###requiresPulse\r\n         */\r\n        Card.prototype.requiresPulse = function( exchange ){\r\n            var body = exchange.getPulseBody();\r\n            var head = exchange.getPulseHeader();\r\n\r\n            if( body.cards ){\r\n                // Create a refernece to the requestor for the cards\r\n                _this.card.waitingCards[ head.componentId ] = { \"cards\":body.cards, \"refId\":head.referenceId };\r\n\r\n                // Check if we need to load any\r\n                _this.requires( body.cards, head.componentId );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###requires\r\n         */\r\n        Card.prototype.requires = function( cardNames, compId ){\r\n            var cardsToRequest = [];\r\n\r\n            for( var i=0; i<cardNames.length; i++ ){\r\n                cardName = cardNames[ i ];\r\n\r\n                if( !this.card.loadedCards[ cardName ] ){\r\n                    cardsToRequest.push( { \"name\":cardName } );                    \r\n                }\r\n            }\r\n\r\n            // AMONIS: 26/01/2016: Speed up the request if we have all the cards already.\r\n            if( cardsToRequest.length > 0 ){\r\n                // If there are some cards required, get them from the backend\r\n                _this.requestCards( cardsToRequest, compId );\r\n            } else {\r\n                // If there are no Cards to get return immeadiately\r\n                var requestedCards = this.card.waitingCards[ compId ];\r\n                _this.internalServiceCardRequiresResponse( requestedCards.cards, compId, requestedCards.refId ); \r\n            }\r\n            \r\n        };\r\n\r\n        /**\r\n         * ###requestCards\r\n         * The Card Spec Request uses the of the cog. Therefore it mimics that cog by compid. \r\n         * @params [strings] cardsNames An array of card to load\r\n         * @params {string} compId The component Id of the requestor\r\n         */\r\n        Card.prototype.requestCards = function( cardNames, compId ){\r\n            if( cardNames.length === 0 )\r\n                _this.loadedRequiredCards();\r\n\r\n            // Override the componentId and route back to service\r\n            var refId = \"routing-override::\" + _this.name;\r\n\r\n            //\"card\":[{\"name\":\"pump:userProfileCard\"}] }\r\n            this.pulse( \"pumpCo.user.card.spec.get.request\", { \"card\":cardNames }, refId, compId ); \r\n        };\r\n\r\n        /**\r\n         * ###cardSpecResponse\r\n         * Called following a valid requestCards. \r\n         * The response should contain a requestingComponentId which is \r\n         * used to internally pulse the result back to.\r\n         */\r\n        Card.prototype.cardSpecResponse = function( exchange ){\r\n            var body = exchange.getPulseBody();\r\n            var head = exchange.getPulseHeader();\r\n\r\n            var cardSpecs = body.card;\r\n            for( var i=0;i<cardSpecs.length; i++ ){\r\n                var spec = cardSpecs[ i ];\r\n                _this.loadCard( spec );\r\n            }\r\n\r\n            var componentId =  head.requestingComponentId;\r\n            log.debug( \"CardService: CardId=\" + componentId );\r\n\r\n            var requestedCards = this.card.waitingCards[ componentId ];\r\n            // this.pulse( \"internal.service.card.requires.response\", { \"card\":requestedCards.cards, \"loaded\":\"success\", \"compId\":componentId }, requestedCards.refId, componentId ); \r\n\r\n            this.internalServiceCardRequiresResponse( requestedCards.cards, componentId, requestedCards.refId );            \r\n        };\r\n\r\n        Card.prototype.internalServiceCardRequiresResponse = function( cards, componentId, referenceId ){\r\n            this.pulse( \"internal.service.card.requires.response\", { \r\n                \"card\":cards, \r\n                \"loaded\":\"success\", \r\n                \"compId\":componentId\r\n            }, referenceId, componentId ); \r\n        };\r\n\r\n        /**\r\n         * ###loadedRequiredCards\r\n         */        \r\n        Card.prototype.loadedRequiredCards = function(){\r\n\r\n        };\r\n\t\t// UI Handlers \r\n\r\n        // Return the Card Service\r\n        return Card;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://AOS/./src/services/card.js?");

/***/ }),

/***/ "./src/services/clipboard.js":
/*!***********************************!*\
  !*** ./src/services/clipboard.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n  .\r\n */\r\n\r\n/**\r\n    #services.ClipBoard\r\n    A clipboarding service, that works closely with the roadie to store information for use at a later point. \r\n    The purpose of separating into a separate service is to allow the clipboard to be more \"visually\" interactive \r\n    without over complicating the the roadie. \r\n    The Roadie will be used to store the information in an accessible way.\r\n\r\n    This implements the \"idea\" of the shelf, allowing people to pick items from supporting Cogs and place them into other cogs. \r\n    This allows information to be shared easily between Cogs without prior knowledge of the Cogs.\r\n\r\n    Usage: \r\n\r\n    The usage is currently driven through the command line, using the a.action functionality. A cog can register an API call using \r\n    the method my.$consoleApi( \"name\", function(){} ); \r\n\r\n    ```js\r\n\r\n        // in a cog\r\n        my.$consoleApi( \"copy\", my.copy );\r\n\r\n    ```\r\n    This can then be accessed in the platform. if you know the Cogs ID, to allow you to interact with the functionality.\r\n\r\n    ```js\r\n        // 1) in the browser console\r\n        // 2) navigate to contacts ( which exposes a copy capability )\r\n        // 3) select a user\r\n\r\n        a.action[ \"55c89fd40cf2bf7351846a07\" ].copy();\r\n\r\n        // 4) then navigate to conversation centre ( which exposes a paste capability )\r\n\r\n        a.action[ \"55c89fd50cf2bf7351846a38\" ].paste();\r\n\r\n        // Result: the contacts should be pasted directly into the conversation text area for now. \r\n\r\n    ```\r\n\r\n\r\n    @author Andy Monis\r\n*/ \r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! services/abstract */ \"./src/services/abstract.js\"), __webpack_require__(/*! mixins/endpoint */ \"./src/mixins/endpoint.js\"), __webpack_require__(/*! knockout */ \"knockout\"), __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( Abstract, Endpoint, ko, events, log ){\r\n\r\n       \t//  *_super* is a reference to the parent object should functionality need to be directly accessed. \r\n        var _super = Abstract.prototype\r\n\r\n        // *private* [String] the key to use in the roadie to store clipboard information\r\n        var CLIPBOARD_KEY = \"services.clipboard.data\";\r\n\r\n        // *private* [String] a list of types that are supported by the clipboard\r\n        var SUPPORTED_TYPES = [ \"contact\" ];\r\n\r\n        /**\r\n         * ###Clipboard\r\n         */\r\n        function Clipboard ( config ) {  \r\n            // Construct this object from an instance of its parent.\r\n            Abstract.call( this, config );\r\n\r\n            // Set this apps name.\r\n            this.name  = \"clipboard\";\r\n\r\n            // Mixin Endpoint functionality\r\n            __mixin( this, new Endpoint( config ) );\r\n\r\n            this.initPulsing();\r\n\r\n            // Notify that this service is ready.\r\n            this.ready( this.name );\r\n        };      \r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        Clipboard.prototype = Object.create( _super );        \r\n\r\n        /**\r\n         * ###initPulsing\r\n         * Initialises the pulsing for the Service to allow it to listen and respond to pulses.\r\n         */\r\n        Clipboard.prototype.initPulsing = function(){\r\n            // Call the Endpoint Initialisation\r\n            this.initEndpoint( this.name, [   \r\n                { \"className\":\"internal.clipboard.copy.request\",    \"targetName\":this.name },\r\n                { \"className\":\"internal.clipboard.copy.response\",   \"targetName\":\"PumpHouse\" },\r\n                { \"className\":\"internal.clipboard.paste.request\",   \"targetName\":this.name },\r\n                { \"className\":\"internal.clipboard.paste.response\",  \"targetName\":\"PumpHouse\" },                \r\n            ] );  \r\n\r\n            // Internal pulses to support existing Contacts implementation\r\n            this.addPulseHandler( \"internal.clipboard.copy.request\",  this.internalCopyRequest.bind( this ) );\r\n            this.addPulseHandler( \"internal.clipboard.paste.request\", this.internalPasteRequest.bind( this ) );\r\n        };\r\n\r\n        /**\r\n         * ###internalCopyRequest\r\n         */\r\n        Clipboard.prototype.internalCopyRequest = function( exchange ){\r\n            log.debug( \"Clipboard.internalCopyRequest()\" );\r\n\r\n            var body = exchange.getPulseBody();    \r\n            \r\n            // Expecting an object with a \"type\" and \"obj\" properties\r\n            if( !body.type || !body.obj )\r\n                return -1;\r\n\r\n            // Store the object in the clipboard.\r\n            this.clip( body.obj, body.type );\r\n        };\r\n\r\n        /**\r\n         * ###internalPasteRequest\r\n         */\r\n        Clipboard.prototype.internalPasteRequest = function( exchange ){\r\n            log.debug( \"Clipboard.internalPasteRequest()\" );\r\n\r\n            // Get all of the current items in the clipboard;\r\n            var items = this.view();\r\n\r\n            // Clear the clipboard of all items\r\n            this.clear()\r\n\r\n            // Send an Internal pulse response\r\n            this.pulse( \"internal.clipboard.paste.response\", { \"clipboard\":items } );\r\n        };\r\n\r\n        /**\r\n         * ###createClipObject\r\n         * Creates a \"Deep Copy\" clipboard object to break any dependecies and to prevent this being \r\n         * used as a vector of attack to corrupt items in the clipboard.\r\n         * Uses JSON so that the clipboard could be serialised over the wire or stored locally if desired.\r\n         * @params type {String} the type, which is used as an identifier for apps to put objects in by and pull objects out by\r\n         * @params obj {Object} the object to place into the clipboard\r\n         * @returns {JSON} a valid format clipboard object\r\n         */\r\n        Clipboard.prototype.createClipObject = function( type, obj ){\r\n        \tif( !type || !obj )\r\n        \t\treturn undefined;\r\n\r\n        \tvar clipObject = undefined;\r\n        \t\r\n        \ttry{\r\n        \t\t// Parse the object to JSON to prevent any references being held\r\n        \t\tvar json = JSON.stringify( obj );\r\n\r\n        \t\t// If that went well, create the clipObject\r\n        \t\tclipObject = {\r\n        \t\t\t\"type\":type, \r\n        \t\t\t\"obj\":json \r\n        \t\t};        \t\t\r\n        \t} catch ( ex ){\r\n        \t\tlog.error( \"ClipBoard: Error stringifying object to JSON.\" );\r\n        \t} \r\n\r\n        \t// return the clipObject\r\n        \treturn clipObject;\r\n        };\r\n\r\n        /**\r\n         * ###restoreClipObject\r\n         * Restores a clipboard object from a \"Deep Copy\" clipboard object\r\n         * Uses JSON so that the clipboard could be serialised over the wire or stored locally if desired.\r\n         * @params item {JSON} The item to be restored\r\n         * @returns {Object} a valid clipboard object\r\n         */\r\n        Clipboard.prototype.restoreClipObject = function( item ){\r\n        \tif( !item )\r\n        \t\treturn undefined;\r\n\r\n        \tvar restoredObject = undefined;\r\n        \t\r\n        \ttry{\r\n        \t\t// Parse the object to JSON to prevent any references being held\r\n        \t\tvar obj = JSON.parse( item.obj );\r\n\r\n        \t\t// If that went well, create the clipObject\r\n        \t\trestoredObject = {\r\n        \t\t\t\"type\": item.type, \r\n        \t\t\t\"obj\":  obj \r\n        \t\t};        \t\t\r\n        \t} catch ( ex ){\r\n        \t\tlog.error( \"ClipBoard: Error parsing object from JSON.\" );\r\n        \t} \r\n\r\n        \t// return the clipObject\r\n        \treturn restoredObject;\r\n        };\r\n\r\n        /**\r\n         * ###clip\r\n         * Adds an object to the Clipboard\r\n         * @params {Object} obj The object to add to the clipboard\r\n         * @params {String} type The type of the object to help identify\r\n         */\r\n        Clipboard.prototype.clip = function( obj, type ){\r\n        \ttype = type || \"unknown\";\r\n\r\n        \t// Create the clipboard object\r\n        \tvar clipObject = this.createClipObject( type, obj );\r\n\r\n        \t// If the clipObject is invalid, return\r\n        \tif( !clipObject )\r\n        \t\treturn undefined;\r\n\r\n        \t// Get the current ClipBoard from the Roadie\r\n        \tvar clipboard = this.kernel.invoke( \"roadie.release\", { \"key\":CLIPBOARD_KEY } );\r\n\r\n        \t// Create the clipboard if nothing is currently in the roadie ( i.e. on first access )\r\n        \tif( !clipboard )\r\n        \t\tclipboard = [];\r\n\r\n        \t// Add the new item to thr clipboard \r\n        \tclipboard.splice( 0, 0, clipObject );\r\n\r\n        \t// Put the current clipboard back into the Roadie.\r\n        \tthis.kernel.invoke( \"roadie.hold\", { \"key\":CLIPBOARD_KEY, \"obj\":clipboard } );\r\n        };\r\n\r\n        /**\r\n         * ###view\r\n         * Provides a view of the clipboard\r\n         * If type is not defined then the entire clipboard is returned, alternatively only the type specified \r\n         * is returned.\r\n         * @params {String} type The desired types to be returned of all of them if undefined\r\n         * @returns [{Object}] and object array containing all the specified items\r\n         */\r\n        Clipboard.prototype.view = function( type ){\r\n\t\t\t// Get the current ClipBoard from the Roadie\r\n        \tvar clipboard = this.kernel.invoke( \"roadie.peek\", { \"key\":CLIPBOARD_KEY } );\r\n\r\n        \tvar resultSet = [];\r\n\r\n        \tfor( var i=0; i<clipboard.length; i++ ){\r\n        \t\t// convert objects back from JSON.\r\n        \t\tvar obj = this.restoreClipObject( clipboard[ i ] );\r\n\r\n        \t\tif( type === undefined || obj.type === type )\r\n        \t\t\tresultSet.splice( 0, 0, obj );\r\n        \t}\r\n\r\n        \t// return the clipboard or empty array just in case\r\n        \treturn resultSet;\r\n        };\r\n\r\n        /**\r\n         * ###unclip\r\n         * Removes an object to the Clipboard. The other items are left in the Clipboard.\r\n         * Expects an array of indexes ( attained by requesting the view ( see above ) );\r\n         * @params indexes [int] the indexes to remove from the clip board\r\n         * @returns [{Object}] an array containing the indexes specified\r\n         */\r\n        Clipboard.prototype.unclip = function( indexes ){\r\n        \t// Get the current ClipBoard from the Roadie\r\n        \tvar clipboard = this.kernel.invoke( \"roadie.release\", { \"key\":CLIPBOARD_KEY } );\r\n\r\n        \t// Declare the return resultset\r\n        \tvar resultSet = [];\r\n\r\n        \tindexes = the.quickSort( indexes );\r\n\r\n        \t// Iterate over all of the items in reverse order ( removing the last items first as splicing changes the array lenght )\r\n        \tfor( var i=indexes.length-1; i>=0; i-- ){\r\n        \t\tvar location = indexes[ i ];\r\n        \t\t\r\n        \t\t// Splice the item at that particular location, \"out of\" the clipboard\r\n        \t\tvar items = clipboard.splice( location, 1 );\r\n\r\n        \t\tif( items && items.length === 1 ){\r\n        \t\t\t// convert objects back from JSON.\r\n        \t\t\tvar obj = this.restoreClipObject( items[ 0 ] );\r\n\r\n        \t\t\t// Splice the item ( there shold only be one ) \"in to\" the result set\r\n        \t\t\t// Note: this loop is running backwards, so splice on in the opposite direction for consistency.\r\n        \t\t\tresultSet.splice( resultSet.length, 0, obj );\r\n        \t\t}        \t\t\r\n        \t}\r\n\r\n        \t// Put the current clipboard back into the Roadie.\r\n        \tthis.kernel.invoke( \"roadie.hold\", { \"key\":CLIPBOARD_KEY, \"obj\":clipboard } );\r\n\r\n        \treturn resultSet;\r\n        };\r\n\r\n        /**\r\n         * ###clear\r\n         * clears down the clipboard held in the Roadie\r\n         */\r\n        Clipboard.prototype.clear = function(){\r\n            // Put the an empty clipboard back into the Roadie.\r\n        \tthis.kernel.invoke( \"roadie.hold\", { \"key\":CLIPBOARD_KEY, \"obj\":[] } );\r\n        };\r\n\r\n        /**\r\n         * ###toString\r\n         */\r\n        Clipboard.prototype.toString = function(){\r\n            return this.name + \":\" + this.version;\r\n        };\r\n\r\n        // Return the Animal function\r\n        return Clipboard;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://AOS/./src/services/clipboard.js?");

/***/ }),

/***/ "./src/services/cog.js":
/*!*****************************!*\
  !*** ./src/services/cog.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n    Events\r\n    An events controller for passing information between processing in the system.\r\n    Aimed at complex Aysnchronous events, not DOM events.\r\n    @author Andy Monis\r\n*/\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n        __webpack_require__(/*! aos.config */ \"./src/aos.config.js\"),\r\n        __webpack_require__(/*! jss */ \"./lib/jss/jss.js\"),\r\n        __webpack_require__(/*! knockout */ \"knockout\"),\r\n        __webpack_require__(/*! core/events */ \"./src/core/events.js\"),\r\n        __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"),\r\n        __webpack_require__(/*! utils/dom */ \"./src/utils/dom.js\"),\r\n        __webpack_require__(/*! mixins/endpoint */ \"./src/mixins/endpoint.js\"),\r\n        __webpack_require__(/*! beans/cog */ \"./src/beans/cog.js\"),\r\n        __webpack_require__(/*! bindings/cog */ \"./src/bindings/cog.js\"),\r\n        __webpack_require__(/*! utils/store */ \"./src/utils/store.js\"),\r\n        __webpack_require__(/*! utils/loader */ \"./src/utils/loader.js\")\r\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( AOSConfig, Jss, ko, events, log, DOM, Endpoint, CogBean, BindingCog, Store, Loader ){\r\n        // This runs before Main has been called.\r\n        log.debug( \"services/cog\" );\r\n\r\n        var _this;\r\n\r\n        /**\r\n         * Constructor\r\n         */\r\n        function Cog ( params ) {\r\n            // Store the state in a closure\r\n            _this = this;\r\n\r\n            /*\r\n                Mixin Endpoint functionality\r\n             */\r\n            __mixin( this, new Endpoint( params ) );\r\n\r\n            this.initEndpoint( this.name, [\r\n                { \"className\":\"pumpco.system.core.cog\", \"targetName\":\"PumpHouse\" },\r\n                // forwarding of Services \"user.modified\" event to cogs via pulse\r\n                { \"className\":\"internal.event.user.modified\", \"targetName\":\"PumpHouse\" }\r\n            ] );\r\n\r\n            /*\r\n                Declarations\r\n             */\r\n            this.name    = \"cog\";\r\n            this.version = \"0.0.1\";\r\n\r\n            this.callbacks = [];\r\n\r\n            // Create pump ref from params\r\n            this.kernel = params.kernel;\r\n            this.pump   = params.pump;\r\n            // @property runtime: Internal property set by the Kernel. Contains settings to determine how it is running.\r\n            this.runtime        = params.runtime || {};\r\n\r\n            // Store the Id of any cog to debug ( pass in to cog at \"loaded\" )\r\n            this.cogDebug = params.cogDebug;\r\n            // Store the url config Params to pass into any cog.\r\n            this.cogParams = params.cogParams;\r\n\r\n            // The main Place ViewModel which will be mapped directly to the pulses\r\n            var model    = params.model;\r\n\r\n            // **property** {Object} location\r\n            this.location = params.location;\r\n\r\n            // **_private** {Object} _networkStatus: a cache of the last Network Status notification to replay when starting a Cog\r\n            this._networkStatus = undefined;\r\n\r\n            // **private** {boolean} _useMinimal: Internal flag to denote the use of \"minimal\" site specs.\r\n            this._useMinimal    = this.runtime.minimal || false;\r\n\r\n            // Initialisation\r\n\r\n            this.extendModel( model );\r\n\r\n            // Add a new Observable for the Place Model\r\n            model.cogs = this.cogs = ko.observableArray( [] );\r\n\r\n            // Register to 'cog.add' event ( sent usually from Space Service )\r\n            events.on( \"cog.add\", function( params ){ this.add( params ); }, this );\r\n            // Register to 'space.shown' event ( sent when a space is shown )\r\n            events.on( \"space.shown\", function( params ){ this.spaceShown( params ); }, this );\r\n            events.on( \"space.hidden\", function( params ){ this.spaceHidden( params ); }, this );\r\n\r\n            events.on( \"user.modified\", function( params ){ this.onUserModified( params ); },   this );\r\n\r\n            // AMONIS: 12/05/2016: Register to listen for Pump QoS events\r\n            events.on( \"pump.network.status\", function( params ){ this.onPumpNetworkStatus( params ); },   this );\r\n\r\n            events.on( \"cog.status.modify\", this.onCogStatusModify.bind( this ) );\r\n\r\n            // Register Kernel API calls\r\n            this.kernel.addApi( \"cog.add.new\", this.loaded, this );\r\n\r\n            // Configure the COG API\r\n            window.the = window.the || {};\r\n            the.App = the.App || {};\r\n            the.App.onReady = function( method ){\r\n                _this.onReady.call( _this, method );\r\n            };\r\n\r\n            // Notify the Kernel that the service is ready,.\r\n            this.kernel.invoke( \"kernel.process.loaded\", { \"name\":this.name } );\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        Cog.prototype = {};\r\n\r\n        /**\r\n         * @methos extendModel\r\n         * Extends the system model with CogService specific functions\r\n         */\r\n        Cog.prototype.extendModel = function( model ){\r\n            /**\r\n             * @method getCogs\r\n             * function to extend the Model capabilities for the CogService to get the\r\n             * Cogs for the Space ( id )\r\n             * @param id {string} id of a space to get the cogs for\r\n             */\r\n            model.getCogs = function( id ){\r\n                var cogs = [];\r\n\r\n                if( !id ){\r\n                    // Return all cogs if NO ID is specified\r\n                    // DEVELOPMENT used for running a cog standalone\r\n                    for( var i=0; i<model.cogs().length; i++ ){\r\n                        var cog = model.cogs()[ i ];\r\n                        cogs.splice( cogs.length, 0, cog );\r\n                    }\r\n                } else {\r\n                    // Return ONLY the cogs for the SPACE specified by the ID\r\n                    // PRODUCTION mechanism works like this\r\n                    for( var i=0; i<model.cogs().length; i++ ){\r\n                        var cog = model.cogs()[ i ];\r\n                        if( cog.parentId === id ){\r\n                            cogs.splice( cogs.length, 0, cog );\r\n                        }\r\n                    }\r\n\r\n                    // AMONIS: 24/08/2016: Implemented Sorting of Cogs.\r\n                    // a.list.cogs()[4].oOrder(\"-1000\") via CLI on homescreen\r\n                    the.quickSort( cogs, \"oOrder\" );\r\n                }\r\n\r\n                return cogs;\r\n            };\r\n        };\r\n\r\n        /**\r\n         * Add a new Cog\r\n         */\r\n        Cog.prototype.add = function( spec ){\r\n            if( !spec ){\r\n                log.debug( \"Cog.add(): No Cog Id provided\" );\r\n                return;\r\n            }\r\n\r\n            // Notify that that Cog.add() request has been made\r\n            events.fire( \"cog.add.start\", { \"cog\":spec } );\r\n\r\n            log.debug( \"Cog.add(): cog.add [\" + spec.id + \"]\" );\r\n\r\n            // Start the loading process\r\n            events.fire( \"drive.get.cog\", { \"id\":spec.id, \"fn\":this.loaded, \"scope\":this } );\r\n        };\r\n\r\n        /**\r\n         * @find\r\n         * finds a Cog registered with the Cog Service by Id\r\n         */\r\n        Cog.prototype.find = function( id ){\r\n            var obj = undefined;\r\n            __.eachSync2( this.cogs(), function( item ){\r\n                if( item.id === id )\r\n                    obj = item;\r\n            } );\r\n            return obj;\r\n        };\r\n\r\n        /**\r\n         * @findByParentId\r\n         * finds all cogs registered to a parent space\r\n         */\r\n        Cog.prototype.findByParentId = function( id ){\r\n            var objs = [];\r\n            __.eachSync2( this.cogs(), function( item, index, collection ){\r\n                if( item.parentId === id )\r\n                    objs.push( item );\r\n            } );\r\n            return objs;\r\n        };\r\n\r\n        Cog.prototype.hide = function( id ){\r\n             var cog = this.find( id );\r\n\r\n            if( cog ){\r\n                cog.oVisible( false );\r\n            }\r\n        };\r\n\r\n        Cog.prototype.show = function( id ){\r\n            var cog = this.find( id );\r\n\r\n            if( cog ){\r\n                cog.oVisible( true );\r\n            }\r\n        };\r\n\r\n        Cog.prototype.loaded = function( bean ){\r\n            log.info( \"Cog.loaded(): RECEIVED:\" + bean.id );\r\n\r\n            // Force Cog to Version OS2 rendering\r\n            bean.layout = bean.layout || {};\r\n            bean.layout.version = \"2\";\r\n\r\n            // Halt loading if Cog has no valid fixture\r\n            if( !bean.isValid ){\r\n                // The bean has no valid construction code.\r\n                // Trigger the added event, to let the space service know that cog was loaded but there is an error.\r\n                events.fire( \"cog.added\", { \"cog\":bean, \"error\":\"No valid HTML or SCRIPT found.\" } );\r\n                return -1;\r\n            }\r\n\r\n            // Push the plase into the model\r\n            var result = this.store( bean );\r\n            if( result === true ){\r\n                // Fire an event to state that the Cog has been loaded and added\r\n                // events.fire( \"cog.added\", { \"cog\":bean } );\r\n\r\n                // Make the place visible;\r\n                this.show( bean.id );\r\n\r\n                // Set the debug flag for this Cog if set.\r\n                if( this.cogDebug === bean.name ){\r\n                    bean.params.debug = true;\r\n                }\r\n\r\n                var cogParams = {};\r\n                if( this.cogParams !== undefined ){\r\n                    var temp = {};\r\n                    // Check for a match between startup param and cog name\r\n                    for( var i=0; i<this.cogParams.length; i++ ){\r\n                        if( this.cogParams[ i ].name === bean.name ){\r\n                            // Set the cogParams and break\r\n                            cogParams = this.cogParams[ i ].value;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Call the Place and Space Services to get the current displayed items\r\n                // These are used by cogs to update owner details in the view.\r\n                var place       = this.kernel.invoke( \"getPlace\", {} );\r\n                var space       = this.kernel.invoke( \"getSpace\", { \"id\":bean.parentId } );\r\n                var user        = this.kernel.invoke( \"getUser\",  {} );\r\n                var params      = place ? { placeId:place.id } : {};\r\n                var contacts    = this.kernel.invoke( \"contacts.get.contacts\",  params );\r\n                var environment = this.kernel.invoke( \"environment.get.env\", {} );\r\n\r\n                // AMONIS: 03/07/2015: Don't return the full Observable models to the Cog\r\n                if( place ) place        = ko.toJS( place );\r\n                if( space ) space        = ko.toJS( space );\r\n                if( user )  user         = ko.toJS( user );\r\n                if( contacts ) contacts  = ko.toJS( contacts );\r\n\r\n                // AMONIS: 02/12/2016: Check cog capabilities\r\n                var libraries = this.deriveLibraries( bean );\r\n\r\n                // AMONIS: 23/04/2018: Use Jquery replacement for inline require\r\n                this.loadLibraries( libraries,\r\n                  // DONE handler\r\n                  function(){\r\n                        // Invoke the cog ( the.App.onReady is called passing a function )\r\n                        this.startCog(\r\n                            bean,\r\n                            this.pump,\r\n                            place,\r\n                            space,\r\n                            user,\r\n                            this.kernel.platform,\r\n                            contacts,\r\n                            this.location,\r\n                            environment,\r\n                            cogParams\r\n                        );\r\n                        // Update the flag\r\n                        bean.booted = true;\r\n                        // Run all of the registered cogs i.e. everything that has just registered.\r\n                        // or anything else that could be waiting.\r\n                        // Invoke the.App.onReady callback\r\n                        this.triggerOnReady();\r\n                        // Notify that the Cog is ready after booting.\r\n                        events.fire( \"cog.added\", { \"cog\":bean } );\r\n                        // Notify that that Cog.add() request has been made\r\n                        events.fire( \"cog.add.finish\", { \"cog\":bean } );\r\n                    }.bind( this ),\r\n                    // FAIL handler\r\n                    function( err ){\r\n                        log.emergency( \"services.Cog:require fail line:300\" );\r\n                        log.emergency( JSON.stringify(err) );\r\n                    }\r\n                );\r\n            } else {\r\n                // AMONIS: 09/01/2017: Cog already exists and has already been booted\r\n                events.fire( \"cog.add.finish\", { \"cog\":bean } );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ### loadLibraries\r\n         * 23/04/2018 Replacement for inline require, to async load Libraries\r\n         * This is part of the webpack replacement as inline requires are not allow\r\n         * @param  {[type]}   libraries [description]\r\n         * @param  {Function} done      [description]\r\n         * @param  {[type]}   fail      [description]\r\n         * @return {[type]}             [description]\r\n         */\r\n        Cog.prototype.loadLibraries = function( libraries, done ){\r\n          var spec = { js:{} };\r\n\r\n          if( libraries.length === 0 ){\r\n            done();\r\n          } else {\r\n            // Add a JQuery defer for each library load\r\n            for( var i=0; i<libraries.length; i++ ){\r\n              spec.js[ this.location.pumpface + libraries[ i ] ] = undefined;\r\n            }\r\n\r\n            var loader = new Loader( function( json ){\r\n              for( var key in json.js ){\r\n                eval( json.js[ key ] );\r\n              }\r\n\r\n              done();\r\n            });\r\n            loader.load( spec );\r\n          }\r\n\r\n        };\r\n        // Cog.prototype.loadLibraries = function( libraries, done, fail ){\r\n        //   // Create a list of defer objects\r\n        //   var defers = [];\r\n        //   // Add a JQuery defer for each library load\r\n        //   for( var i=0; i<libraries.length; i++ ){\r\n        //       defers.push( $.Deferred() );\r\n        //   }\r\n        //\r\n        //   // Attach a listener for successful loads, and trigger done\r\n        //   $.when.apply( this, defers )\r\n        //     .done( function(){\r\n        //         console.log( \"loadLibraries - executing\" );\r\n        //         if( defers.length === 0 ){\r\n        //             done();\r\n        //         } else {\r\n        //             setTimeout( function(){\r\n        //                 console.log( \"loadLibraries - done\" );\r\n        //                 // Timeout hack is very ugly\r\n        //                 done();\r\n        //             }, 1000 );\r\n        //         }\r\n        //\r\n        //     })\r\n        //     .fail(function(){\r\n        //         fail();\r\n        //     });\r\n        //\r\n        //     // Create JQuery ajax requests for each defer\r\n        //     for( var j=0; j<defers.length; j++ ){\r\n        //         // Allow user to set any option except for dataType, cache, and url\r\n        //         var options = $.extend( options || {}, {\r\n        //             dataType: \"script\",\r\n        //             cache: true,\r\n        //             url: this.location.pumpface + libraries[ j ]\r\n        //         });\r\n        //         // Load the script\r\n        //         defers[ j ].resolve( $.ajax( options ) );\r\n        //         // defers[ j ].resolve( $.getScript( options.url ) );\r\n        //     }\r\n        // };\r\n\r\n        /**\r\n         * ###deriveLibraries\r\n         * @param  {CogBean} bean [description]\r\n         * @return [strings]      [description]\r\n         */\r\n        Cog.prototype.deriveLibraries = function( bean ){\r\n            // Define the default libraries ( Cookies should be irrelevant now )\r\n            var libraries = [];\r\n            // Get the libraries list from the cog\r\n            var capabilities = bean.getCapabilities();\r\n            // Derive the base path for each library ( if supported )\r\n            for( var i=0; i<capabilities.length; i++ ){\r\n                var path = AOSConfig.getLibraryPath( capabilities[ i ].name );\r\n                if( path ){\r\n                    libraries.push( path );\r\n                }\r\n            }\r\n            // return array of library paths\r\n            return libraries;\r\n        };\r\n\r\n        /**\r\n         * ###startCog\r\n         * Start the cog with the minimal closure scope.\r\n         */\r\n        Cog.prototype.startCog = function( bean, pump, place, space, user, platform, contacts, location, environment, cogParams, libraries ){\r\n            libraries = libraries || {};\r\n            // AMONIS: 13/05/16: This does not start the cog, this runs the function the.app.onReady();\r\n            // That calls the service, to register to be booted.\r\n            bean.boot( {\r\n                \"pump\":         this.pump,\r\n                \"place\":        place,\r\n                \"space\":        space,\r\n                \"user\":         user,\r\n                \"platform\":     this.kernel.platform,\r\n                \"contacts\":     contacts,\r\n                \"store\":        Store,\r\n                \"location\":     location,\r\n                \"jss\":          Jss,\r\n                \"runtime\":      this.runtime,\r\n                \"network\":      this._networkStatus,\r\n                \"environment\":  environment,\r\n                \"cogParams\":    cogParams,\r\n                \"libraries\":    libraries\r\n            } );\r\n        }\r\n\r\n        /**\r\n         * Stores the bean in the currently rendered App Model\r\n         */\r\n        Cog.prototype.store = function( bean ){\r\n            var exists = this.find( bean.id );\r\n\r\n            if( !exists ){\r\n                this.cogs.push( bean );\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @method  spaceShown\r\n         * @event   triggered by space service.\r\n         * Send a pulse to the cog to notify visible\r\n         */\r\n        Cog.prototype.spaceShown = function( json ){\r\n            var space = json.space;\r\n            var options = json.options || {};\r\n\r\n            var cogs = this.findByParentId( space.id );\r\n\r\n            // Notify the cogs in this space that they are VISIBLE\r\n            __.eachSync2( cogs, function( item, index, collection ){\r\n                // Create the default body\r\n                var body = {\r\n                    \"visibility\":\"visible\",\r\n                    \"compId\":item.id,\r\n                    \"state\": options.state || undefined // paused || resumed from kernel event\r\n                };\r\n\r\n                // Pulse each cog in the space to say that they are visible\r\n                _this.pulse( \"pumpco.system.core.cog\",\r\n                    body,       // Not sure I need to send ComponentId in body any monre?\r\n                    undefined,  //item.id,  // referenceId\r\n                    item.id     // componentId\r\n                );\r\n            } );\r\n        };\r\n\r\n        /**\r\n         * @method  spaceShown\r\n         * @event   triggered by space service.\r\n         * Send a pulse to the cog to notify hidden\r\n         */\r\n        Cog.prototype.spaceHidden = function( params ){\r\n            var cogs = this.findByParentId( params.id );\r\n\r\n            // Notify the cogs in this space that they are HIDDEN\r\n            __.eachSync2( cogs, function( item, index, collection ){\r\n                // Pulse each cog in the space to say that they are visible\r\n                _this.pulse( \"pumpco.system.core.cog\",\r\n                    { \"visibility\":\"hidden\",\"compId\":item.id},  // Not sure I need to send ComponentId in body any monre?\r\n                    undefined,         // referenceId\r\n                    item.id     // componentId\r\n                );\r\n            } );\r\n        };\r\n\r\n        /*\r\n            COG API & Booting\r\n        */\r\n\r\n        Cog.prototype.onReady = function( method ){\r\n            this.callbacks.push(method);\r\n        };\r\n\r\n        Cog.prototype.boot = function(){\r\n\r\n            if( !cog.booted ){\r\n                cog.booted = true;\r\n\r\n                this.triggerOnReady();\r\n            }\r\n        };\r\n\r\n        Cog.prototype.reboot = function( id ){\r\n            var cog = this.find( id );\r\n\r\n            if( !cog ){\r\n                log.emergency( \"No cog found for id[\" + id + \"]\" );\r\n                return undefined;\r\n            }\r\n\r\n            // Unregister all user created vars and stuff\r\n            cog.deboot();\r\n\r\n            // Re-start the cog updating the script\r\n            cog.reboot( cog );\r\n\r\n            // Flag the cog as needing a repaint.\r\n            cog.repaint( true );\r\n\r\n            // The above call runs the.app.onReady() which registers the function\r\n            // as a callback. Which is placed in a queue and waits.\r\n\r\n            // Trigger the onReady process to iterate over any \"waiting\" functions\r\n            this.triggerOnReady();\r\n\r\n            // Return the cog for good measure\r\n            return cog;\r\n        };\r\n\r\n        /**\r\n         * @method triggerOnReady\r\n         * Exectutes any registered callbacks ( expected to be Cogs ) that have registered\r\n         * using the the.App.onReady() capability.\r\n         */\r\n        Cog.prototype.triggerOnReady = function () {\r\n            for (var i = 0; i < this.callbacks.length; i++) {\r\n                var method = this.callbacks.shift();\r\n\r\n                // Run the Cogs internal code\r\n                setTimeout( method, 0 );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###onUserModified\r\n         * Handler for user.modified system events.\r\n         * Replays these event to the cogs as cogs can't explicitly listen for system events.\r\n         * sends a \"internal.event.user.modified\" pulse.\r\n         */\r\n        Cog.prototype.onUserModified = function( userBean ){\r\n            _this.pulse( \"internal.event.user.modified\", userBean );\r\n        };\r\n\r\n\r\n        /**\r\n         * ###onPumpNetworkStatus\r\n         * Network status changes sent from the Endpoints, and recorded in the Pump.\r\n         * { status:online|offline, connection:wifi|4g|3g|2g|gprs }\r\n         */\r\n        Cog.prototype.onPumpNetworkStatus = function( data ){\r\n            // Cache the network status change, to inform other cogs at startup\r\n            this._networkStatus = data;\r\n\r\n            log.debug( \"Network Status Changed\" );\r\n\r\n            // Send the event on to all Cogs ( This is repeated in )\r\n            _this.pulse( \"internal.event.network.status\", data );\r\n        };\r\n\r\n        /**\r\n         * ###onCogStatusModify\r\n         * Updates the state of the Cog specified\r\n         * @param  {json} params { id:\"\", [ editmode:true:false ] }\r\n         */\r\n        Cog.prototype.onCogStatusModify = function( params ){\r\n            params = params || {};\r\n\r\n            var cog = this.find( params.id );\r\n            if( params.editmode ){\r\n                console.log( \"COG: [\" + cog.name + \"] editmode=\" + params.editmode );\r\n\r\n                cog.editMode( params.editmode );\r\n\r\n                $(\".draghandle\").off( \"click\");\r\n                $(\".draghandle\").on( \"click\", function(){\r\n                    console.log( \"I was clicked\" );\r\n                });\r\n            }\r\n        };\r\n\r\n\r\n        /*\r\n            COG API & Booting\r\n        */\r\n        Cog.prototype.toString = function(){\r\n            return this.name + \":\" + this.version;\r\n        }\r\n\r\n        // Return the Class function\r\n        return Cog;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\r\n\n\n//# sourceURL=webpack://AOS/./src/services/cog.js?");

/***/ }),

/***/ "./src/services/console.js":
/*!*********************************!*\
  !*** ./src/services/console.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n    Events\r\n    An events controller for passing information between processing in the system.\r\n    Aimed at complex Aysnchronous events, not DOM events.\r\n    @author Andy Monis\r\n*/\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! knockout */ \"knockout\"), __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko, events, log ){\r\n        // This runs before Main has been called.\r\n        log.debug( \"services/console\" );\r\n\r\n        var _this;\r\n\r\n        /**\r\n         * Constructor\r\n         */\r\n        function Console ( params ) {\r\n            this.name    = \"console\";\r\n            this.version = \"0.0.1\";\r\n\r\n            _this = this;\r\n\r\n            // @property kernel: Internal pointer to the kernel for OS level talkback & events.\r\n            this.kernel     = params.kernel;\r\n            // @property model: Internal pointer to the model to add Service model requirements to in oganised manner.\r\n            this.model      = params.model;\r\n            // @property pump: Internal pointer to the pump to allow pulsing and routing.\r\n            this.pump       = params.pump;\r\n            // @property runtime: Internal property set by the Kernel. Contains settings to determine how it is running.\r\n            this.runtime    = params.runtime || {};\r\n            // @property debug: Internal property set by the Kernel. true / false to indicate debug status\r\n            this.debug      = params.debug;\r\n\r\n            // @property consoleParams\r\n            if( params.consoleParams === undefined )\r\n                this.consoleEnabled = false;\r\n            else\r\n                this.consoleEnabled = true;\r\n\r\n            // @private {object} _help An internal store of help API calls.\r\n            this._help      = {};\r\n\r\n            // Add in global DSL properties\r\n            // this.a = window[ \"a\" ] = window[ \"a\" ] || {};\r\n            this.aos = {};\r\n\r\n            this.aos[ \"list\" ] = {};            // Used to get a list of all\r\n            this.aos[ \"specific\" ] = {};        // Used to find a specific\r\n            this.aos[ \"pulse\" ] = {};           // Used to send a Pulse to the backend\r\n            this.aos[ \"cog\" ] = {};             // Used to start / stop cogs\r\n            this.aos[ \"action\" ] = {};          // Used to add console actions to ( depended upon by \"$consoleApi\" )\r\n            this.aos[ \"single\" ] = {};          // Used to start a single event ( test )\r\n            this.aos[ \"suite\" ] = {};           // Used to start a suite of events ( tests )\r\n            this.aos[ \"info\" ] = {};            // Used to display current information\r\n\r\n            // Expose the displayHelp method via the \"a\" property\r\n            this.aos[ \"help\" ] = function(){ _this.displayHelp.call( _this ); };\r\n\r\n            // Add in PUMP related commands\r\n            this.addPumpCommands( this.aos );\r\n            // Add in SERVICE related commands\r\n            this.addServiceCommands( this.aos );\r\n            // Add in COG specific commands\r\n            this.addCogCommands( this.aos );\r\n            // Add in KERNEL specific commands\r\n            this.addKernelCommands( this.aos );\r\n            // Add in CORE specific commands ( usually things prior to kernel i.e. url params)\r\n            this.addCoreCommands( this.aos );\r\n\r\n            // Register Kernel API calls\r\n\r\n            // e.g. this.kernel.invoke( \"addConsoleMethod\", { \"ns\":\"toast.show\", \"fn\":function( msg ){ _this.show( msg ); } } );\r\n            this.kernel.addApi( \"addConsoleMethod\", function(params){ this.addAPI( params.ns, params.fn); }, this );\r\n\r\n            // ###console.add this.kernel.invoke( \"console.add\", { \"ns\":\"toast.show\", \"fn\":function( msg ){ _this.show( msg ); } } );\r\n            this.kernel.addApi( \"console.add\", function(params){ this.addAPI( params.ns, params.fn); }, this );\r\n\r\n            // Notify the Kernel that the service is ready,.\r\n            this.kernel.invoke( \"kernel.process.loaded\", { \"name\":this.name } );\r\n\r\n            // Enable the console if either the 'console' or 'debug' params are set\r\n            if( this.debug === true || this.consoleEnabled !== false)\r\n                window[ \"aos\" ] = this.aos;\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        Console.prototype = {};\r\n\r\n        /**\r\n         * ##addHelp\r\n         * Adds a help string to the console API\r\n         * @params {string} name The name of the api call e.g. a.cog.reboot\r\n         * @params {string} description Optional descriptive information\r\n         */\r\n        Console.prototype.addHelp = function( name, description ){\r\n            // Add the description to the name key\r\n            this._help[ name ] = description;\r\n        };\r\n\r\n        /**\r\n         * ##displayHelp\r\n         * Displays all of the help options registered;\r\n         */\r\n        Console.prototype.displayHelp = function(){\r\n                console.log( \"aOS Console Help\" );\r\n                console.log( \"=================\" );\r\n\r\n                for( var key in this._help ){\r\n                    console.log( key + \" // \" + this._help[ key ] );\r\n                }\r\n        };\r\n\r\n/**\r\n * LIVE.JS\r\n */\r\n\r\n \t\t/**\r\n \t\t * ###addCoreCommands\r\n \t\t * Adds core platform command to the console\r\n \t\t */\r\n \t\tConsole.prototype.addCoreCommands = function( ns ){\r\n            // Add general help\r\n            this.addHelp( \"&debug=true\", \"Url parameter. asks for the debug version of includes.\" );\r\n            this.addHelp( \"&platform=Desktop|Mobile\", \"Url parameter. sets which site should be loaded.\" );\r\n            this.addHelp( \"&socket=false\", \"Url parameter. sets the pump to use XHR which is better for debugging.\" );\r\n            this.addHelp( \"&cog=<cogname>\", \"Url parameter. sets the cog to debug ( cogname can be found by sniffing the DOM )\" );\r\n            this.addHelp( \"&params=json\", \"Url parameter. sets the params for every cog\" );\r\n            this.addHelp( \"e.g. https://dev.cnect.to/pumpco?socket=false&params=[{%22name%22:%22Gaia.loginCog%22,%22value%22:{%22useForm%22:false}}]\");\r\n            this.addHelp( \"&log=1|2|3|4\", \"Url parameter. sets the logging to higher.\" );\r\n            this.addHelp( \"&console=true\", \"Url parameter. displays the console.\" );\r\n            this.addHelp( \"&drive=clear|nocache|prefer\", \"Url parameter. clears the localstorage.\" );\r\n            this.addHelp( \"&app=system.attendanceApp\", \"Url parameter. loads a specific App as a standalone app.\" );\r\n            this.addHelp( \"&wrapper=true\", \"Url parameter. sets the platform to run as-if it is running as a wrapped app ( cordova + online/offline )\" );\r\n            this.addHelp( \"&test=true\", \"Url parameter. sets the platform in to 'test' mode by loading the functional tests.\" );\r\n            this.addHelp( \"&launch=System.convCentre\", \"Url parameter. sets the App to load by default. In the form of Fixture.AppName, which will then try to find the Appropriate Space.\" );\r\n            this.addHelp( \"&console=true\", \"Url parameter. enables the 'aos' console in the browser developer tools.\" );\r\n \t\t};\r\n\r\n/**\r\n * CAMELET & PUMP\r\n */\r\n\r\n        /**\r\n         * @method listCameletFeature\r\n         * Helper method to list camelet features by name. Accepts the Switch \"h\" for human readable.\r\n         * @return [object || \"\"]\r\n         */\r\n        Console.prototype.listCameletFeature = function( feature, switches ){\r\n            var result = [];\r\n\r\n            var _feature = _this.pump[ \"_camelet\" ].getStats()[ feature ];\r\n            if( switches.indexOf(\"h\") >= 0 ){\r\n                result = [];\r\n                for( var key in _feature.items ){\r\n                    result.push( _feature.items[ key ].name );\r\n                }\r\n            } else {\r\n                for( var key in _feature.items ){\r\n                    result.push( _feature.items[ key ] );\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        /**\r\n         * @method addPumpCommands\r\n         * Adds the pump based commands to the \"a\" console interface.\r\n         */\r\n        Console.prototype.addPumpCommands = function( ns ){\r\n\r\n            /**\r\n             * @method a.list.channels\r\n             * switches \"h\" human readable strings rather than a collection\r\n             * e.g. a.list.channels(\"h\")\r\n             */\r\n            ns.list[ \"channels\" ] = function( switches ){\r\n                switches = switches || \"\";\r\n                return _this.listCameletFeature( \"channels\", switches );\r\n            };\r\n\r\n            /**\r\n             * @method a.list.components\r\n             * switches \"h\" human readable strings rather than a collection\r\n             * e.g. a.list.components(\"h\")\r\n             */\r\n            ns.list[ \"components\" ] = function( switches ){\r\n                switches = switches || \"\";\r\n                return _this.listCameletFeature( \"components\", switches );\r\n            };\r\n\r\n            /**\r\n             * @method a.list.consumers\r\n             * switches \"h\" human readable strings rather than a collection\r\n             * e.g. a.list.consumers(\"h\")\r\n             */\r\n            ns.list[ \"consumers\" ] = function( switches ){\r\n                switches = switches || \"\";\r\n                return _this.listCameletFeature( \"consumers\", switches );\r\n            };\r\n\r\n            /**\r\n             * @method a.list.endpoints\r\n             * switches \"h\" human readable strings rather than a collection\r\n             * e.g. a.list.endpoints(\"h\")\r\n             */\r\n            ns.list[ \"endpoints\" ] = function( switches ){\r\n                switches = switches || \"\";\r\n                return _this.listCameletFeature( \"endpoints\", switches );\r\n            };\r\n\r\n            /**\r\n             * @method a.list.producers\r\n             * switches \"h\" human readable strings rather than a collection\r\n             * e.g. a.list.producers(\"h\")\r\n             */\r\n            ns.list[ \"producers\" ] = function( switches ){\r\n                switches = switches || \"\";\r\n                return _this.listCameletFeature( \"producers\", switches );\r\n            };\r\n\r\n            /**\r\n             * @method a.pulse.request\r\n             */\r\n            ns.pulse[ \"request\" ] = function( ns, body, compId ){\r\n                if( arguments.length === 0 ){\r\n                    return \"USAGE: a.pulse.request( 'pumpco.pulse.name', { 'body':'something' }, 'component-id' );\";\r\n                }\r\n\r\n                body = body || {};\r\n                _this.pump.internelSend( ns, body, \"command-line\", compId );\r\n            };\r\n\r\n            /**\r\n             * @method a.pulse.event\r\n             */\r\n            ns.pulse[ \"event\" ] = function( ns, body, compId ){\r\n                if( arguments.length === 0 ){\r\n                    return \"USAGE: a.pulse.event( 'pumpco.pulse.name', { 'body':'something' }, 'component-id' );\";\r\n                }\r\n\r\n                body = body || {};\r\n                _this.pump.internelSend( ns, body, \"command-line\", compId );\r\n            };\r\n        };\r\n\r\n/**\r\n * SITE, PLACE, SPACE & COG\r\n */\r\n        /**\r\n         * @method listCameletFeature\r\n         * Helper method to list camelet features by name. Accepts the Switch \"h\" for human readable.\r\n         * @return [object || \"\"]\r\n         */\r\n        Console.prototype.listServiceFeature = function( feature, switches, matchFn ){\r\n            var result = [];\r\n\r\n            matchFn = matchFn || function( item ){ return true; };\r\n\r\n            // The feature is a Knockout property to need to execute it.\r\n            var _feature = _this.model[ feature ]();\r\n\r\n            if( switches.indexOf(\"h\") >= 0 ){\r\n                result = [];\r\n                for( var i=0; i<_feature.length; i++){\r\n                    if( matchFn( _feature[ i ] ) )\r\n                        result.push( _feature[ i ].name );\r\n                }\r\n            } else {\r\n                for( var i=0; i<_feature.length; i++){\r\n                    if( matchFn( _feature[ i ] ) )\r\n                        result.push( _feature[ i ] );\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        /**\r\n         * @method addSeriveCommands\r\n         * Adds the pump based commands to the \"a\" console interface.\r\n         */\r\n        Console.prototype.addServiceCommands = function( ns ){\r\n\r\n            /**\r\n             * @method a.list.sites\r\n             * lists all of the currently loaded sites\r\n             * e.g. a.list.sites(\"h\")\r\n             */\r\n            ns.list[ \"sites\" ] = function( switches ){\r\n                switches = switches || \"\";\r\n                return _this.listServiceFeature( \"sites\", switches );\r\n            };\r\n\r\n            /**\r\n             * @method a.specific.site\r\n             * gets a place by id\r\n             * e.g. a.specific.site(\"4dca52ee6ef96cfa2bc2b10f\",\"h\")\r\n             */\r\n            ns.specific[ \"site\" ] = function( id, switches ){\r\n                switches = switches || \"\";\r\n                var site = _this.listServiceFeature( \"sites\", switches, function( item ){ if( item.id === id ) return true; } );\r\n                return site;\r\n            };\r\n\r\n            /**\r\n             * @method a.list.places\r\n             * lists all of the currently loaded places\r\n             * e.g. a.list.places(\"h\")\r\n             */\r\n            ns.list[ \"places\" ] = function( switches ){\r\n                switches = switches || \"\";\r\n                return _this.listServiceFeature( \"places\", switches );\r\n            };\r\n\r\n            /**\r\n             * @method a.specific.place\r\n             * gets a place by id\r\n             * e.g. a.specific.place(\"4dca52ee6ef96cfa2bc2b10f\",\"h\")\r\n             */\r\n            ns.specific[ \"place\" ] = function( id, switches ){\r\n                switches = switches || \"\";\r\n                var place = _this.listServiceFeature( \"places\", switches, function( item ){ if( item.id === id ) return true; } );\r\n                return place;\r\n            };\r\n\r\n            /**\r\n             * @method a.list.spaces\r\n             * lists all of the currently loaded spaces\r\n             * e.g. a.list.spaces(\"h\")\r\n             */\r\n            ns.list[ \"spaces\" ] = function( switches ){\r\n                switches = switches || \"\";\r\n                return _this.listServiceFeature( \"spaces\", switches );\r\n            };\r\n\r\n            /**\r\n             * @method a.specific.space\r\n             * gets a space by id\r\n             * e.g. a.specific.cog(\"4dca52ee6ef96cfa2bc2b10f\",\"h\")\r\n             */\r\n            ns.specific[ \"space\" ] = function( id, switches ){\r\n                switches = switches || \"\";\r\n                var space = _this.listServiceFeature( \"spaces\", switches, function( item ){ if( item.id === id ) return true; } );\r\n                return space;\r\n            };\r\n\r\n            /**\r\n             * @method a.list.channels\r\n             * lists all of the cogs current loaded\r\n             * e.g. a.list.channels(\"h\")\r\n             */\r\n            ns.list[ \"cogs\" ] = function( switches ){\r\n                switches = switches || \"\";\r\n                return _this.listServiceFeature( \"cogs\", switches );\r\n            };\r\n\r\n            /**\r\n             * @method a.specific.cog\r\n             * gets a cog by id\r\n             * e.g. a.specific.cog(\"4dca52ee6ef96cfa2bc2b10f\",\"h\")\r\n             */\r\n            ns.specific[ \"cog\" ] = function( id, switches ){\r\n                switches = switches || \"\";\r\n                var cog = _this.listServiceFeature( \"cogs\", switches, function( item ){ if( item.id === id ) return true; } );\r\n                return cog;\r\n            };\r\n\r\n        };\r\n\r\n        /**\r\n         * @method addCogCommands\r\n         * Adds Cog specific commands for stopping / starting inline\r\n         */\r\n        Console.prototype.addCogCommands = function( ns ){\r\n\r\n            // Add the API help\r\n            this.addHelp( \"a.cog.edit(cog-id);\", \"Enables a cog for editing ( pops up the code for viewing and editing ) \" );\r\n            this.addHelp( \"a.cog.rerun();\", \"Reboots the cog, uses the last id used for edit as the cog to rerun.\" );\r\n\r\n            ns.cog._id      = undefined;\r\n            ns.cog._editor  = undefined;\r\n\r\n            /**\r\n             * @method a.specific.cog\r\n             * gets a cog by id\r\n             * e.g. a.specific.cog(\"4dca52ee6ef96cfa2bc2b10f\",\"h\")\r\n             */\r\n            ns.cog[ \"reboot\" ] = function( id, switches ){\r\n                switches = switches || \"\";\r\n                id = id || ns.cog._id;\r\n\r\n                if( !id )\r\n                    return \"no cog found to reboot\";\r\n\r\n                ns.cog._editor.hide();\r\n\r\n                var result = _this.model.services.cog.reboot( id );\r\n\r\n                return result;\r\n            };\r\n\r\n\r\n            ns.cog[ \"edit\" ] = function( id ){\r\n                // Set the app id as the default one being currently edited.\r\n                ns.cog._id = id;\r\n\r\n                // Check if the editor is already available\r\n                if( !ns.cog._editor ){\r\n                    // Create the editor\r\n                    __webpack_require__.e(/*! AMD require */ 0).then(function() { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [ __webpack_require__(/*! apps/editor */ \"./src/apps/editor.js\") ]; (function( Editor ){\r\n                        ns.cog._editor = new Editor();\r\n\r\n                        ns.cog._editor.show();\r\n                        ns.cog.load( id );\r\n                    }).apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__);}).catch(__webpack_require__.oe);\r\n                } else {\r\n                    ns.cog._editor.show();\r\n                    ns.cog.load( id );\r\n                }\r\n            };\r\n\r\n\r\n            ns.cog[ \"load\" ] = function( id ){\r\n                var cog = _this.model.services.cog.find( id );\r\n\r\n                // Hardcoded for now\r\n                //ns.cog._editor.put( cog.script  );\r\n                ns.cog._editor.put( cog.html  );\r\n            };\r\n\r\n            ns.cog[ \"save\" ] = function(){\r\n                var cog = _this.model.services.cog.find( ns.cog._id );\r\n\r\n                // Hardcoded for now\r\n                var content = ns.cog._editor.take();\r\n                //cog.script = script;\r\n                cog.html = content;\r\n            };\r\n\r\n            ns.cog[ \"rerun\" ] = function(){\r\n                ns.cog.save();\r\n                ns.cog.reboot();\r\n\r\n                var cog = _this.model.services.cog.find( ns.cog._id );\r\n                _this.model.services.cog.spaceShown( { \"id\":cog.parentId } );\r\n            };\r\n\r\n        };\r\n\r\n        /**\r\n         * @method listCameletFeature\r\n         * Helper method to list camelet features by name. Accepts the Switch \"h\" for human readable.\r\n         * @return [object || \"\"]\r\n         */\r\n        Console.prototype.addKernelCommands = function( ns ){\r\n            ns.list[ \"api\" ] = function( id, switches ){\r\n                var result = this.kernel.invoke( \"kernel.list.api\", {} );\r\n                return result;\r\n            }.bind( this );\r\n\r\n            // AMONIS: 22/11/2016: Allow displaying of the version number\r\n            ns.info[ \"version\" ] = function(){\r\n                var result = this.kernel.invoke( \"kernel.get.info\", {} );\r\n                return result;\r\n            }.bind( this );\r\n        }\r\n\r\n        /**\r\n         * @method addCommand\r\n         * Allows new API methods to be added to the console.\r\n         * This assumes the \"a\" property exists.\r\n         */\r\n        Console.prototype.addAPI = function( ns, fn, scope ){\r\n            // Split the namespace in to parts\r\n            var nsStr = ns.split( \".\" );\r\n\r\n            // Set the pointer to the previously declare window.a property.\r\n            var pointer = this.aos;\r\n\r\n            // Loop through all of the names, bar the last one.\r\n            for( var i=0; i<nsStr.length-1; i++ ){\r\n                var name = nsStr[ i ];\r\n                if( pointer && pointer[ name ] ){\r\n                    pointer = pointer[ name ];\r\n                } else {\r\n                    pointer[ name ] = {};\r\n                    pointer = pointer[ name ];\r\n                }\r\n            }\r\n\r\n            // finally set the property to the desire function\r\n            var fnName = nsStr[ nsStr.length - 1 ];\r\n            pointer[ fnName ] = fn;\r\n        };\r\n\r\n        Console.prototype.toString = function(){\r\n            return this.name + \":\" + this.version;\r\n        };\r\n\r\n        // Return the Animal function\r\n        return Console;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/services/console.js?");

/***/ }),

/***/ "./src/services/contact.js":
/*!*********************************!*\
  !*** ./src/services/contact.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n    Events\r\n    An events controller for passing information between processing in the system.\r\n    Aimed at complex Aysnchronous events, not DOM events.\r\n    @author Andy Monis\r\n    {\"pulseHeader\":{\"componentId\":\"f022bf0796df450605d2bd2d\",\"mep\":\"inout\",\"pulseClass\":\"pumpCo.user.actor.details.request\",\"pulseId\":\"7D2E578B-6403-48E4-9F2F-B5C66C290E72\",\"pulseResponseTimeout\":\"5000\",\"pulseType\":\"command\",\"referenceId\":\"98ED1951-BB94-4C17-AF28-755658E0F6C2_service\",\"timestamp\":\"2014-09-05T15:12:26+0100\"},\"pulseBody\":{\"id\":\"0036ebcb69f670be00000001\"}}\r\n*/\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! knockout */ \"knockout\"), __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! mixins/endpoint */ \"./src/mixins/endpoint.js\"), __webpack_require__(/*! utils/hash */ \"./src/utils/hash.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko, events, Log, Endpoint, Hash ){\r\n        var _this;\r\n\r\n        // This runs before Main has been called.\r\n        Log.debug( \"services/contact\" );\r\n\r\n        /**\r\n         * Constructor\r\n         */\r\n        function Contact ( params ) {\r\n            _this = this;\r\n\r\n            this.name    = \"Contact\";\r\n            this.version = \"0.0.1\";\r\n\r\n            // @property kernel: Internal pointer to the kernel for OS level talkback & events.\r\n            this.kernel     = params.kernel;\r\n            // @property model: Internal pointer to the model to add Service model requirements to in oganised manner.\r\n            this.model      = params.model;\r\n            // @property pump: Internal pointer to the pump to allow pulsing and routing.\r\n            this.pump       = params.pump;\r\n            // @property runtime: Internal property set by the Kernel. Contains settings to determine how it is running.\r\n            this.runtime    = params.runtime || {};\r\n\r\n            // @property components: A list of components that have requested contacts before the service is ready.\r\n            this.components = {};\r\n\r\n            // Setup the Contact Service model.\r\n            // This model will hold a collection of Contacts per Place { \"place-is-1234\":[] }.\r\n            // There are some useful pointers for easy access also.\r\n            this.model.contacts     = this.contacts = {\r\n                \"notifyContacts\":   function(){\r\n                    this._readyContacts = true;\r\n                },\r\n                \"denotifyContacts\": function(){\r\n                    this._readyContacts = false;\r\n                },\r\n                \"readyContacts\":    function(){\r\n                    return this._readyContacts;\r\n                },\r\n                \"notifyActor\":      function(){\r\n                    this._readyActor = true;\r\n                },\r\n                \"ready\":    function(){\r\n                    if( this._readyContacts && this._readyActor )\r\n                        return true;\r\n                    else\r\n                        return false;\r\n                },\r\n                \"_readyContacts\":   false,                  // Flag to state whether a response has been received\r\n                \"_readyActor\":      false,                  // Flag to state whether a response has been received\r\n                \"user\":             undefined,              // The user who has authenticated\r\n                \"local\":            undefined,              // A pointer to the authenticated users place\r\n                \"actors\":           new Hash( \"uid\" )       // A pointer to the authenticated users place\r\n            };\r\n\r\n            // Store of requested circles.\r\n            this.model.circles      = this.circles = {};\r\n\r\n            // Mixin Bindable functionality\r\n            // AMONIS: 24/04/2015: I have moved away from the scanning idea for now. instead I am embedding\r\n            // contacts into any cog that wants them. This allos cogs to do what they want with contacts and\r\n            // the Service just continues dishing out pulses.\r\n            //__mixin( this, new Bindable( { \"getById\": this.getContactById } ) );\r\n\r\n            // Mixin Endpoint functionality\r\n            __mixin( this, new Endpoint( params ) );\r\n\r\n            this.initEndpoint( this.name, [\r\n                // AMONIS: 21/03/2017: Allow direct addition of contacts via a pulse\r\n                { \"className\":\"pumpCo.user.contact.add.request\",        \"targetName\":\"PumpHouse\" },\r\n                { \"className\":\"pumpCo.user.contact.add.response\",       \"targetName\":this.name },\r\n                { \"className\":\"exception.pumpCo.contactAdd.contactAlreadyExists\", \"targetName\":this.name },\r\n                { \"className\":\"pumpCo.user.contact.list.request\",       \"targetName\":\"PumpHouse\" },\r\n                { \"className\":\"pumpCo.user.contact.list.response\",      \"targetName\":this.name },\r\n                { \"className\":\"pumpCo.event.user.contact.list.updated\", \"targetName\":this.name },\r\n                { \"className\":\"pumpCo.event.user.contact.updated\",      \"targetName\":this.name },\r\n                { \"className\":\"pumpCo.user.actor.details.request\",      \"targetName\":\"PumpHouse\" },\r\n                { \"className\":\"pumpCo.user.actor.details.response\",     \"targetName\":\"Contact\" },\r\n\r\n                // Internal pulses to support existing Contacts implementation\r\n                { \"className\":\"internal.contact.list.request\",          \"targetName\":\"Contact\" },\r\n                { \"className\":\"internal.contact.list.response\",         \"targetName\":\"PumpHouse\" },\r\n                { \"className\":\"internal.contact.list.event\",            \"targetName\":\"PumpHouse\" },\r\n                // AMONIS: 21/03/2017: Internal pulse handlers for adding a contact directly\r\n                { \"className\":\"internal.user.contact.add.request\",      \"targetName\":this.name },\r\n                { \"className\":\"internal.user.contact.add.response\",     \"targetName\":\"PumpHouse\"},\r\n\r\n                // Internal pulses to support query for members of a Circle\r\n                { \"className\":\"internal.circle.list.request\",          \"targetName\":\"Contact\" },\r\n                { \"className\":\"internal.circle.list.response\",         \"targetName\":\"PumpHouse\" },\r\n                { \"className\":\"internal.circle.list.event\",            \"targetName\":\"PumpHouse\" },\r\n                { \"className\":\"pumpCo.user.circle.list.response\",      \"targetName\":\"Contact\" },\r\n                { \"className\":\"pumpCo.user.circle.list.request\",       \"targetName\":\"PumpHouse\" }\r\n            ] );\r\n\r\n            this.addPulseHandler( \"pumpCo.user.contact.add.response\",       this.userContactAddResponse );\r\n            this.addPulseHandler( \"pumpCo.user.contact.list.response\",      this.userContactListResponse );\r\n            this.addPulseHandler( \"pumpCo.user.actor.details.response\",     this.userActorDetailsResponse );\r\n            this.addPulseHandler( \"pumpCo.event.user.contact.list.updated\", this.eventUserContactListUpdated );\r\n            // AMONIS: 21/04/2015: Updated to listen specifically for when a single contact is updated.\r\n            this.addPulseHandler( \"pumpCo.event.user.contact.updated\",      this.eventUserContactListUpdated );\r\n\r\n            // Internal pulses to support existing Contacts implementation\r\n            this.addPulseHandler( \"internal.contact.list.request\",  \t\tthis.internalContactListRequest );\r\n            this.addPulseHandler( \"internal.user.contact.add.request\",      this.internalContactAddRequest );\r\n\r\n\t\t\t// Internal pulses to support query for members of a circle\r\n            this.addPulseHandler( \"internal.circle.list.request\",  \t\t\tthis.internalCircleListRequest );\r\n            this.addPulseHandler( \"pumpCo.user.circle.list.response\",  \t\tthis.externalCircleListResponse );\r\n\r\n            this.addPulseHandler( \"exception.pumpCo.contactAdd.contactAlreadyExists\",  \t\tthis.exceptionContactAlreadyExists.bind( this ) );\r\n\r\n            // EVENTS Triggered when a new Place is shown.\r\n            events.on( \"place.shown\",  function( params ){ this.placeShown( params ); },    this );\r\n            // EVENTS Triggered when a new User is loaded\r\n            events.on( \"user.loaded\",  function( params ){ this.userLoaded( params ); },    this );\r\n\r\n            // Register Kernel API calls\r\n            this.kernel.addApi( \"getUser\", this.getUser, this );\r\n            this.kernel.addApi( \"contacts.get.contacts\", this.getContactList, this );\r\n            this.kernel.addApi( \"contacts.get.contact.by.id\", function( params ){ return this.getContactById( params.id ); }, this );\r\n\r\n            // Add in the Legacy API for cogs\r\n            this.addLegacyAPI();\r\n\r\n            // Notify the Kernel that the service is ready,.\r\n            this.kernel.invoke( \"kernel.process.loaded\", { \"name\":this.name } );\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        Contact.prototype = {};\r\n\r\n/*\r\n * @DEPRECATED Ext V1 code\r\n */\r\n        Contact.prototype.addLegacyAPI = function(){\r\n            var me = this;\r\n\r\n            // Create UserUtils namespace\r\n            __ns( \"pumpco.interfaces.local\" );\r\n\r\n            /**\r\n             * @method ContactsInterface\r\n             * returns a mocked Contactspumpco.interfaces.localInterface\r\n             * This is created by the Cog.\r\n             */\r\n            pumpco.interfaces.local.ContactsInterface = function( config ){\r\n                var _pumpRef = config.pump;\r\n            \tvar _callback = config.loaded;\r\n\r\n                return {\r\n                    /**\r\n                     *\r\n                     */\r\n                    loadContacts: function(){\r\n                        // This method loaded the cards into the service.\r\n                        // Not required now, as contacts are loaded on Place Shown\r\n\r\n                        // AMONIS: 28-11-2014: Only call the callback if it exists. When using remote / locale this may not exist.\r\n                        if( _callback )\r\n                            _callback.call( this );\r\n                    },\r\n                    getAllContacts: function(){\r\n                    \t// Get the local contacts only\r\n                    \treturn me.getAllContacts( \"local\" );\r\n                    },\r\n                    getContactById: function( id ){\r\n                        var contact = me.getContactById.call( me, id );\r\n\r\n                        // Local contact service requests an actor if no contact is found for attached devices\r\n                        if( !contact ){\r\n                            me.actorRequest( id, _callback ); // Check for an actor from PH\r\n                        }\r\n\r\n                        return contact;\r\n                    },\r\n                    pulsed: function(){\r\n                        // Not required now, as contacts are loaded on Place Shown\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Create UserUtils namespace\r\n            __ns( \"pumpco.interfaces.remote\" );\r\n\r\n            /**\r\n             * @method ContactsInterface\r\n             * returns a mocked Contactspumpco.interfaces.localInterface\r\n             * This is created by the Cog.\r\n             */\r\n            pumpco.interfaces.remote.ContactsInterface = function( config ){\r\n            \tvar _pumpRef = config.pump;\r\n            \tvar _callback = config.loaded;\r\n\r\n                return {\r\n                    /**\r\n                     *\r\n                     */\r\n                    loadContacts: function(){\r\n                        // This method loaded the cards into the service.\r\n                        // Not required now, as contacts are loaded on Place Shown\r\n\r\n                        // AMONIS: 28-11-2014: Only call the callback if it exists. When using remote / locale this may not exist.\r\n                        if( _callback )\r\n                            _callback.call( this );\r\n                    },\r\n                    getAllContacts: function(){\r\n                    \t// Determine the current visible place ( who is being visited? )\r\n                        var place = _this.kernel.invoke( \"getPlace\", {} );\r\n                    \t// Get the contacts for this Place\r\n                        return me.getAllContacts( place.id );\r\n                    },\r\n                    getContactById: function( id ){\r\n                        return me.getContactById.call( me, id );\r\n                    },\r\n                    pulsed: function(){\r\n                        // Not required now, as contacts are loaded on Place Shown\r\n                    }\r\n                }\r\n            }\r\n        };\r\n/*\r\n * @DEPRECATED Ext V1 code\r\n */\r\n\r\n        /**\r\n         * ###registerComponent\r\n         * Registers that a component has made an internal request.\r\n         * This could be 'before' the contacts have returned, so we may need\r\n         * to call this back? when the list is updated\r\n         * @param  {type} compId\r\n         * @param  {type} placeId\r\n         * @return {type}         [description]\r\n         */\r\n        Contact.prototype.registerComponent = function( compId, placeId ){\r\n            this.components[ compId ] = placeId;\r\n        };\r\n\r\n        /**\r\n         * @method getContactById\r\n         * returns a full Contact from all contacts in the service by id\r\n         */\r\n        Contact.prototype.getContactById = function( id ){\r\n            var contact = this.findInAll( id );\r\n            return contact;\r\n        };\r\n\r\n        /**\r\n         * @method getAllContacts\r\n         * returns a full Contact List from all contacts\r\n         */\r\n        Contact.prototype.getAllContacts = function( key ){\r\n            return this.findAll( key );\r\n        };\r\n\r\n\t\tContact.prototype.findAll = function( key ){\r\n            var obj = [];\r\n\r\n            var list = this.contacts[ key ];\r\n            if( list ){\r\n            \t__.eachSync2( list.array(), function(item, index, collection){ obj.push( item ); } );\r\n            }\r\n\r\n            return obj;\r\n        };\r\n\r\n        Contact.prototype.findInAll = function( id ){\r\n            // Check to see if the Id is me first.\r\n            if( this.contacts.user && this.contacts.user.id === id )\r\n                return this.contacts.user;\r\n\r\n            // Otherwise check all of the contacts in the service\r\n            var obj = undefined;\r\n            for( var key in this.contacts ){\r\n                // Get the ContactArea ( usually a place )\r\n                var contactArea = this.contacts[ key ];\r\n\r\n                // Find in the contact area\r\n                if( contactArea && contactArea.find ){\r\n                    // Search in the collection if it is a Hash of users\r\n                    obj = contactArea.find( id );\r\n                    if( obj )\r\n                        break;\r\n                }\r\n            }\r\n            return obj;\r\n        };\r\n\r\n        /**\r\n         * @method userActorDetailsResponse\r\n         * Handles the response from the Contacts Pulse for a given request\r\n         */\r\n        Contact.prototype.userActorDetailsResponse = function( exchange ){\r\n            Log.debug( \"UserActorDetailsResponse\" );\r\n\r\n            var body = exchange.getPulseBody();\r\n            var header = exchange.getPulseHeader();\r\n\r\n            // The first response should be the request for the user of the system\r\n            if( !this.contacts.user )\r\n                this.contacts.user = body.actor[ 0 ];\r\n\r\n            // Update the local contacts\r\n            if( body.actor && body.actor.length >= 1 && this.contacts.local ){\r\n\r\n                var actor = body.actor[ 0 ];\r\n                actor.uid = actor.uid || actor.id; // Add a uid property to bring inline with contacts\r\n                this.contacts.actors.insert( actor );\r\n\r\n                if( this.actorRequestCallback ){\r\n                    this.actorRequestCallback();\r\n                    this.actorRequestCallback = undefined;\r\n                }\r\n            }\r\n\r\n            // Update the flag to state that the contacts are ready\r\n            this.contacts.notifyActor();\r\n\r\n            // run through any callbacks that are waiting.\r\n            // At this point it is unlikely that anyone is waiting, except in a single App, such as Conv Centre which requests the contacts straight away\r\n            // and may do that before the pulse has finished.\r\n            if( this.contacts.ready() )\r\n                this.pulseContactListToAll();\r\n        };\r\n\r\n        /**\r\n         * @method eventUserContactListUpdated\r\n         * Handles the EVENT for when a contact has been updated or is new.\r\n         * Long winded as this requests the list. Should do an update as an enhancement.\r\n         */\r\n        Contact.prototype.eventUserContactListUpdated = function( exchange ){\r\n            Log.debug( \"eventUserContactListUpdated\" );\r\n\r\n            var body = exchange.getPulseBody();\r\n            var header = exchange.getPulseHeader();\r\n\r\n            if( body.status.code === \"success\" ){\r\n                // Only request the contacts list if the Contacts are Ready ( i.e. have already been loaded )\r\n                // Otherwise, that means there is likely a request already in transit. So just wait for that.\r\n                if( this.contacts.readyContacts() === true ){\r\n                    this.contacts.denotifyContacts();\r\n\r\n                    // Request the contacts list as there has been a change\r\n                    this.requestContactList();\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###hasPlaceContacts\r\n         * Returns a collection of contacts or undefined.\r\n         * Useful for checking if contacts have been loaded for a place.\r\n         * @params {string}  placeId\r\n         */\r\n        Contact.prototype.hasPlaceContacts = function( placeId ){\r\n            // Get the chached list of contacts ( could be undefined, null, [] or Array )\r\n            var placeContacts = this.contacts[ placeId ];\r\n            // Return a boolean referring to the result\r\n            return !!placeContacts;\r\n        };\r\n\r\n        /**\r\n         * ###addNewPlaceContacts\r\n         * This expects \"contacts\" to be a new list of contacts as returned by the pulse.\r\n         * Therefore the current store is completely overwritten with these results. If contacts get larger\r\n         * we may want to look at incremental updates.\r\n         * @params {string}  placeId\r\n         * @params [contact] contacts\r\n         */\r\n        Contact.prototype.addNewPlaceContacts = function( placeId, contacts ){\r\n            var placeContacts;\r\n            if( !this.contacts[ placeId ] ){\r\n                // Create a new ObservableHash and populate\r\n                placeContacts = this.contacts[ placeId ] = new Hash( \"uid\" );\r\n            } else {\r\n                placeContacts = this.contacts[ placeId ];\r\n            }\r\n\r\n            // Remove all existing items from the collection.\r\n            placeContacts.empty();\r\n\r\n            // Add all the existing items back to the collection.\r\n            for( var i=0; i<contacts.length; i++ ){\r\n                placeContacts.push( contacts[ i ] );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @method userContactListResponse\r\n         * Handles the response from the Contacts Pulse for a given request\r\n         */\r\n        Contact.prototype.userContactListResponse = function( exchange ){\r\n            Log.debug( \"UserContactListResponse\" );\r\n\r\n            var body = exchange.getPulseBody();\r\n            var header = exchange.getPulseHeader();\r\n\r\n            // Get the placeId from the overridden referenceId\r\n            var placeId = header.referenceId.substring( \"routing-override::Contact-\".length );\r\n            if( placeId ){\r\n                // Store the contacts against a Place Id\r\n                this.addNewPlaceContacts.call( this, placeId, body.contacts );\r\n\r\n                // Get the Owners place\r\n                var ownersPlace = this.kernel.invoke( \"place.get.owners\", {} );\r\n                // AMONIS: 27/09/2016: If this is the owners place ( the id's match ) update the shortcut reference.\r\n                // Set an easy access point to the users contacts. They can be accessed either via CompId or accessor [\"user\"]\r\n                if( ownersPlace && ownersPlace.id === placeId ){\r\n                    this.contacts.local = this.contacts[ placeId ];\r\n                }\r\n            }\r\n            // Update the flag to state that the contacts are ready\r\n            this.contacts.notifyContacts();\r\n\r\n            // run through any callbacks that are waiting.\r\n            // At this point it is unlikely that anyone is waiting, except in a single App, such as Conv Centre which requests the contacts straight away\r\n            // and may do that before the pulse has finished.\r\n\r\n            // AMONIS: 11/04/2016: Removed the (PUSH) update and instead simply reply on the Event (below).\r\n            // Notify the cogs of an update and let them get it if they want.\r\n            // if( this.contacts.ready() )\r\n            //     this.pulseContactListToAll();\r\n\r\n            // Send an Internal pulse to notify that the contacts have been updated.\r\n            this.pulse( \"internal.contact.list.event\", { \"type\": \"updated\" } );\r\n        };\r\n\r\n        /**\r\n         * @method getUser\r\n         * Fired by PlaceService, when the Users Place is shown.\r\n         * At this point we must be logged in, then we need to get the \"contacts app\" for this\r\n         * place and load the contacts using that componentId.\r\n         */\r\n        Contact.prototype.getUser = function( place ){\r\n            var user = this.contacts.user;\r\n            return user;\r\n        };\r\n\r\n        /**\r\n         * @method placeShown\r\n         * Fired by PlaceService, when the Users Place is shown.\r\n         * At this point we must be logged in, then we need to get the \"contacts app\" for this\r\n         * place and load the contacts using that componentId.\r\n         */\r\n        Contact.prototype.placeShown = function( json ){\r\n            Log.debug( \"Event:PlaceShown\" );\r\n\r\n            var place = json.place;\r\n\r\n            // AMONIS: 20/01/2017: Updated this as the check was invalid.\r\n            // The previous check, was an internal service check based around \"actor\"\"user.get.auth\" pulse,\r\n            // this kernel function, invokes the User Service to provide an accurate response.\r\n            var user = this.kernel.invoke( \"user.get.auth\" );\r\n            if( !user ){\r\n                Log.emergency( \"Contact.placeShown: User NOT authenticated.\" );\r\n                return -2;\r\n            }\r\n\r\n            // AMONIS: 11/04/2016: Only request the Place's Contacts on first access. From there on in wait for a\r\n            // pumpCo.event.user.contact.list.updated or similar to refresh the list.\r\n            if( !this.hasPlaceContacts( place.id ) ){\r\n                // AMONIS: 17/03/2017: Restrict requesting Contacts, to Places with the contactCompId property.\r\n                // This is only set if the Place has a Contacts App and therefore is capable of accessing contacts\r\n                if( place.contactCompId && place.contactCompId !== undefined ){\r\n                    // Request the contacts for this place.\r\n                    this.requestContactList( place );\r\n                }\r\n            }\r\n        };\r\n\r\n        Contact.prototype.requestContactList = function( place ){\r\n            // Use the placeId specified or default back to the current place.\r\n            if( !place ){\r\n                place = this.kernel.invoke( \"place.get.owners\", {} );\r\n            }\r\n\r\n            // Create the routing override\r\n            var refId = \"routing-override::Contact-\" + place.id;\r\n\r\n            // Send a Pulse with a specific refId of routing-override to send the results to Contact Service and not the CompId (default)\r\n                                                            // refId   // compId\r\n            // AMONIS: 08/11/2016: To test the contacts service, delay the loading, which forces the event to be used to update\r\n            //setTimeout( function(){\r\n            this.pulse( \"pumpCo.user.contact.list.request\", {}, refId, place.contactCompId );\r\n            //}.bind( this ), 100 );\r\n        };\r\n\r\n        /**\r\n         * @method userLoaded\r\n         * Fired by PlaceService, when the Users Place is shown.\r\n         * At this point we must be logged in, then we need to get the \"contacts app\" for this\r\n         * place and load the contacts using that componentId.\r\n         */\r\n        Contact.prototype.userLoaded = function( user ){\r\n            Log.debug( \"Event:UserLoaded\" );\r\n\r\n            this.actorRequest( user.profileBody.id  );\r\n        };\r\n\r\n        /**\r\n         * @method userLoaded\r\n         * Fired by PlaceService, when the Users Place is shown.\r\n         * At this point we must be logged in, then we need to get the \"contacts app\" for this\r\n         * place and load the contacts using that componentId.\r\n         */\r\n        Contact.prototype._actorRequests = [];\r\n        Contact.prototype.actorRequest = function( id, callback){\r\n            // Check to see that a request has not been made already for this id.\r\n            if( $.inArray( id, this._actorRequests ) === -1 ){\r\n                // Push the id being searched for into the request array\r\n                this._actorRequests.push( id );\r\n\r\n                // Set the actor callback for this request\r\n                this.actorRequestCallback = callback;\r\n\r\n                // Set the overide for the routing.\r\n                var refId = \"routing-override::Contact-\";\r\n\r\n                // Send a Pulse with a specific refId of routing-override to send the results to Contact Service and not the CompId (default)\r\n                this.pulse( \"pumpCo.user.actor.details.request\",\r\n                //  { \"id\":\"0036ebcb69f670be00000001\"} // refId   // compId\r\n                    { \"id\":id }, refId\r\n                );\r\n            }\r\n        };\r\n\r\n/*\r\n    INTERNAL Handling\r\n */\r\n        Contact.prototype.internalActorRequest = function( id, callback ){\r\n\r\n        };\r\n\r\n\r\n\r\n        Contact.prototype.internalContactListRequest = function( exchange ){\r\n            var header = exchange.getPulseHeader();\r\n            var body   = exchange.getPulseBody();\r\n\r\n            // Get a Place ID if one exists and request the Contacts ( defaults to local )\r\n            var placeId = __get( \"place.id\", body );\r\n            var results = this.getContactList( { placeId:placeId } );\r\n\r\n            this.registerComponent( header.componentId, placeId );\r\n\r\n            this.pulseContactListTo( results, header.componentId );\r\n        };\r\n\r\n        /**\r\n         * ### internalContactAddRequest\r\n         * Handle an internal request. Pass this directly on to the Pump, which\r\n         * will convert it from a remote contact request, to one scoped for the\r\n         * authenticated user.\r\n         * AMONIS: 21/03/2017\r\n         * @param  {type} exchange\r\n         * @return {type}          [description]\r\n         */\r\n        Contact.prototype.internalContactAddRequest = function( exchange ){\r\n            var header = exchange.getPulseHeader();\r\n            var body   = exchange.getPulseBody();\r\n\r\n            // Use the placeId specified or default back to the current place.\r\n            var place = this.kernel.invoke( \"place.get.owners\", {} );\r\n\r\n            // Create the routing override\r\n            var refId = \"routing-override::Contact-\" + header.componentId;\r\n\r\n            //          ns,                                body,    refId, compId\r\n            this.pulse( \"pumpCo.user.contact.add.request\", body, refId, place.contactCompId  );\r\n        };\r\n\r\n        /**\r\n         * ### userContactAddResponse\r\n         * Handle a response from the contact add, then send this directly back to the cog\r\n         * No cachine required here.\r\n         * AMONIS: 21/03/2017\r\n         */\r\n        Contact.prototype.userContactAddResponse = function( exchange ){\r\n            var header = exchange.getPulseHeader();\r\n            var body   = exchange.getPulseBody();\r\n\r\n            // Retrieve the componentId from the referenceId e.g. \"routing-override::Contact-2176352153751273\"\r\n            var parts = header.referenceId.split( \"Contact-\" );\r\n\r\n            // Pulse the cog directly\r\n            this.pulse( \"internal.user.contact.add.response\", body, undefined, parts[1] );\r\n        };\r\n\r\n        /**\r\n         * [pulseContactListToAll description]\r\n         * @return {type} [description]\r\n         */\r\n        Contact.prototype.pulseContactListToAll = function(){\r\n            for( var key in this.components ){\r\n                var results = this.getContactList( { placeId:this.components[ key ] } );\r\n\r\n                this.pulseContactListTo( results, key );\r\n            }\r\n\r\n            // clear out the pre-components\r\n            this.components = {};\r\n        };\r\n\r\n        Contact.prototype.pulseContactListTo = function( results, compId ){\r\n            if( this.contacts.ready ){\r\n                // Pulse the response to the cog, if the contacts are ready.\r\n                this.pulse( \"internal.contact.list.response\", results, undefined, undefined, compId );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###getContactList\r\n         * AMONIS: 27-08-2015: Moved to helper function to allow Kernel API call and Pulse to use same logic\r\n         */\r\n        Contact.prototype.getContactList = function( data ){\r\n            var contacts = [];\r\n            if( data.placeId ){\r\n                if( _this.contacts[ data.placeId ] )\r\n                    contacts = _this.contacts[ data.placeId ].array();\r\n            } else {\r\n                if( _this.contacts[ \"local\" ] )\r\n                    contacts = _this.contacts[ \"local\" ].array();\r\n            }\r\n\r\n            // Create the body for the response\r\n            var body = {\r\n                \"contacts\": contacts,\r\n                \"group\":    []\r\n            }\r\n\r\n            return body;\r\n        };\r\n\r\n        /**\r\n         * ###internalCircleListRequest\r\n         */\r\n        Contact.prototype.internalCircleListRequest = function( exchange ){\r\n            var header = exchange.getPulseHeader();\r\n            var body   = exchange.getPulseBody();\r\n\r\n            // Get the name and check that it is valid\r\n            var circleName = body.name;\r\n            if( !circleName )\r\n            \treturn -1;\r\n\r\n            // Check if a valid set of results exists for this circle\r\n            if( _this.circles[ circleName ] ){\r\n            \t_this.circles[ circleName ] = { \"_componentId\":header.componentId };\r\n            } else {\r\n            \t_this.circles[ circleName ] = { \"_componentId\":header.componentId };\r\n            }\r\n\r\n            // Create the body for the response\r\n            // var body = {\r\n            //     \"contacts\": contacts,\r\n            //     \"group\":    []\r\n            // }\r\n\r\n            // Pulse the response to the cog\r\n            this.pulse( \"pumpCo.user.circle.list.request\", body, undefined, undefined, header.componentId );\r\n        };\r\n\r\n        /**\r\n         *\r\n         */\r\n        Contact.prototype.externalCircleListResponse = function( exchange ){\r\n        \tvar header = exchange.getPulseHeader();\r\n            var body   = exchange.getPulseBody();\r\n\r\n            var circle = body.circle;\r\n\r\n\t\t\tif( _this.circles[ circle.name ] ){\r\n\t\t\t\t// Store the circle in the body to prevent overwriting _componentId;\r\n\t\t\t\t_this.circles[ circle.name ].body = circle;\r\n\r\n\t\t\t\t_this.internalCircleListResponse( circle.name );\r\n\t\t\t}\r\n        };\r\n\r\n        /**\r\n         *\r\n         */\r\n        Contact.prototype.internalCircleListResponse = function( circleName ){\r\n            var circle = _this.circles[ circleName ];\r\n\r\n            // Create the body for the response\r\n            var body = {\r\n                \"circle\": circle.body\r\n            }\r\n\r\n            // Pulse the response to the cog\r\n            this.pulse( \"internal.circle.list.response\", body, undefined, undefined, circle._componentId );\r\n        };\r\n\r\n        /**\r\n         * ### exceptionContactAlreadyExists\r\n         * Passes the exception on to the calling cog\r\n         * @param  {type} pulse\r\n         * @return {type}       [description]\r\n         */\r\n        Contact.prototype.exceptionContactAlreadyExists = function( exchange ){\r\n            var header = exchange.getPulseHeader();\r\n            var body   = exchange.getPulseBody();\r\n\r\n            // Retrieve the componentId from the referenceId e.g. \"routing-override::Contact-2176352153751273\"\r\n            var parts = header.referenceId.split( \"Contact-\" );\r\n\r\n            // Pulse the cog directly\r\n            this.pulse( \"internal.user.contact.add.exception\", body, undefined, parts[1] );\r\n        };\r\n\r\n/*\r\n    VISUAL BINDING: Knockout style binding for dynamic contacts\r\n */\r\n\r\n        Contact.prototype.scanforDataContacts = function( el ){\r\n\r\n        };\r\n\r\n        return Contact;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/services/contact.js?");

/***/ }),

/***/ "./src/services/drive.js":
/*!*******************************!*\
  !*** ./src/services/drive.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n    Drive\r\n    A virtual drive, loacated in the browser that all services load data from.\r\n    Allows for caching and abstracting the loading process.\r\n\r\n    ***********************************\r\n    I HAVE BEEN DOING A BIT OF THINKING ABOUT THIS AND THE APPROACH HERE IS SOUND, BUT THE\r\n    IMPLEMENTATION WRONG. THE DRIVE SHOULD ACCEPT A \"BEAN\" 9 ( PLACE, SPACE ETC ). THE BEAN\r\n    SHOULD PROVIDE THE \"REQUEST\" AND \"RESPONSE\" PULSES TO USE AND PROVIDE ALL OF THE\r\n    PROCESSING LOGIC.\r\n    THIS WOULD REPLACE \"LOADED\" AND \"PROCESS\" FUNCTIONALITY WITH BEAN DRIVEN CODE.\r\n    IT WOULD MAKE THE DRIVE EXTENDABLE AS IT WOULD ONLY WORK WITH BEANS, BUT ADDING A NEW ONE\r\n    WOULD BE AUTOMATICALLY CAHCHED.\r\n\r\n    ANDY MONIS: 22-09-2014\r\n    ***********************************\r\n\r\n    ##Offline Work\r\n    To  work offline, the Drive need to create temporary Beans from fixtures e.g. The Name, JS, HTML, CSS are specified in a manifest. This is loaded\r\n    and the data pulled from the local file system. The bean is stored in a temporary state ( without an id ) in the \"artifacts\" section;\r\n    If MLD is brought online again it needs to use the new launch=appname process\r\n\r\n    Drive Params\r\n    &drive=nocache  Sets the drive to ignore the offline storage\r\n    &drive=clear    Tells the drive to clear ( erase ) the offline storage\r\n    &drive=prefer   Tells the drive to populate the runtime cache from the local storage. This effectively removes the\r\n    need to pulse for the site spec.\r\n    &drive=prefer   Updated to request site spec with 'hash'. This allows sites to be refreshed ( see below )\r\n\r\n    ##hash\r\n    The ability to request a site using a hash, allows a site.spec to be requested and stored. Then\r\n    when the user next logs in, the cache is used. The Site.Spec is then lazilly loaded in the background\r\n    with the stored hash referenced. If the response contains a valid response i.e. the has is valid\r\n    then nothing happens, alterntively the new Site.Spec is returned, stored in the drive and the user\r\n    notified, detailing that the new site.spec will be used on next login.\r\n\r\n    Event driven\r\n    @author Andy Monis\r\n*/\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n        __webpack_require__(/*! jss */ \"./lib/jss/jss.js\"),\r\n        __webpack_require__(/*! core/events */ \"./src/core/events.js\"),\r\n        __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"),\r\n        __webpack_require__(/*! utils/i18n */ \"./src/utils/i18n.js\"),\r\n        __webpack_require__(/*! mixins/endpoint */ \"./src/mixins/endpoint.js\"),\r\n        __webpack_require__(/*! beans/site */ \"./src/beans/site.js\"),\r\n        __webpack_require__(/*! beans/place */ \"./src/beans/place.js\"),\r\n        __webpack_require__(/*! beans/space */ \"./src/beans/space.js\"),\r\n        __webpack_require__(/*! beans/cog */ \"./src/beans/cog.js\"),\r\n        __webpack_require__(/*! beans/user */ \"./src/beans/user.js\"),\r\n        __webpack_require__(/*! utils/store */ \"./src/utils/store.js\"),\r\n        __webpack_require__(/*! services/drive/cogloader */ \"./src/services/drive/cogloader.js\")\r\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( Jss, events, log, i18n, Endpoint, Site, Place, Space, Cog, User, /*Static, SiteSpecs,*/ Store, CogLoader ){\r\n        // This runs before Main has been called.\r\n        log.debug( \"services/drive\" );\r\n\r\n        var DRIVE_BUILD_KEY         = \"build\";\r\n        var DRIVE_AUTH_USER         = \"auth-user\";\r\n        var DRIVE_PUMPCO_ERROR_SITE = \"pumpco-error-site-01\";\r\n\r\n        /**\r\n         * Constructor\r\n         */\r\n        function Drive ( params ) {\r\n\r\n            this.name           = \"drive\";\r\n            this.version        = \"0.0.1\";\r\n            this.timestamp      = Date.now();\r\n\r\n            // @property kernel: Internal pointer to the kernel for OS level talkback & events.\r\n            this.kernel         = params.kernel;\r\n            // @property model: Internal pointer to the model to add Service model requirements to in oganised manner.\r\n            this.model          = params.model;\r\n            // @property pump: Internal pointer to the pump to allow pulsing and routing.\r\n            this.pump           = params.pump;\r\n            // @property runtime: Internal property set by the Kernel. Contains settings to determine how it is running.\r\n            this.runtime        = params.runtime || {};\r\n            // **property** {json} location: { fqdn:false, href:\"https://dev.cnect.to/pumpco\", origin:\"https://dev.cnect.to\", pumpface:\"pf-hydra/\" }\r\n            this.location       = params.location || {};\r\n\r\n            // @property _useMinimal: Internal flag to denote the use of \"minimal\" site specs.\r\n            this._useMinimal    = this.runtime.wrapped || false;\r\n            this._useMinimal    = this.runtime.minimal || false;\r\n\r\n            // @property _preferCache: Internal flag to denote preferring of offline cache.\r\n            this._preferCache   = params.driveParams === \"prefer\" ? true : false;\r\n\r\n            // AMONIS: 28/08/2015: Create Beans section to hold complete bean instances\r\n            this._beans         = {};\r\n\r\n            // Create the Cache for Site Specs\r\n            this._cache         = {};\r\n\r\n            this._callbacks     = {};\r\n\r\n            // Set the build version for this deployment\r\n            this.build          = params.build;\r\n\r\n            // Mixin Endpoint functionality\r\n            __mixin( this, new Endpoint( params ) );\r\n\r\n            this.initEndpoint( this.name, [\r\n                { \"className\":\"pumpCo.system.site.request\",         \"targetName\":\"PumpHouse\" },\r\n                { \"className\":\"pumpCo.system.site.response\",        \"targetName\":\"Drive\" },\r\n                { \"className\":\"pumpCo.user.site.request\",           \"targetName\":\"PumpHouse\" },\r\n                { \"className\":\"pumpCo.user.site.response\",          \"targetName\":\"Drive\" },\r\n                { \"className\":\"pumpCo.user.place.request\",          \"targetName\":\"PumpHouse\" },\r\n                { \"className\":\"pumpCo.user.place.response\",         \"targetName\":\"Drive\" },\r\n                { \"className\":\"pumpCo.user.profile.get.request\",    \"targetName\":\"PumpHouse\" },\r\n                { \"className\":\"pumpCo.user.profile.get.response\",   \"targetName\":\"Drive\" },\r\n\r\n                { \"className\":\"exception.system.site.request.noSiteId\",   \"targetName\":\"Drive\" },\r\n                { \"className\":\"exception.system.site.request.siteNotFound\",   \"targetName\":\"Drive\" }\r\n            ] );\r\n            this.addPulseHandler( \"pumpCo.system.site.response\",        this.systemSiteLoaded );\r\n            this.addPulseHandler( \"pumpCo.user.site.response\",          this.userSiteLoaded );\r\n            this.addPulseHandler( \"pumpCo.user.place.response\",         this.userPlaceLoaded );\r\n            this.addPulseHandler( \"pumpCo.user.profile.get.response\",   this.userLoaded );\r\n\r\n            this.addPulseHandler( \"exception.system.site.request.noSiteId\", this.userSiteException );\r\n            this.addPulseHandler( \"exception.system.site.request.siteNotFound\", this.userSiteException );\r\n\r\n            // Events Listened for\r\n            // events.on( \"drive.add.route\",   function( params ){ this.addRoute( params ); },     this );\r\n            events.on( \"drive.get.systemsite\",    function( params ){ this.getSystemSite( params ); },    this );\r\n            events.on( \"drive.get.appsystemsite\", function( params ){ this.getAppSystemSite( params ); }, this );\r\n            events.on( \"drive.get.usersite\",      function( params ){ this.getUserSite( params ); },      this );\r\n            events.on( \"drive.get.appsite\",       function( params ){ this.getAppSite( params ); },       this );\r\n            events.on( \"drive.get.place\",         function( params ){ this.getPlace( params ); },         this );\r\n            events.on( \"drive.get.space\",         function( params ){ this.getSpace( params ); },         this );\r\n            events.on( \"drive.get.cog\",           function( params ){ this.getCog( params ); },           this );\r\n            events.on( \"drive.get.user\",          function( params ){ this.getUser( params ); },          this );\r\n\r\n            events.on( \"pump.xhr-ping-error\",     function( params ){ this.xhrError( params ); },          this );\r\n\r\n            // **listener** \"security.auth.no.token\" clears out any drive related cache information\r\n            events.on( \"security.auth.no.token\",  function( params ){\r\n                this.cacheClear( \"drive.auth-user\" );\r\n            }, this );\r\n\r\n            // Register Kernel API calls\r\n            // usage: this.kernel.invoke( \"drive.cache\", { \"key\":\"123\", \"obj\":{} } );\r\n            this.kernel.addApi( \"drive.cache\",  function( params ){ this.cache( params.key, params.obj ); }, this );\r\n            this.kernel.addApi( \"drive.clear\",  function( params ){\r\n                params = params || \"*\";\r\n                this.cacheClear( params );\r\n            }, this );\r\n            // \"drive.clean\" a less aggressive clear. Only clears its own properties.\r\n            this.kernel.addApi( \"drive.clean\",   this.cacheClean , this );\r\n            this.kernel.addApi( \"drive.deauth\",  this.cacheRemoveCredentials , this );\r\n\r\n\r\n            // If \"clear\" or \"nocache\" then clear the localstorage to guarantee that this is not interferring.\r\n            if( !this._preferCache ){\r\n                this.cacheClear( \"drive.\" );\r\n            }\r\n\r\n            if( params.driveParams === \"clear\" ){\r\n                this.cacheClear( \"*\" );\r\n            }\r\n\r\n            // Populate the local \"cache\" from the local storage\r\n            if( this._preferCache ){\r\n                // Check the build version ( clear the cache if this in a new upgraded app )\r\n                var build = Store.get( DRIVE_BUILD_KEY );\r\n\r\n                if( !build || build !==  this.build ){\r\n                    // This looks like a new deployment so clear cache.\r\n                    this.cacheClear( \"*\" );\r\n\r\n                    // Store the current build no.\r\n                    Store.set( DRIVE_BUILD_KEY, this.build );\r\n                }\r\n\r\n                // Load the Cache\r\n                this.cacheLoad();\r\n            }\r\n\r\n            // AMONIS: 02/09/2015: Don't notify ready here, as this is done async in \"onready\"\r\n            this.onready();\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        Drive.prototype = {};\r\n\r\n        /**\r\n         * ##onready\r\n         * Triggered by the Static loader ( which loads file async from the local directory. )\r\n         * Async notify that the Drive is ready to go.\r\n         */\r\n        Drive.prototype.onready = function(){\r\n            // Notify the Kernel that the service is ready,.\r\n            this.kernel.invoke( \"kernel.process.loaded\", { \"name\":this.name } );\r\n        };\r\n\r\n        Drive.prototype.CLASSMAP = {\r\n            // <Class name> : <method to call to create bean>\r\n            \"pumpCo.system.site.response\":      \"processSystemSite\",\r\n            \"pumpCo.user.site.response\":        \"processUserSite\",\r\n            \"pumpCo.user.profile.get.response\": \"processUser\",\r\n            \"pumpCo.user.place.response\":       \"processPlace\"\r\n        };\r\n\r\n        /**\r\n         * ###cacheClear\r\n         * Populates the cache from localstorage.\r\n         */\r\n        Drive.prototype.cacheLoad = function(  ){\r\n            // AMONIS: 13/01/2017: Clear the memory cache prior to re-loading\r\n            this[ \"_cache\" ] = {};\r\n\r\n            // Remove all of the drive. properties from the localstorage\r\n            var items = Store.getAll( \"drive.\" );\r\n\r\n            for( var key in items ){\r\n                // remove the \"drive.\" part of the key\r\n                var cacheKey = key.substring( 6 );\r\n\r\n                // Objectify the data from the JSON string.\r\n                var obj = JSON.parse( items[ key ] );\r\n\r\n                // Store the offline data in the runtime cache\r\n                this.cache( cacheKey, obj );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###cacheClear\r\n         * Clears the localstorage\r\n         */\r\n        Drive.prototype.cacheClean = function( selector ){\r\n            Store.delAllBut( \"drive\", [ DRIVE_BUILD_KEY, DRIVE_AUTH_USER, DRIVE_PUMPCO_ERROR_SITE ] );\r\n        };\r\n\r\n        /**\r\n         * ###cacheRemoveCredentials\r\n         * Clears the localstorage\r\n         */\r\n        Drive.prototype.cacheRemoveCredentials = function( selector ){\r\n            Store.del( \"drive.auth-user\" );\r\n        };\r\n\r\n        /**\r\n         * ###cacheClear\r\n         * Clears the localstorage\r\n         */\r\n        Drive.prototype.cacheClear = function( selector ){\r\n            selector = selector || \"drive.\";\r\n\r\n            // Remove all of the drive. properties from the localstorage\r\n            Store.del( selector );\r\n\r\n            this.cacheLoad();\r\n        };\r\n\r\n        /**\r\n         * ###cache\r\n         * Stores the object in the Internal (runtime) cache and the potentially the localstorage\r\n         * The name \"drive.\" is bolted on to allow keys to be identified with the service.\r\n         * @params {string} key the name to use to store the object\r\n         * @params {object} obj the object to store\r\n         */\r\n        Drive.prototype.cache = function( key, obj ){\r\n            // Test to see if the cache is populated first, store if nothing is currently set.\r\n            if( this[ \"_cache\" ][ key ] === undefined ){\r\n                // Store the item in the cache as it is not already set.\r\n                this[ \"_cache\" ][ key ] = obj;\r\n            }\r\n\r\n            // Store the object in localstorage ( if the _nocache value is false ( which it usually will be ) )\r\n            if( this._preferCache ){\r\n                Store.set( \"drive.\" + key, obj );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###addRoute\r\n         */\r\n        Drive.prototype.addRoute = function( params ){\r\n            log.debug( \"Drive.addRoute():[\" + params.ns + \":\" + params.type + \"]\" );\r\n        };\r\n\r\n        /* CALLBACK SUPPORT */\r\n        Drive.prototype.addCallback = function( id, fn, scope ){\r\n            this._callbacks[ id ] = { \"fn\":fn, \"scope\":scope };\r\n        };\r\n\r\n        Drive.prototype.getCallback = function( id ){\r\n            return this._callbacks[ id ];\r\n        };\r\n\r\n        Drive.prototype.delCallback = function( id ){\r\n            delete this._callbacks[ id ];\r\n        };\r\n\r\n        Drive.prototype.invokeCallback = function( bean, key, error ){\r\n            key = key || bean.id\r\n\r\n            var callback = this.getCallback( key );\r\n            if( callback ){\r\n                // Remove the callback once it have been used\r\n                this.delCallback( key );\r\n                // Call the callback\r\n                callback.fn.call( callback.scope, bean, error );\r\n            }\r\n        };\r\n\r\n        /*\r\n            JSONSelect Methods\r\n            JSONSelect is a mechanism that allows JSON to be queried in a similar way to CSS.\r\n            There are a number of benefits to this over the Find methods, notably that they are more\r\n            targetted and should therefore be more resilient.\r\n         */\r\n\r\n        /**\r\n         * @method find\r\n         * looks through existing cached specs to find an item.\r\n         */\r\n        Drive.prototype.find = function( obj, attr, id, parentId ){\r\n\r\n            // AMONIS: 12/02/2015: Fix for loading CRC place\r\n            // **skip** [string] A list of properties to skip ( to save time and avoid problems )\r\n            var skip = [ \"params\" ];\r\n\r\n            var value = undefined;\r\n\r\n            if ( the.isArray( obj ) ){\r\n                for( var key=0; key<obj.length; key++ ){\r\n                    // Call recursively with the parent Id\r\n                    var parent = obj.id || parentId;\r\n                    value = this.find( obj[ key ], attr, id, parent );\r\n                    if( value )\r\n                        break;\r\n                }\r\n            }\r\n            if( the.isObject( obj ) ){\r\n                for( var key in obj ){\r\n\r\n                    // Check that the key is not in the skip list.\r\n                    // This is important for place navigation where an ID was referenced in a param config that\r\n                    // duplicated the id of a place\r\n                    if( $.inArray( key, skip ) === -1 ){\r\n\r\n                        if( the.isObject( obj[ key ] ) || the.isArray( obj[ key ] ) ){\r\n                            // Call recursively with the parent Id\r\n                            var parent = obj.id || parentId;\r\n                            value = this.find( obj[ key ], attr, id, parent );\r\n                            if( value ){\r\n                                break;\r\n                            }\r\n\r\n                        } else {\r\n                            if( key === attr ){\r\n                                if( obj[ key ] === id ){\r\n                                    value = obj;\r\n                                    // Add the parent ID ( derived from structure )\r\n                                    value.parentId = parentId;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            return value;\r\n        };\r\n\r\n        // AMONIS: 22/05/2018: Code Coverage review. Not used.\r\n        // Drive.prototype.findAll = function( obj, attr, id, parentId ){\r\n        //     var values = [];\r\n        //\r\n        //     if ( the.isArray( obj ) ){\r\n        //         for( var key=0; key<obj.length; key++ ){\r\n        //             // Call recursively with the parent Id\r\n        //             var parent = obj.id || parentId;\r\n        //             var value = this.find( obj[ key ], attr, id, parent );\r\n        //             if( value )\r\n        //                 values.push( value );\r\n        //         }\r\n        //     }\r\n        //     if( the.isObject( obj ) ){\r\n        //         for( var key in obj ){\r\n        //             if( the.isObject( obj[ key ] ) || the.isArray( obj[ key ] ) ){\r\n        //                 // Call recursively with the parent Id\r\n        //                 var parent = obj.id || parentId;\r\n        //                 var value = this.find( obj[ key ], attr, id, parent );\r\n        //                 if( value ){\r\n        //                     values.push( value );\r\n        //                 }\r\n        //\r\n        //             } else {\r\n        //                 if( key === attr ){\r\n        //                     if( obj[ key ] === id ){\r\n        //                         value = obj;\r\n        //                         // Add the parent ID ( derived from structure )\r\n        //                         value.parentId = parentId;\r\n        //                         break;\r\n        //                     }\r\n        //                 }\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //\r\n        //     return values;\r\n        // };\r\n\r\n        // EVENT HANDLERS\r\n\r\n        /**\r\n         * ###xhrError\r\n         * Listen for XHR (SiteSpec) Errors from the pump.\r\n         * At this point the site spec request has received a 404 from the platform. If there is an outstanding\r\n         * site request we need to alert the user, that this could be\r\n         * 1) Their first access or\r\n         * 2) the cache has been cleared\r\n         * either way they are offline and need to go online to resolve.\r\n         */\r\n        Drive.prototype.xhrError = function( params ){\r\n            var pulseClass = __get( \"request.pulseHeader.pulseClass\", params );\r\n            // Process any 404's for system.site.request\r\n            if( pulseClass === \"pumpCo.system.site.request\" ){\r\n                // Get the \"siteId\" from the pulse ( that is used to key the callback by the drive )\r\n                var siteId = __get( \"request.pulseBody.siteId\", params );\r\n\r\n                // Invoke the callback with no bean specified\r\n                this.invokeCallback( undefined, siteId, \"404\" );\r\n            }\r\n        };\r\n\r\n        // @params : { \"spec\":spec, \"fn\":this.loaded, \"scope\":this }\r\n        Drive.prototype.getSystemSite = function( params ){\r\n            // Add the callback for the requested SiteId\r\n            this.addCallback( params.id, params.fn, params.scope );\r\n\r\n            var refId = the.generateUuid();\r\n\r\n            // Minimal pulls the site spec without the JS, CSS, HTML for local apps\r\n            params.minimal = this._useMinimal ? \"true\" : \"false\";\r\n\r\n            if( this._cache[ params.id ] ){\r\n                log.debug( \"getSystemSite(): get site[\" + params.id  + \"] from cache.\" );\r\n                // Get from Cache\r\n                this.processSystemSite( this._cache[ params.id ] );\r\n            } else {\r\n                log.debug( \"getSystemSite(): load site[\" + params.id  + \"] from pumphouse.\" )\r\n                // Request from PumpHouse\r\n                this.loadSystemSite( params );\r\n            }\r\n\r\n        };\r\n\r\n        // @params : { \"spec\":spec, \"fn\":this.loaded, \"scope\":this }\r\n        Drive.prototype.getUserSite = function( params ){\r\n            // Add the callback for the requested SiteId\r\n            this.addCallback( params.id, params.fn, params.scope );\r\n\r\n            var refId = the.generateUuid();\r\n\r\n            // Minimal pulls the site spec without the JS, CSS, HTML for local apps\r\n            params.minimal = this._useMinimal ? \"true\" : \"false\";\r\n\r\n            // Get the Site Id\r\n            if( this._cache[ params.id ] ){\r\n                log.debug( \"getUserSite(): get site[\" + params.id  + \"] from cache.\" );\r\n                // Get from Cache\r\n                var site = this._cache[ params.id ];\r\n                this.processUserSite( site );\r\n\r\n                // AMONIS: 07/12/2016: Set the Hash ( either a cached one or a default )\r\n                params.hash = __get( \"hash\", site ) || \"no-hash\";\r\n\r\n                // AMONIS: 07/12/2016: Set a reference Id. This is used in userSiteLoaded() to process ( cache if required and alert the user )\r\n                params.refId = \"hash=\" + params.hash;\r\n\r\n                // AMONIS: 07/12/2016: Refresh User Site ( using the Hash )\r\n                this.loadUserSite( params );\r\n\r\n            } else {\r\n                log.debug( \"getUserSite(): load site[\" + params.id  + \"] from pumphouse.\" )\r\n                // Request from PumpHouse\r\n                this.loadUserSite( params );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###getAppSite\r\n         * Request an static Application Site\r\n         * 07/09/2015\r\n         */\r\n        // @params : { \"spec\":spec, \"fn\":this.loaded, \"scope\":this }\r\n        Drive.prototype.getAppSite = function( params ){\r\n\r\n            // Add the callback for the requested SiteId\r\n            this.addCallback( params.id, params.fn, params.scope );\r\n\r\n            // Set a reference Id\r\n            params.refId = \"app=\" + params.app;\r\n\r\n            // Minimal pulls the site spec without the JS, CSS, HTML for local apps\r\n            params.minimal = this._useMinimal ? \"true\" : \"false\";\r\n\r\n            // Find site by Name first\r\n            // Request for a Site by Name can ONLY be a System Site\r\n\r\n            // var site = this._cache[ params.id ];\r\n            // Find the site by Owner.id\r\n            var site = Jss.direct( [ \"*\", \":return\", \"owner\", \">\", \"id:\" + params.id ], this._cache );\r\n\r\n            // Get the Site Id\r\n            if( site ){\r\n                log.debug( \"getUserSite(): get site[\" + site.id  + \"] from cache.\" );\r\n                // Get from Cache\r\n                this.processUserSite( site );\r\n            } else {\r\n                log.debug( \"getUserSite(): load site[\" + params.id  + \"] from pumphouse.\" )\r\n                // Request from PumpHouse\r\n                this.loadUserSite( params );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * ###getAppSite\r\n         * Request an static Application Site\r\n         * 07/09/2015\r\n         */\r\n        // @params : { \"spec\":spec, \"fn\":this.loaded, \"scope\":this }\r\n        Drive.prototype.getAppSystemSite = function( params ){\r\n\r\n            // Add the callback for the requested SiteId\r\n            this.addCallback( params.id, params.fn, params.scope );\r\n\r\n            // Set a reference Id\r\n            params.refId = \"app=\" + params.app;\r\n\r\n            // Minimal pulls the site spec without the JS, CSS, HTML for local apps\r\n            params.minimal = this._useMinimal ? \"true\" : \"false\";\r\n\r\n            // Find site by Name first\r\n            // Request for a Site by Name can ONLY be a System Site\r\n            var site = undefined;\r\n\r\n            // Find by Name first\r\n            if( params.app ){\r\n\t        \tfor( var key in this._cache ){\r\n\t        \t\tif( this._cache[ key ].name === params.app ){\r\n\t        \t\t\tsite = this._cache[ key ]; break;\r\n\t        \t\t}\r\n\t        \t}\r\n\t        }\r\n\r\n\t        // Find by Id next\r\n\t        if( !site ){\r\n\t        \tsite = this._cache[ params.id ];\r\n\t        }\r\n\r\n            // Get the Site Id\r\n            if( site ){\r\n                log.debug( \"getSystemSite(): get site[\" + site.id  + \"] from cache.\" );\r\n                // Get from Cache\r\n                this.processSystemSite( site );\r\n            } else {\r\n                log.debug( \"getSystemSite(): load site[\" + params.id  + \"] from pumphouse.\" )\r\n                // Request from PumpHouse\r\n                this.loadSystemSite( params );\r\n            }\r\n\r\n        };\r\n\r\n        Drive.prototype.getPlace = function( params ){\r\n            params = params || {};\r\n\r\n            // Add the callback for the requested SiteId ( hardcode to common call for places )\r\n            this.addCallback( \"place-loaded\", params.fn, params.scope );\r\n\r\n            // Get by Id\r\n            log.info( \"Place: Getting [\" + params.id + \"] from drive.\" )\r\n\r\n            //JSONSelect.match( ':has ( :root > .id:val(\"0499e8e77f717b7100000001\") )', this._cache )\r\n            //var sel = ':has ( :root > .id:val(\"' + params.id + '\") )';\r\n            //var spec = JSONSelect.match( sel, this._cache );\r\n\r\n            log.debug( '287: this.find( this._cache, \"id\", ' + params.id + ' ) )' );\r\n            var spec = this.find( this._cache, \"id\", params.id );\r\n            if( !spec && params.ownerId ){\r\n                for( var key in this._cache ){\r\n                    var cached = this._cache[ key ];\r\n                    if( cached.owner && cached.owner.id && cached.owner.id === params.ownerId ){\r\n                        spec = cached;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Get the Site Id\r\n            if( spec && !params.refresh ){\r\n                // Get from Cache\r\n                this.processPlace( spec);\r\n            } else {\r\n                // Toast a message\r\n                this.kernel.invoke( \"toast.show\", { \"msg\":i18n.resolve( \"place-loading-msg\" ) } );\r\n\r\n                var place = params.place;\r\n\r\n                var key = the.generateUuid();\r\n                // this.addCallback( key, params.fn, params.scope );\r\n\r\n                //          namespace                    pulse                  refId\r\n                this.pulse( \"pumpCo.user.place.request\", place.getPulseBody(),  key );\r\n                // PLACE REQUEST HERE ( not implemented )\r\n            }\r\n        };\r\n\r\n        Drive.prototype.getSpace = function( params ){\r\n            var key = \"id\";\r\n            if( !params.id )\r\n                key = \"name\";\r\n\r\n            var spec = undefined;\r\n\r\n            // Add the callback for the requested SiteId\r\n            this.addCallback( key, params.fn, params.scope );\r\n\r\n            if( key === \"id\" ){\r\n                log.debug( '328:this.find( this._cache, \"id\", ' + params[ key ] + ' ) )' );\r\n                spec = this.find( this._cache, key, params[ key ] );\r\n\r\n            } else {\r\n                // Check for space by name\r\n                log.debug( '332:this.find( this._cache, \"id\", ' + params.parentId + ' ) )' );\r\n                var place = this.find( this._cache, \"id\", params.parentId );\r\n\r\n                // AMONIS: 27/01/2017: BUG Here.\r\n                // Caused by loading of Place / Space by find.\r\n                // It is finding the ID in anything, not just matching item.\r\n                // So in cache mode the Place ID is being matched in the Site if the user has logged in before.\r\n\r\n                // AMONIS: 27/01/2017: Add default for the Spaces array, for incase place.space is undefined.\r\n                var spaces = place.space || place.Home.space;\r\n                // ISSUE HERE\r\n                for( var i=0; i<spaces.length; i++ ){\r\n                    if( spaces[ i ].name === params[ key ] ){\r\n                        spec = spaces[ i ];\r\n                        spec.parentId = params.parentId;\r\n\r\n                        log.debug( \"services/drive.getSpace(): Found space [\" + spec.name + \"]\" );\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // If a space was found then skip over mobile detection.\r\n                if( !spec ){\r\n                    // Alternaively Check for mobile version\r\n                    for( var i=0; i<spaces.length; i++ ){\r\n                        var mobileName = params[ key ].toLowerCase();\r\n                        var dot = mobileName.indexOf( \".\" );\r\n                        mobileName = mobileName.substring( 0, dot + 1 ) + \"mobile\" + mobileName.substring( dot + 1 );\r\n\r\n                        if( spaces[ i ].name.toLowerCase() === mobileName ){\r\n                            spec = spaces[ i ];\r\n                            spec.parentId = params.parentId;\r\n\r\n                            log.debug( \"services/drive.getSpace(): Found space [\" + spec.name + \"]\" );\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            // Get the Site Id\r\n            if( spec ){\r\n                // Get from Cache\r\n                this.processSpace( spec, key );\r\n            } else {\r\n                var error = { \"ok\":false, \"key\":params[ key ] };\r\n                this.invokeCallback( undefined, key, error );\r\n\r\n                // SPACE REQUEST HERE ( not implemented )\r\n                // In the future not all spaces maybe returned initially,\r\n                // which would require potentially loading ( similar to places etc. )\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @method getCog\r\n         * Retrieves a Cog from the Drive\r\n         * @param params { id:\"\", fn:function, scope:object }\r\n         */\r\n        Drive.prototype.getCog = function( params ){\r\n            // Add the callback for the requested SiteId\r\n            this.addCallback( params.id, params.fn, params.scope );\r\n\r\n            //log.debug( '389: this.find( this._cache, \"id\", ' +  params.id + ' ) )' );\r\n            var spec = this.find( this._cache, \"id\", params.id );\r\n\r\n            // Get the Site Id\r\n            if( spec ){\r\n                // Get from Cache\r\n                this.processCog( spec);\r\n            } else {\r\n                // COG REQUEST HERE ( not implemented )\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @method getUser\r\n         * Retrieves a User from the Drive\r\n         * @param params { id:\"\", fn:function, scope:object, refresh:true|falee }\r\n         */\r\n        Drive.prototype.getUser = function( params ){\r\n\r\n            // Add the callback for the requested SiteId\r\n            this.addCallback( params.id, params.fn, params.scope );\r\n\r\n            log.debug( '410: this.find( this._cache, \"id\", ' +  params.id + ' ) )' );\r\n\r\n            if( params.refresh === true ){\r\n                // Remove the auth-user from the runtime cache ( not local-storage )\r\n                delete this._cache[ \"auth-user\" ];\r\n            }\r\n\r\n            // var spec = Jss.direct( [ \"*\", \":return\", \"id:\" + params.id ], this._cache );\r\n            var spec = Jss.direct( [ \"auth-user\", \":return\" ], this._cache );\r\n\r\n            // Get the Site Id\r\n            if( spec ){\r\n                // Get from Cache\r\n                this.processUser( spec);\r\n            } else {\r\n                // User REQUEST HERE\r\n                this.loadUser( params );\r\n            }\r\n        };\r\n\r\n        // EVENT HANDLERS\r\n\r\n        Drive.prototype.loadSystemSite = function( params ){\r\n            log.debug( \"Drive.loadSystemSite(\" + params.id + \");\" );\r\n\r\n            // Minimal pulls the site spec without the JS, CSS, HTML for local apps\r\n            var minimal = params.minimal || \"false\";\r\n\r\n            // Format of a SiteSpec Request { \"siteId\": \"002753672558db9c00000001\" }\r\n            var spec = {\r\n                \"siteId\": params.id,\r\n                \"site\": {\r\n                    \"minimal\": minimal\r\n                }\r\n            };\r\n\r\n\r\n            //          namespace                   pulse   refId\r\n            this.pulse( \"pumpCo.system.site.request\", spec, params.refId );\r\n        };\r\n\r\n        Drive.prototype.loadUserSite = function( params ){\r\n            log.debug( \"Drive.loadUserSite(\" + params.id + \");\" );\r\n\r\n            // Minimal pulls the site spec without the JS, CSS, HTML for local apps\r\n            var minimal = params.minimal || \"false\";\r\n\r\n            var spec = {\r\n                \"site\": {\r\n                    \"minimal\": minimal\r\n                }\r\n            };\r\n\r\n            // AMONIS: 07/12/2016: Updated to handle the hash refreshing\r\n            if( params.hash ){\r\n                spec.site.hash = params.hash;\r\n            }\r\n\r\n            //          namespace                   pulse   refId\r\n            this.pulse( \"pumpCo.user.site.request\", spec, params.refId );\r\n        };\r\n\r\n        Drive.prototype.loadUser = function( params ){\r\n            log.debug( \"Drive.loadUser(\" + params.id + \");\" );\r\n\r\n            var spec = { };\r\n            //          namespace                   pulse   refId\r\n            this.pulse( \"pumpCo.user.profile.get.request\", spec, params.ref );\r\n        };\r\n\r\n\r\n        Drive.prototype.systemSiteLoaded = function( exchange ){\r\n        \tvar header = exchange.getPulseHeader();\r\n            var body = exchange.getPulseBody();\r\n\r\n            this.loaded( exchange, function( body ){ return body.site.id; }, function( body ){ return body.site; } );\r\n        };\r\n\r\n        Drive.prototype.userSiteLoaded = function( exchange ){\r\n            function getKey( body ){\r\n                var place = body.site.place[ \"Home\" ] || body.site.place[ \"Mobile\" ];\r\n                return place.owner.id;\r\n            }\r\n\r\n            function getSite( body ){ return body.site; }\r\n\r\n            var header = exchange.getPulseHeader();\r\n            var body = exchange.getPulseBody();\r\n\r\n            if( header.referenceId.indexOf( \"hash=\" ) >= 0 ){\r\n                // AMONIS: 07/12/2016: Check for the hashMatch property ( which only exists if there is a match )\r\n                var match = __get( \"site.hashMatch\", body );\r\n                if( !match ){\r\n                    // Site Spec was updated, invalidate the cached version\r\n                    // AMONIS: 07/12/2016: Cache the new site ( replacing anything that was already there )\n                    this.cache( getKey( body ), getSite( body ) );\r\n                }\r\n            }\r\n            else {\r\n                // Carry on with loading\r\n                this.loaded( exchange, getKey, getSite );\r\n            }\r\n        };\r\n\r\n        Drive.prototype.userSiteException = function( exchange ){\r\n            var body = exchange.getPulseBody();\r\n            // Show the Snackbar for debugging purposes.\r\n            kernel.invoke( \"snackbar.show\", { msg:body.status.message } );\r\n        };\r\n\r\n        Drive.prototype.userPlaceLoaded = function( exchange ){\r\n            this.loaded( exchange, function( body ){\r\n                var place = body.place;\r\n                return place.id;\r\n            }, function( body ){ return body.place; } );\r\n        };\r\n\r\n        Drive.prototype.userLoaded = function( exchange ){\r\n            // this.loaded( exchange, function( body ){ return body.profileBody.username; }, function( body ){ return body; } );\r\n            this.loaded(\r\n                exchange,\r\n                function( body ){\r\n                    return \"auth-user\";\r\n                },\r\n                function( body ){\r\n                    return body;\r\n                }\r\n            );\r\n        };\r\n\r\n        Drive.prototype.loaded = function( exchange, keyFn, bodyFn ){\r\n            log.debug( \"Drive.loaded():\" );\r\n\r\n            if( !exchange )\r\n                return;\r\n\r\n            var head  = exchange.getPulseHeader();\r\n            var refId = head.referenceId;\r\n\r\n            var pulseClass = exchange.getPulseClass();\r\n            if( !pulseClass )\r\n                return;\r\n\r\n            var body = exchange.getPulseBody();\r\n            var id = keyFn( body );\r\n\r\n            // AMONIS: Important Cache the pulse results & to storage if drive=prefer\r\n            this.cache( id, bodyFn( body ) );\r\n\r\n            // NEED TO CHECK TO SEE WHAT TYPE IS RETURNED.\r\n            var methodName = this.CLASSMAP[ pulseClass ];\r\n            this[ methodName ]( this._cache[ id ], refId );\r\n        };\r\n\r\n        Drive.prototype.processSystemSite = function( siteSpec ){\r\n            var site = new Site();\r\n            site.update( siteSpec );\r\n\r\n            // Invoke callback for anyone who's waiting for this.\r\n            this.invokeCallback( site );\r\n        };\r\n\r\n        Drive.prototype.processUserSite = function( siteSpec, error ){\r\n            var site = undefined;\r\n            var id   = undefined;\r\n\r\n            if( siteSpec ){\r\n                site = new Site();\r\n                site.update( siteSpec );\r\n\r\n                // Invoke callback.\r\n                // Callback for user site is keyed on ownerId from user profile request\r\n                var place = siteSpec.place[ \"Home\" ] || siteSpec.place[ \"Mobile\" ];\r\n                id = place.owner.id;\r\n            } else {\r\n                id = error.id;\r\n            }\r\n            // override the default \"key\" with id in second parameter\r\n            this.invokeCallback( site, id );\r\n        };\r\n\r\n        Drive.prototype.processPlace = function( spec, refId ){\r\n            var place = new Place();\r\n            place.update( spec );\r\n\r\n            // Invoke callback for anyone who's waiting for this.\r\n            this.invokeCallback( place, \"place-loaded\" );\r\n        };\r\n\r\n        Drive.prototype.processSpace = function( spec, key ){\r\n            var space = new Space();\r\n            space.update( spec );\r\n\r\n            // Invoke callback for anyone who's waiting for this.\r\n            this.invokeCallback( space, key );\r\n        };\r\n\r\n        /**\r\n         * ###processCog\r\n         * Parses a valid Spec into a Cog Bean. At this point the Cog Spec\r\n         * should be mostly complete. A 'minimal' spec will require the dynamic\r\n         * loading of the JS/HTML/CSS. A full spec would include all of this.\r\n         * @param  {json} spec the fully define dcog spec\r\n         */\r\n        Drive.prototype.processCog = function( spec ){\r\n            function join( obj, joiner ){\r\n                var temp = [];\r\n                for( var key in obj ){\r\n                    temp.push( obj[ key ] );\r\n                }\r\n                return temp.join( joiner );\r\n            }\r\n\r\n            function test( prop ){\r\n                prop[ Object.keys( prop )[0] ] !== \"error\"\r\n                if( undefined !== prop ) {\r\n                    var keys = Object.keys( prop );\r\n                    if( keys.length > 0 && prop[ keys[ 0 ] ] !== \"error\" ){\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            var cog = new Cog();\r\n            cog.update( spec );\r\n\r\n            // AMONIS: 10/06/2016: Minimal pulls the site spec without the JS, CSS, HTML for local apps\r\n\r\n            // Use minimal is a global flag which is set to allow loading of Cog files aysnc ( rather than packaged in the SiteSpec )\r\n            if( this._useMinimal ){\r\n                // { fqdn:false, href:\"https://dev.cnect.to/pumpco\", origin:\"https://dev.cnect.to\", pumpface:\"pf-hydra/\" }\r\n                // At this point need to async load the HTML / JS / CSS\r\n                new CogLoader( { origin:this.location.origin, runtime:this.runtime } )\r\n                    .done( function( json ){     // Successful Promise\r\n                        log.debug( \"CogLoader Promise: \" + cog.id + \"-\" + cog.name );\r\n\r\n                        cog.isValid = true;\r\n\r\n                        // Async load JS **required**\r\n                        if( test( json.js ) ){\r\n                            cog.script  = join( json.js, \"\\n\\n\" );\r\n                        } else {\r\n                            cog.isValid = false;\r\n                        }\r\n\r\n                        // Async load HTML **required**\r\n                        if( test( json.html ) ){\r\n                            cog.html    = join( json.html, \"\\n\\n\" );\r\n                        } else {\r\n                            cog.isValid = false;\r\n                        }\r\n\r\n                        // Async load CSS **optional**\r\n                        if( test( json.css ) ){\r\n                            cog.style  = join( json.css, \"\\n\\n\" );\r\n                        }\r\n\r\n                        // Async load LANG **optional**\r\n                        if( test( json.lang ) ){\r\n                            var json = join( json.lang, \"\\n\\n\" );\r\n                            cog.lang  = JSON.parse( json );\r\n                        }\r\n\r\n                        // Load Cog successfully, invoke the callback\r\n                        this.invokeCallback( cog );\r\n                    }.bind( this ) )\r\n                    .load( cog );           // Call the load process\r\n            } else {\r\n                // Invoke callback for anyone who's waiting for this.\r\n                this.invokeCallback( cog );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * [function description]\r\n         * @param {JSON} spec [description]\r\n         * @return {JSON}      [description]\r\n         */\r\n        Drive.prototype.processUser = function( spec ){\r\n            var user = new User();\r\n            user.update( spec );\r\n\r\n            // Invoke callback for anyone who's waiting for this.\r\n            this.invokeCallback( user, \"auth-user\" );\r\n        };\r\n\r\n        /**\r\n         * [function description]\r\n         * @return {JSON} [description]\r\n         */\r\n        Drive.prototype.toString = function(){\r\n            return this.name + \":\" + this.version;\r\n        };\r\n\r\n        // Return the Animal function\r\n        return Drive;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/services/drive.js?");

/***/ }),

/***/ "./src/services/drive/cogloader.js":
/*!*****************************************!*\
  !*** ./src/services/drive/cogloader.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Pump API and Application 2.0.0.\n *\n * Copyright(c) 2016 Pumpco Inc.\n *\n  .\n  .\n */\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! jss */ \"./lib/jss/jss.js\"), __webpack_require__(/*! utils/loader */ \"./src/utils/loader.js\"), __webpack_require__(/*! beans/cog */ \"./src/beans/cog.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log, Jss, Loader, CogBean ){\n        /**\n         * #CogLoader\n         * @param {json} config: none\n         */\n        function CogLoader ( config ) {\n            // **private** {string} _origin: The origin for the url requests\n            this._origin = config.origin || \"http://no-origin-set\";\n\n            // **private** {string} _path Used to provide an explicit path ( rather than use the defualt )\n            this._path = config.path || null;\n\n            // **private** {function} _done: internal representation of done function\n            this._done = function( obj){ return this; };\n\n            // **private** {reference} _loader: reference to the loader\n            this._loader = new Loader( this.loadedCode.bind( this ) );\n\n            // **private** {boolean} _staticCode A simple flag to show where the CodeBase is being loaded from.\n            this._staticCode = false;\n\n            if( config.runtime && config.runtime.wrapped === true ){\n                // Set the flag to true, to show that Cog Code is loaded locally ( through cordova deployed app )\n                this._staticCode = true;\n\n                // TEST-MODE is used to allow the path to be tested outside of Cordova\n                if( config.testmode === true ){\n                    // **property** {string} workingUrl: The base url to retrieve the fixtures from ( calculated usually )\n                    this.workingUrl = this._origin + this._path;\n                } else {\n                    // **property** {string} workingUrl: The base url to retrieve the fixtures from ( calculated usually )\n                    this.workingUrl = \"fixtures\";\n                }\n\n            } else if( this._path !== null ) {\n                this.workingUrl = this._origin + this._path;\n\n            } else {\n                // **property** {string} workingUrl: The base url to retrieve the fixtures from ( calculated usually )\n                this.workingUrl = this._origin + \"/PumpHouse/fixture\";\n            }\n        };\n\n        // Create a new prototype object to base this on ( in this case a base object )\n        CogLoader.prototype = {};\n\n        /**\n         * ###done\n         * promise\n         * @param  {Function} fn [description]\n         */\n        CogLoader.prototype.done = function( fn ){\n            this._done = fn;\n\n            return this;\n        };\n\n        CogLoader.prototype.load = function( cog ){\n            // AMONIS: 07/09/2016: TEST HERE for local RESOURCES.JSON\n            if( this._staticCode === false ){\n                // Running online, so trust the online resources.json configuration\n                this.loadCode( cog );\n            } else {\n                // Load the resources first\n                this.loadResources( cog.name, function( resource ){\n\n                    // cog.update( resource );\n                    cog[ \"htmlUrl\" ]      = resource.htmlUrl    || \"\";\n                    cog[ \"langUrl\" ]      = resource.langUrl    || \"\";\n                    cog[ \"scriptUrl\" ]    = resource.scriptUrl  || [];\n                    cog[ \"styleUrl\" ]     = resource.styleUrl   || \"\";\n\n                    this.loadCode( cog );\n\n                }.bind( this ) );\n            }\n\n            return this;\n        };\n\n        /**\n         * ###stripComments\n         */\n        CogLoader.stripComments = function( input ){\n            var stripMultiline  = input.replace( /\\/\\*([\\s\\S])*?\\*\\//g, \"\" );\n\n            // AMONIS: 15/06/2015: Updated with better regex to check for :// ( e.g. a url ) and not strip, unlike comments //\n            // var stripSingleline = stripMultiline.replace( /(?:^|\\s)\\/\\/([^'\"]+?).*/g, \"\" );\n            var stripSingleline = stripMultiline.replace( /(?:^|\\s)\\/\\/([^'\"]*?).*/g, \"\" );\n\n            return stripSingleline;\n        };\n\n        /**\n         * ### parseResources\n         * This function creates an object that DuckTypes to a Cog,\n         * so that it can be fed directly into loadCode.\n         * @param  {type} json\n         * @return {type}      [description]\n         */\n        CogLoader.parseResources = function( json ){\n            // Strip any comments from resources ( not valid JSON )\n            json = CogLoader.stripComments( json );\n            // Parse the JSON in to a navigable object\n            var resources = JSON.parse( json );\n\n            // http://localhost:5000/PumpFaceSystem/ fixtures/System /navigationCog/ system/profileNav/ lang.json\n\n            // Add i PumpHouse style xyzUrl properties\n            resources[ \"htmlUrl\" ]      = resources.html;\n            resources[ \"langUrl\" ]      = resources.lang;\n\n            resources[ \"scriptUrl\" ]    = the.isArray( resources.script ) ? resources.script : [ resources.script ];\n            // resources[ \"scriptUrl\" ]    = resources.script;\n            resources[ \"styleUrl\" ]     = resources.style;\n\n            // return the DuckType\n            return resources;\n        };\n\n        /**\n         * ### loadResources\n         * ** NEW **\n         * @param  {Function} callback\n         * @return {type}              [description]\n         */\n        CogLoader.prototype.loadResources = function( cogName, callback ){\n            var files = { json:{} };\n\n            // build path from name\n            var parts = cogName.split( \".\" );\n            var cogPath = parts[ 0 ].toLowerCase() + \"/\" + parts[ 1 ];\n\n            var key = this.workingUrl + \"/\" + cogPath + \"/resources.json\";\n\n            // Use the appropriate path hierarchy\n            files.json[ key ] = undefined;\n\n            var loader = new Loader( function( response ){\n                // Parse the resources into a Cog DuckType to\n                var data = response.json[ key ];\n\n                // Ducktype the important parts from the resources\n                var resource = CogLoader.parseResources( data );\n\n                // Pass on to the Normal Cog Code Loader process\n                // Callback is used internally for loading resources first, otherwise\n                // call _done to return to calling application.\n                callback( resource );\n\n            }.bind( this ) );\n\n            // Start the loading process of resources.json.\n            loader.load( files );\n        };\n\n        /**\n         * ###loadCode\n         * Accepts a Cog Bean, and attempts to load the appropriate JS / CSS /\n         * HTML dynamically into the Cog Bean.\n         * Primarily for the minimal sitespec functionality.\n         *\n         * example of loading code dynamically\n         *\n         * ```js\n         * https://dev.cnect.to/PumpHouse/fixture/system/LoginCog/main.js\n         * ```\n         *\n         * @param  {beans.Cog} cog: a valid cog bean\n         * @return {beans.Cog} the cog with the extra JS / CSS / HTML resolved.\n         */\n        CogLoader.prototype.loadCode = function( cog ){\n            /**\n             * ###sanitizeUrl\n             * Maps paths from file:// to https://\n             * @param {JSON} url [description]\n             * @return {JSON}     [description]\n             */\n            function sanitizeUrl( url ){\n                if( !url || url === \"\")\n                    return url;\n\n                var re = /file:\\/(.)*fixtures\\//;\n\n                // \"file:/opt/PumpHouse/fixtures/core/system/LoginCog/main.js\"\n                // AMONIS: 15/09/2016: Resolution for if there is no valid url.\n                if( url.replace ){\n                    var result = url.replace( re, \"\" );\n\n                    // core/system/LoginCog/main.js\"\n                    var index = result.indexOf( \"/\" );\n                    result = result.substring( index );\n                }\n\n                return result || \"\";\n\n            }\n\n            var files = { js:{}, html:{}, css:{}, lang:{} };\n\n            // Request all JS\n            for( var i=0; i<cog.scriptUrl.length; i++ ){\n                // \"file:/opt/PumpHouse/fixtures/core/system/LoginCog/main.js\"\n                files.js[ this.workingUrl + sanitizeUrl( cog.scriptUrl[i] ) ] = undefined;\n            }\n\n            // Request HTML\n            var htmlUrl = sanitizeUrl( cog.htmlUrl );\n            if( htmlUrl ){ files.html[ this.workingUrl + htmlUrl ] = undefined; }\n\n            // Request CSS\n            var cssUrl = sanitizeUrl( cog.styleUrl );\n            if( cssUrl ){ files.css[ this.workingUrl + cssUrl ] = undefined; }\n\n            // Request LANG\n            // AMONIS: 13/06/2016: Lang requests are currently forbidden at the backend\n            var langUrl = sanitizeUrl( cog.langUrl );\n            if( langUrl ){ files.lang[ this.workingUrl + langUrl ] = undefined; }\n\n            // Create a new loader\n            var loader = new Loader( this.loadedCode.bind( this ) );\n\n            loader.load( files );\n            // this._loader.load( files );\n\n            return this;\n        };\n\n        /**\n         * [function description]\n         * @return {JSON} [description]\n         */\n        CogLoader.prototype.loadedCode = function( json ){\n            this._done( json );\n        };\n\n        // Return the Object function\n        return CogLoader;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/services/drive/cogloader.js?");

/***/ }),

/***/ "./src/services/environment.js":
/*!*************************************!*\
  !*** ./src/services/environment.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Pump API and Application 2.0.0.\n *\n * Copyright(c) 2015 Pumpco Inc.\n *\n  .\n  .\n */\n\n/**\n    #services.environment\n    The Environment service provides the bridge between the PumpFace OS and the outside world.\n    Specifically this is for when the OS is run in a contained environment, such as Cordova,\n    where a number of non-standard API's are available.\n    The Environment service provides a bridge, that checks for capabilities and can even emulate\n    them if neccessary.\n    @author Andy Monis\n*/\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(/*! services/abstract */ \"./src/services/abstract.js\"),\n    __webpack_require__(/*! mixins/endpoint */ \"./src/mixins/endpoint.js\"),\n    __webpack_require__(/*! core/events */ \"./src/core/events.js\"),\n    __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"),\n    __webpack_require__(/*! services/environment/browser */ \"./src/services/environment/browser.js\"),\n    __webpack_require__(/*! services/environment/cordova */ \"./src/services/environment/cordova.js\")\n  ], __WEBPACK_AMD_DEFINE_RESULT__ = (function(Abstract, Endpoint, events, log, Browser, Cordova) {\n\n    //  *_super* is a reference to the parent object should functionality need to be directly accessed.\n    var _super = Abstract.prototype\n\n    /**\n     * ###Clipboard\n     */\n    function Environment(config) {\n      // Construct this object from an instance of its parent.\n      Abstract.call(this, config);\n\n      // Set this apps name.\n      this.name = \"environment\";\n\n      // Mixin Endpoint functionality\n      __mixin(this, new Endpoint(config));\n\n      // Setup the Event listening for this service\n      this.initEvents();\n\n      // Initailise Browser Adapter Plugin\n      this.browser = new Browser();\n\n      // Initialise Cordova Adapter Plugin\n      this.cordova = new Cordova();\n\n      // Set a flag to store what environment this is running in.\n      this._current = this.cordova.available ? this.cordova : this.browser;\n\n      // Initialise the current environment ( just saves time checking browser & cordova when only one will be required. )\n      this._current.init();\n\n      // Notify that this service is ready.\n      this.ready(this.name);\n    };\n\n    // Create a new prototype object to base this on ( in this case a base object )\n    Environment.prototype = Object.create(_super);\n\n    /**\n     * ###initPulsing\n     * Initialises the pulsing for the Service to allow it to listen and respond to pulses.\n     */\n    Environment.prototype.initEvents = function() {\n      // Call the Endpoint Initialisation\n      this.initEndpoint(this.name, [{\n          \"className\": \"internal.environment.check.request\",\n          \"targetName\": this.name\n        },\n        {\n          \"className\": \"internal.environment.check.response\",\n          \"targetName\": \"PumpHouse\"\n        }\n      ]);\n\n      this.kernel.addApi(\"environment.get.env\", this.eventEnvironmentGetEnv, this);\n\n      // AMONIS: Clipboard: Internal pulses to support existing Contacts implementation\n      // this.addPulseHandler( \"internal.clipboard.copy.request\",  this.internalCopyRequest.bind( this ) );\n    };\n\n    /**\n     * ###supports\n     * Returns a list of potentially supported interfaces or the status of the inteface requested.\n     * Passes responsibility on the plugin.\n     * @param {JSON} feature [description]\n     * @return {JSON}         [description]\n     */\n    Environment.prototype.supports = function(feature) {\n      return this._current.supports(feature);\n    };\n\n    /**\n     * ###eventEnvironmentGetEnv\n     * Returns a collection detailing which environments are available\n     * @return {json} { browser:t/f, cordova:t/f }\n     */\n    Environment.prototype.eventEnvironmentGetEnv = function(params) {\n      return {\n        browser: this.browser.available,\n        cordova: this.cordova.available,\n\n        device: this._current.supports(\"device\"),\n        batteryStatus: this._current.supports(\"batteryStatus\"),\n        pwa: this._current.supports(\"pwa\")\n      };\n    };\n\n    /**\n     * [description]\n     * @param  {[type]} params [description]\n     * @return {[type]}        [description]\n     */\n    Environment.prototype.eventEnvironmentUserPrompt = function(params){\n      this._current.promptUser( params );\n    };\n\n    /**\n     * ###toString\n     */\n    Environment.prototype.toString = function() {\n      return this.name + \":\" + this.version;\n    };\n\n    // Return the Animal function\n    return Environment;\n  }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/services/environment.js?");

/***/ }),

/***/ "./src/services/environment/browser.js":
/*!*********************************************!*\
  !*** ./src/services/environment/browser.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Pump API and Application 2.0.0\n * Copyright(c) 2014 Pumpco Inc.\n\n\n */\n\n/**\n * @class Browser Plugin\n * The Browser plugin is used by the Environment Service to determine if the platform\n * is running in a Browser environment and what APIs are available.\n * At present the platform \"only\" runs in a browser environment, but that may not\n * neccessarily be the case, it could perhaps run in a NodeJS environment for example?\n * @author  Andy Monis\n * @date    01/09/2016\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! core/events */ \"./src/core/events.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(events) {\n\n    function Browser() {\n      this.name = \"browserplugin\";\n\n      // Declare the supported interfaces\n      this._supports = {\n        \"batteryStatus\": null,\n        \"device\": null,\n        \"pwa\": null\n      };\n\n      // **private** {ref} _installEvent Pointer to the install event for later invocation\n      this._installEvent = undefined;\n\n      // Check the device status\n      this.supports(\"device\");\n\n      // Test if running in a browser\n      this.available = this.isAvailable();\n    }\n\n    Browser.prototype = {};\n\n    /**\n     * ###default\n     * Initialises a;; of the default interfaces\n     * @return {JSON} [description]\n     */\n    Browser.prototype.init = function() {\n      // Check the availability of Browser features\n      this.supports(\"batteryStatus\");\n      this.supports(\"device\");\n      this.supports(\"pwa\");\n\n      // Must be running in Browser so attach handlers\n      this.attachEventHandlers();\n    };\n\n    /**\n     * ###attachEventHandlers\n     * Attach all appropriate Event handlers for the Cordova Environment.\n     * This is more important than the browser as things can be hidden /\n     * shown with or without lsoss of network.\n     * @return {type} [description]\n     */\n    Browser.prototype.attachEventHandlers = function() {\n      var hidden = null;\n      var visibilitychange = null;\n\n      // Browser compatibility checking\n      if (typeof document.hidden !== \"undefined\") {\n        // Opera 12.10 and Firefox 18 and Chrome 50+ and later support\n        hidden = \"hidden\";\n        visibilitychange = \"visibilitychange\";\n      } else if (typeof document.msHidden !== \"undefined\") {\n        hidden = \"msHidden\";\n        visibilitychange = \"msvisibilitychange\";\n      } else if (typeof document.webkitHidden !== \"undefined\") {\n        hidden = \"webkitHidden\";\n        visibilitychange = \"webkitvisibilitychange\";\n      }\n\n      // **document.visibilitychage** Fired by Browser when the App is put into the background ( tab switched etc ).\n      document.addEventListener(visibilitychange, function(evt) {\n        if (document[hidden] === true) {\n          // events.fire( \"platform.pause\" );\n        } else {\n          this.delayedEvent(\"platform.resume\", 1000);\n        }\n      }.bind(this), false);\n    };\n\n    /**\n     * ### delayedEvent\n     * Send an event with a delay\n     * @type {[type]}\n     */\n    Browser.prototype.delayedEvent = function(evt, delay) {\n      // Clear any existing resume timers\n      if (this._delayedEvent)\n        clearTimeout(this._delayedEvent);\n\n      // Set a new resume timer\n      this._delayedEvent = setTimeout(function() {\n        // Trigger an event to reshow the place\n        events.fire(\"platform.resume\");\n      }, delay);\n    }\n\n    /**\n     * ###isAvailable\n     * @return {Boolean} [description]\n     */\n    Browser.prototype.isAvailable = function() {\n      if (typeof window === 'undefined') {\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    /**\n     * ###supports\n     * @param {JSON} feature [description]\n     * @return {JSON}         [description]\n     */\n    Browser.prototype.supports = function(feature) {\n      if (feature) {\n        // Test if this is a feature we know how to query for.\n        if( this._supports[feature] === null ) {\n          console.log( \"supports \" + feature );\n          this._supports[feature] = this[\"test_\" + feature].call(this);\n          return this._supports[feature];\n        }\n      } else {\n        // Return a list of the supported features\n        return Object.keys(this._supports);\n      }\n    };\n\n    /**\n     * ###testBatteryStatus\n     * @return {JSON} [description]\n     */\n    Browser.prototype.test_batteryStatus = function() {\n      var batteryStatus = { level:\"na\" }\n      if (navigator.getBattery) {\n        batteryStatus.level = \"100%\";\n      }\n\n      return batteryStatus;\n    };\n\n    /**\n     * ###test_device\n     * @return {json} {model:string, cordova:string, platform:string, uuid:string, version:string }\n     */\n    Browser.prototype.test_device = function() {\n      var device = {\n        desktop: the.isDesktop,\n\n        // model:      the,\n        cordova: false,\n        // platform:   the.isWindows || the.isMac || the.isIos || the.isAndroid,\n        uuid: \"na\",\n        version: navigator.appVersion\n      };\n\n      return device;\n    }\n\n    /**\n     * ### test_pwa\n     * Determine if AOS is running in Pinned mode. This is a new special browser\n     * mode supported primarily on Android and Ios but more recently on windows\n     * that allows a WebApp to run as-if it is a Native App.\n     * @return {[type]} [description]\n     */\n    Browser.prototype.test_pwa = function() {\n      // Assume normal WebApp\n      var isPinned = false;\n\n      // Detect PWA in iOS\n      if (window.navigator.standalone === true) {\n        isPinned = true;\n      }\n      // Detect PWA in Chrome / Android\n      if (window.matchMedia('(display-mode: standalone)').matches === true) {\n        isPinned = true;\n      }\n\n      // Add event listener for \"beforeinstallprompt\" which is fired if PWA is valid\n      window.addEventListener(\"beforeinstallprompt\", function(evt) {\n        // Prevent Chrome 67 and earlier from automatically showing the prompt\n        evt.preventDefault();\n        // Capture the install event\n        this._installEvent = event;\n\n        console.log(\"ON: BeforeInstallPrompt\");\n\n        kernel.invoke( \"toast.okcancel\", {\n          msg:\"Install PWA\",\n          okFn:function(){\n            this._installEvent.prompt();\n          }.bind( this ),\n          cancelFn:function(){ /* no action required */ }\n        } );\n\n      }.bind(this), false);\n\n      window.addEventListener('appinstalled', function() {\n        console.log(\"ON: appinstalled\");\n      });\n\n      return {\n        isPinned: isPinned\n      };\n    };\n\n    /**\n     * ### promptUser\n     * @return {[type]} [description]\n     */\n    Browser.prototype.promptUser = function() {\n\n      // Wait for the user to respond to the prompt\n      this._installEvent.userChoice\n        .then( function(choiceResult){\n          if (choiceResult.outcome === 'accepted') {\n            console.log('User accepted the A2HS prompt');\n          } else {\n            console.log('User dismissed the A2HS prompt');\n          }\n          deferredPrompt = null;\n        });\n    };\n\n    return Browser;\n  }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/services/environment/browser.js?");

/***/ }),

/***/ "./src/services/environment/cordova.js":
/*!*********************************************!*\
  !*** ./src/services/environment/cordova.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Pump API and Application 2.0.0\n * Copyright(c) 2014 Pumpco Inc.\n\n\n */\n\n/**\n * @class Cordova Plugin\n * The Cordova plugin is used by the Environment Service to determine if the platform\n * is running in a Cordova environment and what APIs are available\n * @author  Andy Monis\n * @date    01/09/2016\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! mixins/endpoint */ \"./src/mixins/endpoint.js\"), __webpack_require__(/*! utils/store */ \"./src/utils/store.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log, Endpoint, Store ){\n\n        function Cordova ( config ) {\n            this.name       = \"cordovaplugin\";\n\n            this._supports = {\n                // All Standard Cordova capabilities\n                \"batteryStatus\":        \"undefined\", // Power levels on the device\n                \"camera\":               \"undefined\", // Access to device camera\n                \"console\":              \"undefined\", // Access to device debugging console\n                \"contacts\":             \"undefined\", // Access to the users contacts on the device / sim\n                \"device\":               \"undefined\", // Access to the device\n                \"deviceMotion\":         \"undefined\", // Access to the accelerometer\n                \"deviceOrientation\":    \"undefined\", // Access to the compass\n                \"dialogs\":              \"undefined\", // Access to device dialogs\n                \"fileSystem\":           \"undefined\", // Access to Cordova App filesystem / Device fiesystem\n                \"fileTransfer\":         \"undefined\", // Access to File Transfer between apps / devices\n                \"geolocation\":          'undefined', // Access to GPS features\n                \"globalisation\":        \"undefined\", // ?\n                \"inAppBrowser\":         \"undefined\", // Access to nested browser in the App...\n                \"media\":                \"undefined\", // Access to sound\n                \"mediaCapture\":         \"undefined\", // Access to record sound\n                \"networkInformation\":   \"undefined\", // Access to network status\n                \"splashScreen\":         \"undefined\", // Ability to show a cordova loading screen\n                \"statusBar\":            \"undefined\", // Access to the App statusBar\n                \"vibration\":            \"undefined\"  // Access to device vibration control\n            };\n\n            // Test if running in cordova\n            this.available = this.isAvailable();\n        }\n\n        Cordova.prototype = {};\n\n        /**\n         * ###default\n         * Initialises a;; of the default interfaces\n         * @return {JSON} [description]\n         */\n        Cordova.prototype.init = function(){\n            // Check the device status\n            this.supports( \"batteryStatus\" );\n            this.supports( \"device\" );\n\n            // Must be running in Cordova so attach handlers\n            this.attachEventHandlers();\n        };\n\n        /**\n         * ###attachEventHandlers\n         * Attach all appropriate Event handlers for the Cordova Environment.\n         * This is more important than the browser as things can be hidden /\n         * shown with or without lsoss of network.\n         * @return {type} [description]\n         */\n        Cordova.prototype.attachEventHandlers = function(){\n            function notifier( evt ){\n                events.fire( \"platform.\" + evt.type, evt );\n            };\n            function delayed( evt ){\n                if( this[ \"_delayed\" + evt ] )\n                    clearTimeout( this[ \"_delayed\" + evt ] );\n\n                setTimeout( function(){\n                    notifier.call( this, evt );\n                }.bind( this ), 1000 );\n            }\n            // **document.pause** Fired by Cordova when the App is put into the background.\n            // **document.resume** Fired by Cordova when the App is put into the foreground.\n            // **document.backbutton** Fired by Cordova when the software \"back\" button is pressed\n            // **document.menubutton** Fired by Cordova when the software \"menu\" button is pressed\n            // **document.volumeupbutton** Fired by Cordova when the software \"volumeup\" button is pressed\n            // **document.volumedownbutton** Fired by Cordova when the software \"volumendown\" button is pressed\n            var listeners = [ \"pause\", /*\"resume\",*/ \"backbutton\", \"menubutton\", \"volumeupbutton\", \"volumedownbutton\" ];\n\n            // Iterate over the handlers and attach a callback\n            for( var i=0; i<listeners.length; i++ ){\n                document.addEventListener( listeners[ i ], notifier.bind( this ), false );\n            }\n            document.addEventListener( \"resume\", delayed.bind( this ), false );\n        };\n\n        /**\n         * ###isAvailable\n         * Used to test if the environment thinks this is Cordova or not.\n         * @return {Boolean} true or false\n         */\n        Cordova.prototype.isAvailable = function(){\n            return !!window.cordova;\n        };\n\n        /**\n         * ###supports\n         * Returns a list of supported interfaces\n         * @return {JSON} [description]\n         */\n        Cordova.prototype.supports = function( feature ){\n            if( feature ){\n                // Test if this is a feature we know how to query for.\n                if( this._supports[ feature ] ){\n                    return this[ \"test_\" + feature ].call( this );\n                }\n            } else {\n                // Return a list of the supported features\n                return Object.keys( this._supports );\n            }\n        };\n\n        /**\n         * ###test_batteryStatus\n         * @return {JSON} [description]\n         */\n        Cordova.prototype.test_batteryStatus = function(){\n            if( this.available ){\n                if( this._supports.batteryStatus === \"undefined\" ){\n                    this._supports.batteryStatus = {\n                        level:\"100%\"\n                    };\n                    // TODO: Setup event handlers\n                }\n            }\n\n            return this._supports[ \"batteryStatus\" ];\n        };\n\n        /**\n         * ###test_device\n         * @return {json} { model:string, cordova:string, platform:string, uuid:string, version:string }\n         * { // example\n         * available: true\n         * cordova: \"5.1.0\"\n         * isVirtual: false\n         * manufacturer: \"LGE\"\n         * model: \"Nexus 5\"\n         * platform: \"Android\"\n         * serial: \"02a71539307c28e4\"\n         * uuid: \"51e14c9ebb79aa05\"\n         * version: \"6.0.1\"\n         * }\n         */\n        Cordova.prototype.test_device = function(){\n            if( this.available ){\n                if( this._supports.device === \"undefined\" ){\n                    // Test if the plugin is installed\n                    if( window.device ){\n                        this._supports.device = window.device;\n                    }\n                }\n            }\n\n            return this._supports.device;\n        };\n\n        return Cordova;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/services/environment/cordova.js?");

/***/ }),

/***/ "./src/services/header.js":
/*!********************************!*\
  !*** ./src/services/header.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n  .\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n        __webpack_require__(/*! aos.config */ \"./src/aos.config.js\"),\r\n        __webpack_require__(/*! knockout */ \"knockout\"),\r\n        __webpack_require__(/*! core/events */ \"./src/core/events.js\"),\r\n        __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"),\r\n        __webpack_require__(/*! mixins/endpoint */ \"./src/mixins/endpoint.js\"),\r\n        __webpack_require__(/*! beans/header */ \"./src/beans/header.js\"),\r\n        __webpack_require__(/*! bindings/header */ \"./src/bindings/header.js\"),\r\n        __webpack_require__(/*! text!templates/header.html */ \"./node_modules/text-loader/index.js!./views/header.html\"),\r\n        __webpack_require__(/*! notifyjs */ \"notifyjs\")\r\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( config, ko, events, log, Endpoint, Bean, Binding, html, Notify ){\r\n        // This runs before Main has been called.\r\n        log.debug( \"services/header\" );\r\n\r\n        var _this;\r\n\r\n        /**\r\n         * Header\r\n         * The header is pinned ( usually ) in the OS.\r\n         * This is an example of a Visual OS Service. Mostly Services are none visual.\r\n         */\r\n        function Header ( params ) {\r\n            _this = this;\r\n\r\n            // Allow the header template to be overridden by a param ( useful for testing )\r\n            var template = params.tmpl || html;\r\n\r\n            // Insert the header template into the document body.\r\n            $( \"#insert-template-header\" ).replaceWith( template );\r\n\r\n            this.name    = \"header\";\r\n            this.version = \"0.0.1\";\r\n\r\n            this.current = undefined;\r\n\r\n            // @property kernel: Internal pointer to the kernel for OS level talkback & events.\r\n            this.kernel     = params.kernel;\r\n            // @property model: Internal pointer to the model to add Service model requirements to in oganised manner.\r\n            this.model      = params.model;\r\n            // @property pump: Internal pointer to the pump to allow pulsing and routing.\r\n            this.pump       = params.pump;\r\n            // @property runtime: Internal property set by the Kernel. Contains settings to determine how it is running.\r\n            this.runtime    = params.runtime || {};\r\n\r\n             // @property _preferCache: Internal flag to denote preferring of offline cache.\r\n            this._appParams = params.appParams || undefined;\r\n\r\n            // Mixin Endpoint functionality\r\n            __mixin( this, new Endpoint( params ) );\r\n\r\n            this.initEndpoint( this.name, [\r\n                { \"className\":\"pumpCo.roadie.visit.request\",        \"targetName\":\"PumpHouse\" },\r\n                { \"className\":\"internal.system.io.update\",          \"targetName\":this.name },\r\n                // Sent by PH Notification Service\r\n                { \"className\":\"pumpCo.event.notification.new\",      \"targetName\":this.name },\r\n                // Sent by PFS Notification Cog\r\n                { \"className\":\"internal.event.notification.update\", \"targetName\":this.name }\r\n            ] );\r\n\r\n            // Add a new Observable for the Place Model\r\n            this.model.header = this.header = ko.observable(\r\n                new Bean( {\r\n                    \"appParams\":            this._appParams,\r\n                    \"signoutFn\":            this.signoutClicked.bind( this ),\r\n                    \"settingsFn\":           this.settingsClicked,\r\n                    \"contactsFn\":           this.contactsClicked,\r\n                    \"yourPlaceFn\":          this.yourplaceClicked,\r\n                    \"notificationsFn\":      this.notificationsClicked,\r\n                    \"helpFn\":               this.helpClicked,\r\n                    \"breadcrumbPlacesFn\":   this.breadcrumbPlacesClicked.bind( this )\r\n                } )\r\n            );\r\n\r\n            // **private** {boolean} _preferHidden: Property set by API events header.hide / header.show, that controls the preference\r\n            // to hide or show the header in the UI.\r\n            // AMONIS: 25/04/2018: Defaulted to false. The Space Service now actively\r\n            // shows / hides the header on every space show event.\r\n            this._preferHidden = true;\r\n\r\n            // Event Handlers\r\n            // internal.system.toast.update is fired by any cog that wants to alert a message to the user\r\n            this.addPulseHandler( \"internal.system.io.update\", this.onIoUpdate );\r\n\r\n            // Update the notifications icon when new items are sent for PH\r\n            this.addPulseHandler( \"pumpCo.event.notification.new\",      this.onNewNotifications );\r\n            this.addPulseHandler( \"internal.event.notification.update\", this.onNewNotifications );\r\n\r\n            // user.loaded fired when a user authenticates correctly and the profile has loaded\r\n            events.on( \"user.loaded\",   \t function( params ){ this.onUserLoaded( params ) },   this );\r\n            events.on( \"user.modified\", \t function( params ){ this.onUserLoaded( params ) },   this );\r\n            events.on( \"user.locale.updated\",function( params ){ this.onUserLocaleUpdated( params ) },   this );\r\n\r\n            // space.shown fired when a space is successfully navigated to { \"id\":space.id }\r\n            events.on( \"space.shown\",   \tfunction( params ){ this.onSpaceShown( params ) },    this );\r\n            // place.shown fired when a place is successfully navigated to { placeBean }\r\n            events.on( \"place.shown\",   \tfunction( params ){ this.onPlaceShown( params ); },   this );\r\n            // place.loaded.owner fired when the site owners place is loaded. ( should be only once )\r\n            events.on( \"place.loaded.owner\",       function( params ){ this.onPlaceLoadedOwner( params ); },   this );\r\n\r\n            events.on( \"breadcrumb.goto\",   function( params ){ this.onBreadCrumbGoTo( params ); },   this );\r\n            // site.shown fired when a site is successfully shown { siteBean }\r\n\r\n            // **system.action.signout** event which can be fired to trigger the signout process\r\n            events.on( \"system.action.signout\", function( params ){ this.signoutClicked() },   this );\r\n\r\n            // pump.socket-error fired from pump when the socket fails\r\n            events.on( \"pump.socket-error\", function(params){ this.setErrorState(); }, this );\r\n\r\n            // Register Kernel API calls\r\n            this.kernel.addApi( \"header.hide\", this.apiHeaderHide, this );\r\n            this.kernel.addApi( \"header.show\", this.apiHeaderShow, this );\r\n\r\n            // Notify the Kernel that the service is ready,.\r\n            this.kernel.invoke( \"kernel.process.loaded\", { \"name\":this.name } );\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        Header.prototype = {};\r\n\r\n        /**\r\n         * ###onSpaceShown\r\n         * Handle the header actions on a user load\r\n         */\r\n        Header.prototype.onSpaceShown = function( json ){\r\n            this.header = this.model.header;\r\n\r\n            var spaceBean = json.space;\r\n\r\n            this.header().updateBreadCrumbWithSpace( spaceBean );\r\n\r\n            // Reattach any click handlers\r\n            this.lateBind();\r\n        };\r\n\r\n        /**\r\n         * ###onPlaceShown\r\n         * Handle the header actions on a user load\r\n         * AMONIS: 12/08/2015: This function has grown over time and much of the property control should be moved to the HeaderBean\r\n         */\r\n        Header.prototype.onPlaceShown = function( json ){\r\n            this.header = this.model.header;\r\n\r\n            var placeBean = json.place;\r\n\r\n            // AMONIS: 21-03-2016: Retrieve the Place owner details from the Contacts\r\n            var placeOwner = this.kernel.invoke( \"contacts.get.contact.by.id\", { id:placeBean.owner.id } );\r\n\r\n            // Switch the breadcrumb to the one for this place. ( create a new one if neccessary )\r\n            this.header().addBreadCrumbForPlace( placeBean, placeOwner );\r\n\r\n            // Check to determine if this is a User Site\r\n            var user  = this.kernel.invoke( \"getUser\",  {} );\r\n            if( user && user.profileBody ){\r\n                if( user.profileBody.id !== placeBean.owner.id ){\r\n                    // Set the \"visiting\" flag if this is NOT the users place\r\n                    this.header().visiting( true );\r\n                } else {\r\n                    // Set the \"visiting\" flag off if this is the users place\r\n                    this.header().visiting( false );\r\n\r\n                    this.header().chopBreadcrumb( this.header().breadcrumb[0] );\r\n                }\r\n            }\r\n\r\n            // AMONIS: 09/01/2017: Remove out the extra items from the place breadcrumb trail.\r\n            this.header().trimBreadcrumbForPlace( placeBean.id );\r\n\r\n            // Updated the place specific properties.\r\n            this.header().refreshPlace( placeBean, placeOwner );\r\n\r\n            // Reattach any click handlers\r\n            this.lateBind();\r\n        };\r\n\r\n\r\n\t\t/**\r\n         * ###onBreadCrumbGoTo\r\n         * Handle the header actions on a user load\r\n         * @params {json} params config passed to the goto method\r\n         * HARDCODED to go to the root of the breadcrumb for now.\r\n         * Will this ever change? The option is there.\r\n         *\r\n         * ```js\r\n         * params: {\r\n         \t{ \"id\":\"ROOT\" }\r\n         }\r\n         * ```\r\n         *\r\n         */\r\n        Header.prototype.onBreadCrumbGoTo = function( params ){\r\n        \t// AMONIS: 17/07/2015: Removed as this caused the \"home\" icon to change incorrectly.\r\n            //if( params.id === \"ROOT\" ){\r\n                // unset the visiting flag\r\n                //_this.header().visiting( false );\r\n            //}\r\n\r\n        \t// Get the first Item in the current header;\r\n\t\t\tvar space = this.header().breadcrumb()[ 0 ];\r\n\r\n\t\t\t// Send a Visit request pulse to Roadie\r\n\t\t\t_this.pulse( \"pumpCo.roadie.visit.request\", {\r\n              \t\"spaceName\": space.name\r\n            });\r\n        };\r\n\r\n        /**\r\n         * ###onUserLoaded\r\n         * Handle the header actions on a user load\r\n         */\r\n        Header.prototype.onUserLoaded = function( userBean ){\r\n\r\n            this.header = this.model.header;\r\n\r\n            // Set the User Header icon\r\n            // this.header().icon( imageSrc );\r\n            this.header().setIcon( userBean );\r\n        };\r\n\r\n        /**\r\n         * ###onUserLocaleUpdated\r\n         */\r\n        Header.prototype.onUserLocaleUpdated = function(){\r\n            this.header().refreshI18n();\r\n        };\r\n\r\n        /**\r\n         * ###onPlaceLoadedOwner\r\n         * Triggered when the site ownser Place is loaded\r\n         */\r\n        Header.prototype.onPlaceLoadedOwner = function( placeBean ){\r\n            // this.header().oVisible( true );\r\n            this.repaint();\r\n        };\r\n\r\n        /**\r\n         * ###onUserLoaded\r\n         * Handle the header actions on a user load\r\n         */\r\n        Header.prototype.onSiteShown = function( userBean ){\r\n            this.header = this.model.header;\r\n        };\r\n\r\n        /**\r\n         *\r\n         */\r\n        Header.prototype.onIoUpdate = function( exchange ){\r\n            var value = __get( \"status\", _this.unwrapPulse(exchange) );\r\n            //console.log( value );\r\n        };\r\n\r\n         /**\r\n         * ### **event** pumpco.event.notification.new\r\n         * Fired when a new notification arrives.\r\n         *\r\n         * ```js\r\n            \"pulseBody\": {\r\n                \"status\": {\r\n                    \"code\": \"success\"\r\n                },\r\n                \"notification\": {\r\n                    \"unviewed\": 2\r\n                }\r\n            }\r\n         * ```\r\n         *\r\n         */\r\n        Header.prototype.onNewNotifications = function( exchange ){\r\n            var value = __get( \"notification.unviewed\", _this.unwrapPulse( exchange ) );\r\n            this.header().notifications.count( value );\r\n        };\r\n\r\n        // UI Handlers\r\n\r\n        /**\r\n         * ###lateBind\r\n         * These are late bound in an old fashioned JQuery style, rather than a MVVM way? why?\r\n         * The reason is one of flexibility. The header is changing rapidly and it is easier\r\n         * to change things by simple jquery bindings, rather than change a load of model code.\r\n         * This is liekly to get an actions menu etc...\r\n         * AMONIS: 04-12-2014\r\n         */\r\n\t\tHeader.prototype.lateBind = function(){\r\n            $(\".header-console-placemessage\").off( \"click\" );\r\n            $(\".header-console-placemessage\").on( \"click\", function(){\r\n                // Flip the header console flag property\r\n                this.header().consoleExpanded( !this.header().consoleExpanded() );\r\n            }.bind( this ) );\r\n\r\n            // AMONIS: 11/08/2015: Enhanced update to capture focus on first access to the site.\r\n            // The original fix added focus to the place div, which worked in IE10/11 but not edge.\r\n            // This fix focuses on the User-Icon button, which can be focused.\r\n            // This IS ONLY required for Microsoft Browsers which seem to lose the focus on newly created DOM\r\n            // elements, when they are made visible, and the current one is hidden.\r\n            $(\"#header-user\").focus();\r\n\r\n\r\n\t\t\t// Remove / Bind handlers to prevent duplication.\r\n\t\t\t$(\".btn-breadcrumb\").off( \"click\" );\r\n\t\t\t$(\".btn-breadcrumb\").on( \"click\", this.breadcrumbClicked );\r\n\r\n            // Remove / Bind handlers to prevent duplication.\r\n            $(\".btn-yourpicture\").off( \"click\" );\r\n            $(\".btn-yourpicture\").on( \"click\", this.yourplaceClicked );\r\n\r\n            // Remove / Bind handlers to navigate to the Home space for this Place\r\n            $(\".btn-placepicture\").off( \"click\" );\r\n            $(\".btn-placepicture\").on( \"click\", this.placeHomeClicked.bind( this ) );\r\n\r\n            // Remove / Bind handlers to prevent duplication.\r\n            $(\".btn-notifications\").off( \"click\" );\r\n            $(\".btn-notifications\").on( \"click\", this.notificationsClicked );\r\n\r\n            // Remove / Bind handlers to prevent duplication.\r\n            $(\".btn-settings\").off( \"click\" );\r\n            $(\".btn-settings\").on( \"click\", this.settingsClicked );\r\n\r\n            // Remove / Bind handlers to prevent duplication.\r\n            $(\".btn-help\").off( \"click\" );\r\n            $(\".btn-help\").on( \"click\", this.helpClicked );\r\n\r\n\r\n            // Remove / Bind handlers to prevent duplication.\r\n            $(\".btn-contacts\").off( \"click\" );\r\n            $(\".btn-contacts\").on( \"click\", this.contactsClicked );\r\n\r\n            // Expand the element\r\n            $(\".header-console-inner\").off( \"click\" );\r\n            $(\".header-console-inner\").on( \"click\", this.consoleClicked );\r\n\t\t};\r\n\r\n        /**\r\n         * ###breadcrumbClicked\r\n         * Performs Breadcrumb manipulation to correctly show the next \"stack\" item\r\n         * following a navigation.\r\n         */\r\n\t\tHeader.prototype.breadcrumbClicked  = function(){\r\n\t\t\t/*\r\n\t\t\t\tData will be something like this. = {\r\n\t\t\t\t\tdescription: \"Your Home Space\"\r\n\t\t\t\t\ticon: \"/PumpHouse/uploads/system/UserHeader/images/home_28by28_icon.png\"\r\n\t\t\t\t\tid: \"1391bbfbfe4266c305d2bd2d\"\r\n\t\t\t\t\tlabel: \"HomeSpace-home\"\r\n\t\t\t\t\tlang: Object\r\n\t\t\t\t\tlayout: Object\r\n\t\t\t\t\tname: \"BetterTogether.HomeSpace\"\r\n\t\t\t\t\toVisible: function observable() {\r\n\t\t\t\t\tparentId: \"8ad7c3dc44b97f6b05d2bd2d\"\r\n\t\t\t\t}\r\n\t\t\t */\r\n\t\t\tvar data = ko.dataFor( this );\r\n\r\n\t\t\t// Remove other items from this breadcrumb\r\n\t\t\t_this.header().chopBreadcrumb( data.id );\r\n\r\n\t\t\t// Send a Visit request pulse to Roadie\r\n\t\t\t_this.pulse( \"pumpCo.roadie.visit.request\", {\r\n              \t\"spaceName\": data.name\r\n            });\r\n\t\t};\r\n\r\n        /**\r\n         * ###settingsClicked\r\n         * Performs a Space navigation to the Settings Space.\r\n         */\r\n        Header.prototype.settingsClicked = function(){\r\n            /*\r\n                Data will be something like this. = {\r\n                    description: \"Your Home Space\"\r\n                    icon: \"/PumpHouse/uploads/system/UserHeader/images/home_28by28_icon.png\"\r\n                    id: \"1391bbfbfe4266c305d2bd2d\"\r\n                    label: \"HomeSpace-home\"\r\n                    lang: Object\r\n                    layout: Object\r\n                    name: \"BetterTogether.HomeSpace\"\r\n                    oVisible: function observable() {\r\n                    parentId: \"8ad7c3dc44b97f6b05d2bd2d\"\r\n                }\r\n             */\r\n            var data = ko.dataFor( this );\r\n\r\n            // Navigate to the Home place first.\r\n            //events.fire( \"place.home\", { \"sync\":true } );\r\n            _this.gotoHomePlace();\r\n\r\n            // Send a Visit request pulse to Roadie\r\n            _this.pulse( \"pumpCo.roadie.visit.request\", { \"spaceName\": \"System.controlCentreSpace\" });\r\n        };\r\n\r\n        /**\r\n         *###contactsClicked\r\n         * Handler for the contacts menu button in the header.\r\n         * Performs a Space navigation to your contacts.\r\n         */\r\n        Header.prototype.contactsClicked = function(){\r\n            // Navigate to the Home place first.\r\n            //events.fire( \"place.home\", { \"sync\":true } );\r\n            _this.gotoHomePlace();\r\n\r\n            // Send a Visit request pulse to Roadie\r\n            _this.pulse( \"pumpCo.roadie.visit.request\", { \"spaceName\": \"System._ContactSpace\" });\r\n        };\r\n\r\n        /**\r\n         * ###yourplaceClicked\r\n         * Fires an event to the Place Service to go home.\r\n         * This is an OS level shortcut, without going via the roadie.\r\n         */\r\n        Header.prototype.yourplaceClicked  = function(){\r\n            // AMONIS: 16/03/2015: Disabled: Old double click mechanism\r\n            //events.fire( \"place.home\", { \"doubleNav\":true } );\r\n            //\r\n            // Navigate to the Users place first\r\n            //events.fire( \"place.home\", { \"sync\":true } );\r\n            _this.gotoHomePlace();\r\n\r\n            // Navigate to the root of that place ( i.e. the home space )\r\n            // _this.onBreadCrumbGoTo( { \"id\":\"ROOT\" } );\r\n        };\r\n\r\n        /**\r\n         * ###placeHomeClicked\r\n         * Fires an event to the Place Service to go home.\r\n         * This is an OS level shortcut, without going via the roadie.\r\n         */\r\n        Header.prototype.placeHomeClicked  = function(){\r\n            var place = this.header().breadcrumbPlaces.find( this.header().currentPlace )\r\n\r\n            // Navigate to the root of this breadcrumb ( which is the current place ) ( i.e. the places home space )\r\n            _this.onBreadCrumbGoTo( { \"id\":\"ROOT\" } );\r\n        };\r\n\r\n        /**\r\n         * ###notificationsClicked\r\n         * Takes the user to the Notifications Space\r\n         * Not Implemented Yet!\r\n         */\r\n        Header.prototype.notificationsClicked  = function(){\r\n            // Navigate to the Home place first.\r\n            //events.fire( \"place.home\", { \"sync\":true } );\r\n            _this.gotoHomePlace();\r\n\r\n            // Send a Visit request pulse to Roadie\r\n            _this.pulse( \"pumpCo.roadie.visit.request\", { \"spaceName\": \"System.notificationsSpace\" });\r\n        };\r\n\r\n        /**\r\n         * ###helpClicked\r\n         * Takes the user to the Help Space\r\n         * Not Implemented Yet!\r\n         */\r\n        Header.prototype.helpClicked  = function(){\r\n            // Navigate to the Home place first.\r\n            _this.gotoHomePlace();\r\n\r\n            // Visit Fixed Roadie user\r\n            var helpUser = \"roadie://visit/user/431900000000000000004319\";\r\n\r\n            // Send a Visit request pulse to Roadie\r\n            _this.pulse( \"pumpCo.roadie.visit.request\", { \"url\":helpUser });\r\n        };\r\n\r\n        /**\r\n         * ###breadcrumbPlacesClicked\r\n         * Actions the click event on the place breadcrumb\r\n         * Expect data in the form of\r\n         * { ownerId:place.owner.id, placeId:place.id, label:label }\r\n         */\r\n        Header.prototype.breadcrumbPlacesClicked = function( data, evt ){\r\n            // Get the current place from the Place Service, to check if this is the current place\r\n            var currentPlace = this.kernel.invoke( \"getPlace\", {} );\r\n            // Hide the console\r\n            this.header().consoleExpanded( !this.header().consoleExpanded() )\r\n            // check for a valid place action\r\n            if( currentPlace.id !== data.id ){\r\n                // Get a Roadie URL for the Id\r\n                var url = this.kernel.invoke( \"roadie.create.url\", { ownerId:data.ownerId, placeId:data.placeId } );\r\n                if( url !== null ){\r\n                    // If there is a RoadieUrl, visit it\r\n                    _this.pulse( \"pumpCo.roadie.visit.request\", { \"url\":url });\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###signoutClicked\r\n         * Performs a graceful signout.\r\n         * This is timed to perform a nice fade out, with a message and then reload.\r\n         */\r\n        Header.prototype.signoutClicked = function(){\r\n            // Show a Toast message confirming action.\r\n            events.fire( \"header.signout\", {} );\r\n\r\n            // Add the class removing after 1s\r\n            // This has a nice 1s fadeout animation\r\n            setTimeout( function(){\r\n                $(\"body\").addClass( \"removing\" );\r\n            }, 500 );\r\n\r\n            // Invoke the security logout ( add a 2 second wait to allow nice fade )\r\n            this.kernel.invoke( \"security.logout\", { wait:1500 } );\r\n        };\r\n\r\n        /**\r\n         * ###gotoHomePlace\r\n         * Navigates the User to their Home Place. Doubles up to navigate back to Home Space if the user is\r\n         * already in their own Place. Kind of like the iPhone single button functionality\r\n         */\r\n        Header.prototype.gotoHomePlace = function(){\r\n            // AMONIS: 11/04/2016: If not at own place, revert to own place, otherwise, go to Home.\r\n            if( _this.header().visiting() === true  ){\r\n                // unset the visiting flag\r\n                _this.header().visiting( false );\r\n\r\n                // Navigate to the Home place first.\r\n                events.fire( \"place.home\", { \"sync\":true } );\r\n            } else {\r\n                // At own place, go to Home Space\r\n                events.fire( \"space.request.home\", {} );\r\n            }\r\n        }\r\n\r\n        /**\r\n         * ###setErrorState\r\n         * Event Handler to change the visual look of the header\r\n         */\r\n        Header.prototype.setErrorState = function(){\r\n            _this.header().isError();\r\n        };\r\n\r\n        /**\r\n         * ###unwrapPulse\r\n         * A simple helper to unwrap a pulse reliably\r\n         * @params {Exchange} exchange The pulse exchange to unwrap\r\n         * @returns PulseBody or undefined\r\n         */\r\n        Header.prototype.unwrapPulse = function( exchange ){\r\n            var body = exchange.getPulseBody();\r\n            if( body )\r\n                return body\r\n            else\r\n                return undefined;\r\n        };\r\n\r\n        /*\r\n            API\r\n         */\r\n\r\n        /**\r\n         * ### repaint\r\n         * Updates the model and repaints anything regarding the header.\r\n         * Does basic DOM manipulation.\r\n         * @return {[type]} [description]\r\n         */\r\n        Header.prototype.repaint = function(){\r\n            // Set the states 'from' -> 'to'\r\n            var states;\r\n\r\n            // Get the current classes\r\n            var classes = document.body.getAttribute( 'class' ) || '';\r\n\r\n            // Test hidden state\r\n            if( this._preferHidden && classes.indexOf( 'native' ) === -1 ){\r\n                this.header().oVisible( false );\r\n                classes = classes.replace( 'webapp', \"\" ).trim();\r\n                classes = classes + ' ' + 'native';\r\n            } else if( this._preferHidden === false && classes.indexOf( 'webapp' ) === -1 ) {\r\n                this.header().oVisible( true );\r\n                classes = classes.replace( 'native', \"\" ).trim();\r\n                classes = classes + ' ' + 'webapp';\r\n            }\r\n\r\n            // Update body class attributes\r\n            document.body.setAttribute( 'class', classes );\r\n        };\r\n\r\n        /**\r\n         * ###apiHeaderHide\r\n         */\r\n        Header.prototype.apiHeaderHide = function(){\r\n            this._preferHidden = true;\r\n            this.repaint();\r\n        }\r\n\r\n        /**\r\n         * ###apiHeaderShow\r\n         */\r\n        Header.prototype.apiHeaderShow = function(){\r\n            this._preferHidden = false;\r\n            this.repaint();\r\n        }\r\n\r\n\t\t// UI Handlers\r\n\r\n        Header.prototype.toString = function(){\r\n            return this.name + \":\" + this.version;\r\n        };\r\n\r\n        // Return the Class function\r\n        return Header;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/services/header.js?");

/***/ }),

/***/ "./src/services/place.js":
/*!*******************************!*\
  !*** ./src/services/place.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n  .\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! knockout */ \"knockout\"), __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! mixins/endpoint */ \"./src/mixins/endpoint.js\"), __webpack_require__(/*! beans/place */ \"./src/beans/place.js\"), __webpack_require__(/*! bindings/place */ \"./src/bindings/place.js\"), __webpack_require__(/*! utils/history */ \"./src/utils/history.js\"), __webpack_require__(/*! utils/i18n */ \"./src/utils/i18n.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko, events, log, Endpoint, PlaceBean, PlaceBinding, Hist, i18n ){\r\n        var _this;\r\n\r\n        // This runs before Main has been called.\r\n        log.debug( \"services/place\" );\r\n\r\n        /*\r\n            #services.Place\r\n            The Place service that handles all Place related activities\n\n            @author Andy Monis\r\n        */\r\n        function Place ( params ) {\r\n            _this = this;\r\n\r\n            this.name    = \"place\";\r\n            this.version = \"0.0.1\";\r\n\r\n            // **private** {string} _launch: Namespace of the App ( SPACE ) to load, taking priority over the default App ( Home SPACE )\r\n            this._launch = params.launchParams || undefined;\r\n\r\n            // **private** {string} _roadie: Namespace of the App ( SPACE ) to load, taking priority over the default App ( Home SPACE )\r\n            this._roadie = params.roadieParams ? decodeURIComponent( params.roadieParams ) : undefined;\r\n\r\n            this.current = undefined;\r\n\r\n            this.waitingToShow = [];\r\n\r\n            // Store a reference to the Kernel\r\n            this.kernel = params.kernel;\r\n            // @property runtime: Internal property set by the Kernel. Contains settings to determine how it is running.\r\n            this.runtime        = params.runtime || {};\r\n\r\n            // The main Place ViewModel which will be mapped directly to the pulses\r\n            var model    = params.model;\r\n\r\n            // Add a new Observable for the Place Model\r\n            model.places = this.places = ko.observableArray( [] );\r\n\r\n            // Register to listen to 'place.add' events\r\n            events.on( \"place.add\", function( params ){ this.add( params ); }, this );\r\n            events.on( \"place.show\", function( params ){ this.preshow( params ); }, this );\r\n            // ###event place.home { \"doubleNav\":true|false } // doubleNav allows Your Place to nav to home space on a second click\r\n            events.on( \"place.home\", function( params ){ this.goOwnerHome( params ); }, this );\r\n            events.on( \"place.goto.owner.home\", function( params ){ this.goOwnerHome( params ); }, this );\r\n            events.on( \"place.reshow\", function( params ){ this.reshow( params ); }, this );\r\n\r\n\r\n            // Register Kernel API calls\r\n            this.kernel.addApi( \"getPlace\", this.getPlace, this );\r\n            this.kernel.addApi( \"place.get.owners\", this.getOwnersPlace, this );\r\n\r\n\r\n            // Add in the Legacy API for cogs\r\n            this.addLegacyAPI();\r\n\r\n            // Add in the Pulsing capabilities\r\n            // Mixin Endpoint functionality\r\n            __mixin( this, new Endpoint( params ) );\r\n\r\n            this.addPulsing();\r\n\r\n            // Notify the Kernel that the service is ready,.\r\n            this.kernel.invoke( \"kernel.process.loaded\", { \"name\":this.name } );\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        Place.prototype = {};\r\n\r\n        /**\r\n         * ###addPulsing\r\n         * Add in the pulsing handlers\r\n         */\r\n        Place.prototype.addPulsing = function(){\r\n            this.initEndpoint( this.name, [\r\n                // Request a Place Spec\r\n                { \"className\":\"pumpCo.user.place.request\",    \"targetName\":\"PumpHouse\" },\r\n                // Sent by PH Place Service\r\n                { \"className\":\"pumpCo.event.core.place\",      \"targetName\":this.name },\r\n                // Response a Place Spec\r\n                { \"className\":\"pumpCo.user.place.response\",   \"targetName\":this.name },\r\n                // Exception Response ( usually for a Place not found from PumpHouse )\r\n                { \"className\":\"exception.pumpCo.user.authorisation.validation.accessDenied\", \"targetName\":this.name }\r\n            ] );\r\n\r\n            // Register handler for event core place, usually to say that it has changed.\r\n            this.addPulseHandler( \"pumpCo.event.core.place\", this.onEventCorePlace );\r\n\r\n            // Register handler for Exceptions\r\n            this.addPulseHandler( \"exception.pumpCo.user.authorisation.validation.accessDenied\", this.onException.bind( this ) );\r\n        };\r\n\r\n// @DEPRECATED Ext V1 code\r\n        Place.prototype.addLegacyAPI = function(){\r\n            // Create UserUtils namespace\r\n            __ns( \"pumpco.utils.UserUtils\" );\r\n\r\n            /**\r\n             * @method isUserPlace\r\n             * Returns true or false depending on if the user is visiting someone.\r\n             * I don't think a Cog should ever need to do this anymore.\r\n             * $able should resolve this with better ( more granular ) permissions.\r\n             */\r\n            pumpco.utils.UserUtils.isUserPlace = function(){\r\n                var _user;\r\n\r\n                // Fire a SYNCHRONOUS event to the UserService, to get the currently authenticated user.\r\n                events.fire( \"user.get\", { \"fn\":function( user ){\r\n                    _user = user;\r\n                }, \"scope\":_this }, { \"sync\":true } );\r\n\r\n                // If there is a user, check to see if this matches the Place Owner.\r\n                if( _user ){\r\n                    var place = _this.find( _this.current );\r\n                    if( place === undefined )\r\n                        return false;\r\n\r\n                    if( place.owner.id === _user.profileBody.id )\r\n                        return true;\r\n                    else\r\n                        return false;\r\n                }\r\n            };\r\n\r\n        };\r\n// @DEPRECATED Ext V1 code\r\n\r\n        /**\r\n         * ###onEventCorePlace\r\n         * **PulseHandler**\r\n         * Listens for Place Events, which usually dictate that a Place has changed ( added / Removed Spaces etc )\r\n         * The intended process is that the Place is \"required\" from the backend and merged with the current bean.\r\n         * @params exchange {Exchange}\r\n         * ```js\r\n            {\r\n                \"status\": { \"code\": \"success\" },\r\n                \"event\": \"place.icon.updated\",\r\n                \"placeId\": \"8ad7c3dc44b97f6b69f670be\",\r\n                \"url\": \"/home/andy.png\"\r\n            }\r\n         * ```\r\n         */\r\n        Place.prototype.onEventCorePlace = function( exchange ){\r\n            // Test that this is a valid Exchange\r\n            if( exchange === undefined || !exchange.getPulseClass ){\r\n                log.error( \"services/place.onEventCorePlace: Invalid exchange passed to method\" );\r\n                return -1;\r\n            }\r\n\r\n            var ns   = exchange.getPulseClass();\r\n            var body = exchange.getPulseBody();\r\n\r\n            // Determine whether this place exists. If not do nothing as its not being used?\r\n            var place = this.find( body.placeId);\r\n\r\n            if( place ){\r\n                // Set the option to show this place.\r\n                // Probably only want to do this if it is the current space\r\n                this.waitingToShow.push( place.id );\r\n\r\n                // Request that the drive refreshes the place\r\n                events.fire( \"drive.get.place\", { \"place\":place, \"id\":place.id, \"ownerId\":place.owner, \"fn\":this.loaded, \"scope\":this, \"refresh\":true } );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###comparePlaces\r\n         */\r\n        Place.prototype.comparePlaces = function( p1, p2 ){\r\n            PlaceBean.compare( p1, p2 );\r\n        };\r\n\r\n        /**\r\n         * ###add\r\n         */\r\n        Place.prototype.add = function( spec ){\r\n            if( !spec ){\r\n                log.debug( \"Place.add(): No Place Id provided\" );\r\n                return;\r\n            }\r\n\r\n            log.debug( \"Place.add(): place.add [\" + spec.id + \":\" + spec.ownerId + \"]\" );\r\n\r\n            // Notify that that Place.add() request has been made\r\n            events.fire( \"place.add.start\", { \"place\":spec } );\r\n\r\n            // Start the loading process\r\n            var place = new PlaceBean();\r\n            place.update( {\r\n                \"id\":       spec.id,\r\n                \"name\":     spec.name,\r\n                \"owner\":    { \"id\":spec.ownerId }\r\n            } );\r\n\r\n            events.fire( \"drive.get.place\", { \"place\":place, \"id\":spec.id, \"ownerId\":spec.ownerId, \"fn\":this.loaded, \"scope\":this } );\r\n        };\r\n\r\n        /**\r\n         * ###locate\r\n         * Locates the place in the currently rendered array\r\n         * @returns index or -1 if not found\r\n         */\r\n        Place.prototype.locate = function( id ){\r\n            var value = -1;\r\n            __.eachSync2( this.places(), function( item, index, collection ){\r\n                if( item.id === id )\r\n                    value = index;\r\n            } );\r\n            return value;\r\n        };\r\n\r\n        /**\r\n         * ###find\r\n         */\r\n        Place.prototype.find = function( id ){\r\n            var obj = undefined;\r\n            __.eachSync2( this.places(), function( item, index, collection ){\r\n                if( item.id === id )\r\n                    obj = item;\r\n            } );\r\n            return obj;\r\n        };\r\n\r\n        /**\r\n         * ###findByOwner\r\n         */\r\n        Place.prototype.findByOwner = function( ownerId ){\r\n            var obj = undefined;\r\n            __.eachSync2( this.places(), function( item, index, collection ){\r\n                if( item.owner.id === ownerId )\r\n                    obj = item;\r\n            } );\r\n            return obj;\r\n        };\r\n\r\n        /**\r\n         * ###getOwnersPlace\r\n         * Returns the Owners place, not neccessarily the currently visible one.\r\n         * @return {JSON} [description]\r\n         */\r\n        Place.prototype.getOwnersPlace = function(){\r\n            var obj = undefined;\r\n            __.eachSync2( this.places(), function( item, index, collection ){\r\n                if( item.ownersPlace === true )\r\n                    obj = item;\r\n            } );\r\n            return obj;\r\n        };\r\n\r\n        /**\r\n         * ###getPlace\r\n         * Returns the current Place\r\n         */\r\n        Place.prototype.getPlace = function(){\r\n            var place = this.find( this.current );\r\n\r\n            if( !place )\r\n                place = this.findByOwner( this.current );\r\n\r\n            return place;\r\n        };\r\n\r\n        Place.prototype.hide = function( id ){\r\n            var place = this.find( id );\r\n\r\n            if( !place )\r\n                place = this.findByOwner( this.current );\r\n\r\n            if( !place )\r\n                return -1;\r\n\r\n            place.oVisible( false );\r\n        };\r\n\r\n        /**\r\n         * ###reshow\r\n         * Fired when an application is resumed from a sleeping state.\r\n         * Reshow a place and trigger all even handlers\r\n         */\r\n        Place.prototype.reshow = function( options ){\r\n            if( !this.current )\r\n                return -1;\r\n\r\n            // Find the current place\r\n            var place = this.find( this.current );\r\n\r\n            if( !place )\r\n                return -2;\r\n\r\n            // trigger a place shown\r\n            events.fire( \"place.shown\", { place:place, options:options } );\r\n        }\r\n\r\n        /*\r\n         * ###goHome\r\n         * Takes the \"authenticated\" user back to their Home space\r\n         * user.profileBody: Objectdob: \"1968-03-12\"domain: \"patient\"email: \"pauline@journal.net\"gender: \"female\"id: \"0036ebcb69f670be00000001\"name: \"Pauline\"status: \"active\"surname: \"Smith\"username: \"pauline.smith\"\r\n         */\r\n        Place.prototype.goOwnerHome = function( options ){\r\n            // Find the authenticated user from the user service\r\n            var user = this.kernel.invoke( \"getUser\", {} );\r\n\r\n            // Find the place for the authenticated user by owner id\r\n            var place = this.findByOwner( user.profileBody.id );\r\n\r\n            // Show the place if it exists.\r\n            if( place ){\r\n                if( place.id === this.current ){\r\n                     if( options.doubleNav ){\r\n                        // Place already displayed, try navigating to Home Space.\r\n                        events.fire( \"breadcrumb.goto\", { \"id\":\"ROOT\" } ); // Listened for by Header\r\n                     }\r\n                } else {\r\n                    // Show the desired place\r\n                    this.preshow( place );\r\n                }\r\n\r\n                events.fire( \"place.shown\", { place:place, options:{} } );\r\n                // events.fire( \"place.shown\", place ); // Listened for by Header & Contacts\r\n            }\r\n\r\n        };\r\n\r\n        /**\r\n         * ###preshow\r\n         */\r\n        Place.prototype.preshow = function( params ){\r\n            var key = params.ownerId || params.id;\r\n\r\n            this.waitingToShow.push( key );\r\n\r\n            this.show( key );\r\n        };\r\n\r\n        /**\r\n         * ###searchReverse\r\n         */\r\n        Place.prototype.searchReverse = function( val, arr ){\r\n            var match = -1;\r\n            for( var i=arr.length-1; i>=0; i-- ){\r\n                if( arr[ i ] === val ){\r\n                    match = i; // return the matching index\r\n                    break;\r\n                }\r\n            }\r\n            return match;\r\n        };\r\n\r\n        /**\r\n         * ###show\r\n         */\r\n        Place.prototype.show = function( id ){\r\n            var place = this.find( id );\r\n\r\n            // AMONIS: 23/06/2015: If no place found, try looking by owner id.\r\n            if( !place )\r\n                place = this.findByOwner( id );\r\n\r\n            var index = this.searchReverse( id, this.waitingToShow );\r\n            if( index === -1 && place.owner )\r\n                index = this.searchReverse( place.owner.id, this.waitingToShow );\r\n\r\n            if( place && index > -1 ){\r\n                // Clear the waitingToShow array.\r\n                // Clear the whole thing or upto the place that has been selected.\r\n                if( index === this.waitingToShow.length - 1 )\r\n                    this.waitingToShow.splice( 0, this.waitingToShow.length );\r\n                else\r\n                    this.waitingToShow.splice( 0, index );\r\n\r\n                if( this.current )\r\n                    this.hide( this.current );\r\n\r\n                place.oVisible( true );\r\n\r\n                // Set the current place\r\n                this.current = id;\r\n\r\n                // Send a asynchronous event to notfiy that a new place has been shown.\r\n                events.fire( \"place.shown\", { place:place, options:{} } );\r\n                // events.fire( \"place.shown\", place ); // Listened for by Header & Contacts\r\n\r\n                // AMONIS: 10/08/2015: Updated with a potential fix to IE / Edge losing the first click.\r\n                // This appears to be being caused by a lack of focus on the Place, following a form.\r\n                // $(\".centralise\").first().focus();\r\n                $(\".place\").first().focus();\r\n            } else {\r\n                // Show a loading Place warning message if the place count is greater than 0.\r\n                // This would usually be a Place Navigate, which may / maynot work, depending upon security.\r\n                // If the Place count is 0 this is the users own place, so should not fail.\r\n                // The load errors will be detailed separately.\r\n                if( this.places().length > 0 ){\r\n                    log.emergency( \"Loading place [\" + id + \"] ...\" );\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###loaded\r\n         */\r\n        Place.prototype.loaded = function( bean ){\r\n            //console.log( \"Place.loaded(): RECEIVED:\" + bean.id );\r\n            if( bean.owner && bean.owner.id ){\r\n                var user = this.kernel.invoke( \"getUser\", {} );\r\n                if( user && user.profileBody && user.profileBody.id ){\r\n                    if( user.profileBody.id === bean.owner.id ){\r\n                        bean.ownersPlace = true;\r\n\r\n                        // Listened for by Header\r\n                        events.fire( \"place.loaded.owner\", bean );\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Push the place into the model\r\n            this.store( bean );\r\n\r\n            // Make the place visible;\r\n            this.show( bean.id );\r\n\r\n            // AMONIS: 22-04-2016: IMPORTANT. When the place is loaded, look for the the FIRST item, which\r\n            // is used as the default SPACE to show.\r\n            if( !bean.space || bean.space.length === 0 ){\r\n                log.emergency( \"ERROR: PLACE.loaded(): No Spaces available to load. Halting...\" );\r\n            }\r\n\r\n            // Check for a Specific App to Show, using URL param launch=System.convCentre, where \"Space\" is assumed on the end.\r\n            if( this._launch || bean.initialSpace.length >= 1 ){\r\n                // var _launch     = undefined;\r\n                var _hideHeader = false;\r\n\r\n                // AMONIS: 24/01/2017: Find the launch space if one exists of default back to first space\r\n                var result = this.findLaunchSpace( this._launch, this._roadie, bean );\r\n\r\n\r\n                if( result.space ){\r\n                    if( result.hide ){\r\n                        // Specifically Hide the header, only for \"launch\" apps\r\n                        this.kernel.invoke( \"header.hide\" );\r\n                    }\r\n\r\n                    // We have found a targetted Space. Show this in preference to the Default\r\n                    events.fire( \"space.add\", { \"id\":result.space.id } );\r\n\r\n                    // AMONIS: 24/01/2017: Test for Roadie link and use in preference so showing the Home space\r\n                    if( result.roadie ){\r\n                        // Let the user know something is happening\r\n                        this.kernel.invoke( \"toast.show\", { \"msg\":i18n.resolve( \"place-roadieUrl-msg\" ) } );\r\n                        // Pulse to navigate to the Roadie Url\r\n                        this.pulse( \"pumpCo.roadie.visit.request\", { url:this._roadie } );\r\n                        // Clear the _roadie property\r\n                        this._roadie = undefined;\r\n                    }\r\n                } else {\r\n                    // FALLBACK to showing the first space again\r\n                    events.fire( \"space.add\", { \"id\":bean.space[ 0 ].id } );\r\n                }\r\n            }\r\n            else {\r\n                // AMONIS: 22-04-2016: Default behaviour is to load the FIRST space, which is the Users Home Space, as\r\n                // guaranteed by PumpHouse.\r\n                events.fire( \"space.add\", { \"id\":bean.space[ 0 ].id } );\r\n            }\r\n\r\n            // console.log( \"place.add.finish\" );\r\n\r\n            // Notify that that Place.loaded() request has been made\r\n            events.fire( \"place.add.finish\", { \"place\":bean } );\r\n        };\r\n\r\n        /**\r\n         * ###findLaunchSpace\r\n         * @return {type} [description]\r\n         */\r\n        Place.prototype.findLaunchSpace = function( launch, roadieUrl, bean ){\r\n            var _launch = undefined;\r\n\r\n            var res = { space:undefined, hide:false, roadie:roadieUrl };\r\n\r\n            if( launch ){\r\n                // Using Launch, attempts to emulate a native App, therefore we hide the header.\r\n                res.hide = true;\r\n\r\n                // Set the initial space using the url param \"launch\", set by the User\r\n                _launch = launch.toLowerCase();\r\n            } else {\r\n                // Set the initial space using the bean property \"initialSpace\", set by PumpHouse\r\n                _launch = bean.initialSpace[ 0 ].toLowerCase();\r\n            }\r\n\r\n            // Iterate over all of the Spaces definitions in the Place, for the one specified\r\n            for( var i=0; i<bean.space.length; i++ ){\r\n                var _space = bean.space[ i ];\r\n\r\n                // Lowercase the Space Name as for matching\r\n                var _spaceName = _space.name.toLowerCase();\r\n\r\n                // If there is a Partial Match, break and show this space\r\n                if( _spaceName.indexOf( _launch ) > -1 ){\r\n                    res.space = _space;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return res;\r\n        }\r\n\r\n        /**\r\n         * ###store\r\n         * Stores the bean in the currently rendered App Model\r\n         */\r\n        Place.prototype.store = function( bean ){\r\n            var existing = this.find( bean.id );\r\n\r\n            if( !existing ){\r\n                // Push the place into the observable collection\r\n                // AMONIS: 10/08/2015: Further attempt to help IE not lose click is to order the Places in the model\r\n                // such that the newest is on top.\r\n                //this.places.push( bean );\r\n                this.places.unshift( bean );\r\n\r\n                return true;\r\n            } else {\r\n                // AMONIS: 19/06/2015:\r\n                // If a place if visited a number of times, the Place service will request the place from the drive,\r\n                // but the Place bean \"should\" be the same, therefore no action is needed.\r\n\r\n                // Check if the two places are the same ( i.e. have they both been created from the same drives JSON )\r\n                var placesTheSame = PlaceBean.compare( existing, bean );\r\n\r\n                if( !placesTheSame ){\r\n                    // AMONIS: 19/06/2015:\r\n                    // If the places are not the same. We need to update this old place with the new place OR\r\n                    // remove the old place and render the new place completely.\r\n\r\n                    // var index = this.locate( bean.id );\r\n                    // // Splice out the existing bean and insert the updated one.\r\n                    // this.places.splice( index, 1, bean );\r\n                }\r\n\r\n                return false;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ### onException\r\n         ```js\r\n         {\r\n          \"pulseHeader\" : {\r\n            \"mep\" : \"outOnly\",\r\n            \"pulseType\" : \"event\",\r\n            \"pulseClass\" : \"exception.pumpCo.user.authorisation.validation.accessDenied\",\r\n            \"endpointId\" : \"2296D738-DDB0-4B19-9890-968693A1F8CF\",\r\n            \"referenceId\" : \"7A3ABBF9-C99A-4E19-842D-04498CD4B2BC\",\r\n            \"referer\" : \"\",\r\n            \"pulseId\" : \"9f18c45c-9006-4ca9-a752-4a4a2ee8601d\",\r\n            \"timestamp\" : \"2017-09-05T09:36:53.959\",\r\n            \"responseToClass\" : \"pumpCo.user.place.request\",\r\n            \"instanceRoutingSlip\" : [ ]\r\n          },\r\n          \"pulseBody\" : {\r\n            \"status\" : {\r\n              \"message\" : \"You do not have permission to perform this operation\",\r\n              \"code\" : \"failure\"\r\n            }\r\n          }\r\n        }\r\n        ```\r\n         Handles exceptions for general place loading problems and displays a toast.\r\n         * @param  {type} pulse\r\n         * @return {type}       [description]\r\n         */\r\n        Place.prototype.onException = function( pulse ){\r\n            var header = pulse.getPulseHeader();\r\n            var body = pulse.getPulseBody();\r\n            // Removed specific check for now.\r\n            // var initiator = __get( \"responseToClass\", header );\r\n            // if( initiator === \"pumpCo.user.place.request\" ){\r\n                // Place not found ( probably no permissions ). Hide the loader bar\r\n                events.fire( \"place.exception\", {} );\r\n\r\n                var msg = __get( \"status.message\", body );\r\n                // this.kernel.invoke( \"toast.show\", { \"msg\":msg } );\r\n            // }\r\n        }\r\n\r\n        /**\r\n         * ###toString\r\n         * Service helper for aquiring details\r\n         */\r\n        Place.prototype.toString = function(){\r\n            return this.name + \":\" + this.version;\r\n        }\r\n\r\n        // return the Place\r\n        return Place;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/services/place.js?");

/***/ }),

/***/ "./src/services/roadie.js":
/*!********************************!*\
  !*** ./src/services/roadie.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n  .\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! knockout */ \"knockout\"), __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! utils/roadieurl */ \"./src/utils/roadieurl.js\"), __webpack_require__(/*! services/roadiecore */ \"./src/services/roadiecore.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko, events, log, RoadieUrl, RoadieCore ){\r\n        // This runs before Main has been called.\r\n        log.debug( \"services/roadie\" );\r\n\r\n        /**\r\n         * #Services.Roadie\r\n         * Supports navigating throught the system.\r\n         ```js\r\n            //Roadie URL ( with ID's )\r\n            roadie://visit/cog/571e3e3bb014b446cf94c89a/571e3e3bb014b446cf94c89d/571e3e3bb014b446cf94c8a2/571e3e3eb014b446cf94c8f8\r\n            http://dev.cnect.to/hs?roadie=visit/cog/571e3e3bb014b446cf94c89a/571e3e3bb014b446cf94c89d/571e3e3bb014b446cf94c8a2/571e3e3eb014b446cf94c8f8\r\n\r\n            // Roadie Navigate ( with Name )\r\n            my.$pulse( \"pumpCo.roadie.visit.request\", {\r\n                \"spaceName\": \"System.space.Name\",\r\n                \"refresh\": false\r\n            });\r\n\r\n            // Roadie Url ( mixed Mode )\r\n            roadie://visit/space/05e0f67f843d19b9095f414e/_CURRENT_/'System.ResourceCentreSpace'\r\n            // Note:\r\n            // _CURRENT_ : denotes, use the current for the Place, which will be the Users place from the id ( 05e0f67f843d19b9095f414e )            // 'System.ResourceCentreSpace' : denotes, find the Space by Name as id's will not be enclosed in single quotes.\r\n         ```\r\n         */\r\n        function Roadie ( params ) {\r\n            // AMONIS: 19/10/2016: Added call to invoke RoadieCore\r\n            RoadieCore.call( this, params );\r\n\r\n            this.name    = \"roadie\";\r\n            this.version = \"0.0.1\";\r\n\r\n            // a useful flag to detect the version\r\n            this.roadieVersion = \"2\";\r\n\r\n            // @property kernel: Internal pointer to the kernel for OS level talkback & events.\r\n            this.kernel     = params.kernel;\r\n            // @property model: Internal pointer to the model to add Service model requirements to in oganised manner.\r\n            this.model      = params.model;\r\n            // @property pump: Internal pointer to the pump to allow pulsing and routing.\r\n            this.pump       = params.pump;\r\n            // @property runtime: Internal property set by the Kernel. Contains settings to determine how it is running.\r\n            this.runtime    = params.runtime || {};\r\n\r\n            // @property platform. Either Desktop or Mobile depend on current running environment.\r\n            this.platform   = params.platform;\r\n\r\n            // **private** {Place} _afterPlace The space that is being waited upon, before the multi-pass rendering\r\n            this._afterPlace = undefined;\r\n\r\n            /*\r\n                The existing Roadie depends upon \"the.pump\" and requires that this is configured, prior to startup in\r\n                the \"static\" or \"live\" boot profiles. ( see static.js for an example using kernel.preservices event )\r\n            */\r\n\r\n            // user.loaded fired when a user authenticates correctly and the profile has loaded\r\n            events.on( \"roadie.nav.space\",  function( params ){ this.onUserLoaded( params ) },      this );\r\n\r\n            // AMONIS: 13/06/2017: Async event for navigating to a Url\r\n            events.on( \"roadie.nav.url\", function( params ){ this.navUrl( params ) },      this );\r\n\r\n            // AMONIS: 03/05/2016: Fired when a Place is shown, by the Place Service. ( place.js[275,302,366] )\r\n            events.on( \"place.shown\",  function( params ){ this.onPlaceShown( params ) },           this );\r\n\r\n            // events.on( \"place.add.finish\",  function( params ){ this.onSpaceShown( params ) },           this );\r\n            // space.add.start\r\n            // events.on( \"space.shown\",  function( params ){ this.onSpaceShown( params ) },           this );\r\n\r\n            // usage: space = this.kernel.invoke( \"roadie.getSpaceByAppName\", { \"name\":\"ConvCentre\" } );\r\n            this.kernel.addApi( \"roadie.getSpaceByAppName\",   this.getSpaceByAppName,               this );\r\n\r\n            // usage: this.kernel.invoke( \"roadie.hold\", { <object to hold> } );\r\n            this.kernel.addApi( \"roadie.hold\", function( params ){ this.hold( params.key, params.obj ); }, this );\r\n\r\n            // usage: this.kernel.invoke( \"roadie.hold\", { <object to hold> } );\r\n            this.kernel.addApi( \"roadie.release\", function( params ){ return this.release( params.key ); }, this );\r\n\r\n            // usage: this.kernel.invoke( \"roadie.hold\", { <object to hold> } );\r\n            this.kernel.addApi( \"roadie.peek\", function( params ){ return this.peek( params.key ); }, this );\r\n\r\n            // usage: this.kernel.invoke( \"roadie.create.url\", { placeId:\"\" } );\r\n            this.kernel.addApi( \"roadie.create.url\", this.createRoadieUrl, this );\r\n\r\n            /*\r\n                Legacy models and naming conventions of old Roadie code that is not ported yet.\r\n                AMONIS: 04/12/2014\r\n             */\r\n\r\n            // Map the old Roadie URL in to a global ( as used by Ext )\r\n            //debugger;\r\n            __ns( \"pumpco.core.services.RoadieUrl\" );\r\n            pumpco.core.services.RoadieUrl = RoadieUrl;\r\n\r\n            // SITES\r\n            __ns( \"the.app.model.user\" ); // Create dependant property\r\n            __ns( \"the.app.services.siteService\" );\r\n            the.app.services.siteService.remove = function(){};\r\n            the.app.services.siteService.add = this.siteAddEvent;\r\n\r\n            // PLACES\r\n            __ns( \"the.app.services.placeService\" );\r\n            the.app.services.placeService.show = this.placeShowEvent.bind( this );\r\n            the.app.services.placeService.add = this.placeAddEvent.bind( this );\r\n\r\n            // SPACES\r\n            __ns( \"the.app.services.spaceService\" );\r\n            the.app.services.spaceService.show = this.spaceShowEvent;\r\n\r\n            // Initialise the existing Ext object by calling the Constructor\r\n            this.constructor( params );\r\n\r\n            // Notify the Kernel that the service is ready,.\r\n            this.kernel.invoke( \"kernel.process.loaded\", { \"name\":this.name } );\r\n        }\r\n\r\n        // Roadie prototype extends Existing Ext Roadie prototype\r\n        // AMONIS: 19/10/2016: Added call to invoke RoadieCore\r\n        // Roadie.prototype = pumpco.core.services.Roadie.prototype;\r\n        Roadie.prototype = RoadieCore.prototype;\r\n\r\n        Roadie.prototype.getCurrentPlace = function(){\r\n            var place = this.kernel.invoke( \"getPlace\", {} );\r\n            return place;\r\n        };\r\n\r\n        /**\r\n         * @method getSpaceByAppName\r\n         * An API call to request a space by appName.\r\n         * This calls the Space Service API and passes back the request.\r\n         * @returns {Space}\r\n         */\r\n        Roadie.prototype.getSpaceByAppName = function( params ){\r\n            params.type = \"appName\";\r\n\r\n            // Call the Space Service API function.\r\n            var space = this.kernel.invoke( \"space.getSpaceBy\", params );\r\n\r\n            return space;\r\n        };\r\n\r\n        Roadie.prototype.eventNavToSpace = function( params ){\r\n            //debugger;\r\n            events.fire( \"space.show\", params );\r\n        };\r\n\r\n        /**\r\n         * @method siteAddEvent\r\n         * Wrapper to convert the old process of adding Sites in to the Event driven process.\r\n         */\r\n        Roadie.prototype.siteAddEvent = function( params ){\r\n            events.fire( \"site.addUserSite\", params );\r\n        };\r\n\r\n        /**\r\n         * @method spaceShowEvent\r\n         * Wrapper to convert the old process of adding Sites in to the Event driven process.\r\n         */\r\n        Roadie.prototype.spaceShowEvent = function( params ){\r\n            events.fire( \"space.show\", params );\r\n        };\r\n\r\n        /**\r\n         * @method placeAddEvent\r\n         * Wrapper to convert the old process of adding Sites in to the Event driven process.\r\n         */\r\n        Roadie.prototype.placeAddEvent = function( unknown, params ){\r\n            var user = this.kernel.invoke( \"getUser\", {} );\r\n\r\n            // AMONIS: 23/06/2015: The original roadie tried to \"add\" thigns always\r\n            // It should not do this. The place / space or whatever should load things if required.\r\n            if( user.profileBody.id !== params.ownerId ){\r\n                events.fire( \"place.add\", params );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @method placeShowEvent\r\n         * Wrapper to convert the old process of adding Sites in to the Event driven process.\r\n         */\r\n        Roadie.prototype.placeShowEvent = function( params ){\r\n            var user = this.kernel.invoke( \"getUser\", {} );\r\n\r\n            var id = __get( \"profileBody.id\", user );\r\n\r\n            // AMONIS: 23/06/2015: If the request is to navigate home, then\r\n            // use the shortcut by the place service.\r\n            if( id === params.ownerId ){\r\n                // Navigate to the Home place first.\r\n                events.fire( \"place.home\", { \"sync\":true } );\r\n            } else {\r\n                events.fire( \"place.show\", params );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###onPlaceShown\r\n         */\r\n\r\n        Roadie.prototype.onPlaceShown = function( json ){\r\n\r\n            var place = json.place;\r\n\r\n            var keys = Object.keys( this._renderPipeline );\r\n            if( keys.length > 0 ){\r\n                var keyMatch = keys.indexOf( place.id );\r\n                if( keyMatch >= 0 ){\r\n                        this.multiPassRenderer( place );\r\n                }\r\n                // AMONIS: 05/05/2016: Special _CURRENT_ keyword to use the current place in the\r\n                if( keys.indexOf( \"_CURRENT_\" ) >= 0 ){\r\n                    this.multiPassRenderer( { getType:function(){ return \"place\"; }, id:\"_CURRENT_\" } );\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * [createRoadieUrl description]\r\n         * @param  {json} placeId:\"123\"\r\n         * @return {string} Roadue url\r\n         */\r\n        Roadie.prototype.createRoadieUrl = function( parameters ){\r\n            parameters = parameters || {};\r\n\r\n            var url = null;\r\n\r\n            // roadie://visit/user/05e0f67f000117750d7cfb4d\r\n            if( parameters.ownerId && parameters.placeId ){\r\n                url = \"roadie://visit/place/\" + parameters.ownerId + \"/\" + parameters.placeId;\r\n            }\r\n\r\n            return url;\r\n        };\r\n\r\n        // Return the Animal function\r\n        return Roadie;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/services/roadie.js?");

/***/ }),

/***/ "./src/services/roadiecore.js":
/*!************************************!*\
  !*** ./src/services/roadiecore.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Pump API and Application 2.0.0.\n *\n * Copyright(c) 2015 Pumpco Inc.\n *\n  .\n  .\n */\n\n/**\n * #services.RoadieCore\n *\n * This is the original implementation of the Roadie, pulled across from CorePump.\n * I expect to merge this with the roadie implementation in OS2.\n *\n * <p>The Roadie is supposed to embody all of the capabilties that a Rock n Roll Roadire would do. The main functions that\n * are provided at present are:-<br>\n * - Hold: The ability to ask the Roadie to hold an item for you using a common shared key. The Key can be anything such\n * the name of a cog or an Id.<br>\n * - Release: The ability to ask the Roadie to release an item for your key.<br>\n * - Navigate: The ability to ask the Roadie to take you to visist a new Place or Space. The Roadie is responsible for<br>\n * the construction of the appropriate request and anything that will be required on arrival.<br>\n * <p>\n * <p>\n * The Roadie can be comminucated with directly IF you are developing the 'core' platform or are developing a 'system'\n * cog. Otherwise the Roadie can be communicated with via pulses for 'platform' and 'user' cogs. It is recommneded that\n * all 'cog' communication is via pulses to allow for easy scope changes in the future.\n * </p>\n * <h6>Navigate</h6>\n * <p>\n * var exchange = pumpco.core.jsbean.ExchangeFacade.getInOutCommand({<br>\n * &nbsp;&nbsp;ns: the.Const.CLASS.PUMPCO.ROADIE.VISIT.REQUEST,<br>\n * &nbsp;&nbsp;body: params<br>\n * });<br>\n * my.pump.pulse(exchange);<br>\n * Where the body 'params' are made up as follows: -<br>\n * Navigate using a Roadie URL ( Very powerful and can do place, space and cog navigation )<br>\n * &nbsp; { url: \"roadie://goto/place/user123/PaulinesPlace/space123/cog123?ownerId=pauline\" }<br>\n * Navigate using just the SpaceName property<br>\n * &nbsp; { \"spaceName\":\"BayerSpace\" }<br>\n * Navigate using just the Place property<br>\n * &nbsp; { \"place\": { \"ownerId\": \"bayer\", \"name\": \"place\" }<br>\n * </p>\n * <h6>Hold</h6>\n * <p>\n * var exchangeSet = pumpco.core.jsbean.ExchangeFacade.getInOutCommand({<br>\n * &nbap;&nbap;ns: the.Const.CLASS.PUMPCO.ROADIE.HOLD.REQUEST,<br>\n * &nbap;&nbap;body: { key:\"mymsg\", package: { message: \"pulsing hello world\" } }<br>\n * });<br>\n * pump.pulse( exchangeSet );<br>\n * </p>\n * <h6>Release</h6>\n * <p>\n * var exchangeGet = pumpco.core.jsbean.ExchangeFacade.getInOutCommand({<br>\n * &nbsp;&nbsp;ns: the.Const.CLASS.PUMPCO.ROADIE.RELEASE.REQUEST,<br>\n * &nbsp;&nbsp;body: { key:\"mymsg\" }<br>\n * });<br>\n * pump.pulse( exchangeGet );<br>\n * </p>\n * @author Andy Monis\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! mixins/endpoint */ \"./src/mixins/endpoint.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( Endpoint ){\n\n        /**\n         * ###delayedTask\n         * Local implementation to replace Ext.util.delayedTask\n         * @param  {Function} fn    [description]\n         * @param {JSON}   scope [description]\n         * @param {JSON}   args  [description]\n         * @return {JSON}         [description]\n         */\n        function delayedTask( fn, scope, args ){\n            return {\n                \"delay\": function( ms, something1, something2, data ){\n                    setTimeout( function( ){\n                        fn.apply( scope, data );\n                    }, ms );\n                }\n            }\n        };\n\n        function RoadieCore ( config ) {\n            this.name = \"pumpco.core.service.Roadie\";\n\n            // **private** {collection} _backpack\n            this._backpack = undefined;\n\n            // **private** [items] _renderPipeline\n            this._renderPipeline = undefined;\n\n            // **private** {object} _urlRegex\n            this._urlRegex = undefined;\n\n            // **private** [string] _urlNames\n            this._urlNames = [ \"url\", \"protocol\", \"verb\", \"identifier\", \"user\", \"place\", \"space\", \"cog\", \"params\" ];\n\n            // Instantiate the backpack\n            this._backpack = {};\n\n            // Instantiate the Render Pipeline\n            this._renderPipeline = {};\n\n            // AMONIS: 15-03-2018: Added Service style pulsing registration\n            // Removed dependency on global the.pump.\n            __mixin( this, new Endpoint( config ) );\n            // AMONIS: 15-03-2018: Added Configure the pulsing\n            this.addPulsing();\n\n            // AMONIS: 15-03-2018: REMOVED old pump registration process that depended on global.\n            // Create a new EndPoint for the Roadie\n            // this.endPoint = the.pump.createEndPoint(\n            //     \"Service_EndPoint\",\n            //     { address: \"pumpco.core.service.Roadie\" },\n            //     [\n            //         { \"cls\":\"pumpCo.roadie.release.response\", \"list\":\"white\" }\n            //     ],\n            //     [\n            //         { \"cls\":\"pumpCo.space.ready.event\",         \"list\":\"white\" },\n            //         { \"cls\":\"pumpCo.roadie.hold.request\",       \"list\":\"white\" },\n            //         { \"cls\":\"pumpCo.roadie.visit.request\",      \"list\":\"white\" },\n            //         { \"cls\":\"pumpCo.roadie.release.request\",    \"list\":\"white\" }\n            //     ]\n            // );\n            // this.endPoint.onPulsed(this.pulsed, this);\n\n            // Create the URL Regex and initialise\n            this._urlRegex = /^(?:([a-z]+):\\/\\/)([0-9.\\-A-Za-z]+)?\\/([0-9.\\-A-Za-z]+)?\\/?([0-9.\\-A-Za-z]+)?\\/?([0-9.\\-A-Za-z]+)?\\/?([0-9.\\-A-Za-z]+)?\\/?([0-9.\\-A-Za-z]+)?(\\?[^#]*)?$/;\n\n            the.log.debug(this, \"Instantiated successfully\");\n\n            // Add a delayed multipass render task\n            // this.delayedMultipass = delayedTask( this.multiPassRenderer, this, arguments );\n\n            this.delayedVisitPlace = delayedTask( this.visitPlace, this, arguments );\n        }\n\n        // Create a new prototype object to base this on ( in this case a base object )\n        RoadieCore.prototype = {}\n\n        RoadieCore.prototype.init =  function(){\n            // New mixin style listening\n            // the.app.services.placeService.listenShown({\n            //     //listener: this.multiPassRenderer,\n            //     listener: function( bean ){\n            //         this.delayedMultipass.delay(250, undefined, undefined, [ bean ]);\n            //     },\n            //     scope: this\n            // });\n        };\n\n        /**\n         * ### addPulsing\n         * AMONIS: 15-03-2018: Added new pulse registration\n         * Add in the pulsing handlers\n         */\n        RoadieCore.prototype.addPulsing = function(){\n            this.initEndpoint( this.name, [\n                { \"className\":\"pumpCo.roadie.release.response\",  \"targetName\":\"PumpHouse\" },\n                { \"className\":\"pumpCo.space.ready.event\",  \"targetName\":this.name },\n                { \"className\":\"pumpCo.roadie.hold.request\",  \"targetName\":this.name },\n                { \"className\":\"pumpCo.roadie.visit.request\",  \"targetName\":this.name },\n                { \"className\":\"pumpCo.roadie.release.request\",  \"targetName\":this.name },\n            ] );\n\n            // Register handler for event core place, usually to say that it has changed.\n            this.addPulseHandler( \"pumpCo.space.ready.event\", this.pulsed.bind( this ) );\n            this.addPulseHandler( \"pumpCo.roadie.hold.request\", this.pulsed.bind( this ) );\n            this.addPulseHandler( \"pumpCo.roadie.visit.request\", this.pulsed.bind( this ) );\n            this.addPulseHandler( \"pumpCo.roadie.release.request\", this.pulsed.bind( this ) );\n        };\n\n        /**\n         * Used to instruct the Roadie to hold an item.\n         * This is a Framework property and should not be accessed directly as Roadie visibility i snot guaranteed.\n         * If you want to ask the Roadie to hold something, he must be pulsed.\n         * @param key\n         * @param item\n         * @private\n         */\n        RoadieCore.prototype.hold = function (key, item) {\n            var itemToHold = this._backpack[ key ];\n\n            if (itemToHold) {\n                // Attempting to set a value that is already occupied\n                // This is valid but may override a previously set value\n                the.log.info(this, \"Already holding an item for key [\" + key + \"]. Dropping now.\");\n            }\n\n            the.log.info(this, \"Holding in the backpack the item with key [\" + key + \"]\");\n            // Add the item to the backpack\n            this._backpack[ key ] = item;\n        };\n\n        /**\n         * Safe method for retrieving from the backpack as it leaves it there.\n         * Although this does mean others may access it and it could be overwritten at any time.\n         * @param key\n         */\n        RoadieCore.prototype.peek = function (key) {\n            var item = this._backpack[ key ];\n            if (item) {\n                the.log.info(this, \"Peeking in the backpack for item with key [\" + key + \"] \");\n            }\n            return item;\n        };\n\n        /**\n         * Destructive method for retreiving from the backpack as it removes the item.\n         * @param key\n         */\n        RoadieCore.prototype.release = function (key) {\n            var item = this.peek(key);\n\n            if (item) {\n                // Remove the entry from the backpack\n                delete( this._backpack[ key ] );\n                the.log.info(this, \"Removing from the backpack item with key [\" + key + \"]\");\n            }\n\n            return item;\n        };\n\n        /**\n         * Method pulsed is the delegate method for handling responses from the Pump.\n         * All pump responses are in the for of an envelope and conform to the Pulse spec.\n         * var exchange = pumpco.core.jsbean.ExchangeFacade.getInOutCommand({\n         * body: {\n         *  \"place\": {\n         *    \"ownerId\": \"bayer\",\n         *    \"name\": \"place\"\n         *   }\n         *  }\n         * });\n\n         my.pump.pulse(exchange);\n         * @param envelope { pulseHeader:{}, pulseBody:{} }\n         */\n        RoadieCore.prototype.pulsed = function (exchange) {\n            // Get the pulse from the exchange body\n            var envelope = exchange.msgIn.body;\n\n            switch (envelope.pulseHeader.pulseClass) {\n                case 'exception':\n                {\n                    alert(\"Exception\");\n                    break;\n                }\n                case 'pumpCo.space.ready.event':\n                {\n                    //the.log.error(this, 'Roadie spaces is ready');\n                    if (this.contextPulse) {\n                        // this.endPoint.pulse(Ext.JSON.decode(this.contextPulse));\n                        this.endPoint.pulse( JSON.parse( this.contextPulse ) );\n                    }\n                    break;\n                }\n                case  \"pumpCo.roadie.hold.request\":\n                {\n                    var body = envelope.pulseBody;\n\n                    // Hold the item against the key provided\n                    var itemToHold = body['package'];\n                    this.hold(body.key, itemToHold);\n\n                    break;\n                }\n                case \"pumpCo.roadie.release.request\":\n                {\n                    var body = envelope.pulseBody;\n                    var header = envelope.pulseHeader;\n\n                    // Hold the item against the key provided\n                    var  storedItem;\n                    if( body.clear ){\n                        storedItem = this.release(body.key);\n                    } else {\n                        storedItem = this.peek(body.key);\n                    }\n\n                    // AMONIS: 03/05/2016: Added \"reqId\" for the requestingComponentId to route exchange back to requesting\n                    // Cog correctly.\n                    var exchange = pumpco.core.jsbean.ExchangeFacade.getInOutCommand({\n                        reqId: header.componentId,\n                        ns:     \"pumpCo.roadie.release.response\",\n                        refId:  header.referenceId,\n                        body:   storedItem\n                    });\n\n                    this.endPoint.pulse(exchange);\n\n                    break;\n                }\n                default:\n                {\n                    the.log.debug(this, \"Pulsed with a Visit Request\");\n\n                   var params = exchange.getPulseBody();\n                    //var params = exchange.inBody.pulseBody;\n\n                    // Todo There is a limitation present in that only one 'context pulse' can be sent at a time and there is the possibility that information could be overwritten / lost if multiple requests are made at the same time.\n                    // This should really be stored in a Map that contains information regarding the original endpoint etc to verify the pulse from\n                    if (params.contextPulse) {\n                        this.contextPulse = params.contextPulse;\n                    }\n\n                    // Navigate to a new spaces\n                    if (params.spaceId || params.spaceName) {\n                        // Hold the params for this space\n                        this.hold( params.spaceName, params );\n\n                        //\n                        this.visitSpace(params);\n                    }\n\n                    // Navigate to a new Place\n                    if (params.place) {\n                        this.visitPlace(params);\n                    }\n\n                    // Navigate to a new Site ( should only really be done after a successful login )\n                    if (params.site) {\n                        this.visitSite(params);\n                    }\n\n                    // New style URL navigation\n                    if (params.url) {\n                        this.navUrl( params );\n                    }\n                }\n            }\n        };\n\n        /**\n         * ### navUrl\n         * Navigates to a new URL\n         * AMONIS: 12/06/2017: Broken out from the procedure above, to allow targetting\n         * more easily by other functions ( testin gas well )\n         * @param  {type} params\n         * @return {type}        [description]\n         */\n        RoadieCore.prototype.navUrl = function( params ){\n            // Parse the URL passed in\n            //var url = Ext.htmlDecode(params.url);\n            var url = params.url;\n\n            var linkType = pumpco.core.services.RoadieUrl.getType( url );\n            if( linkType === \"roadie\" ){\n                var urlParts = pumpco.core.services.RoadieUrl.parse(url);\n\n                // Hold anything in the params\n                if (urlParts.params) {\n\n                    if (urlParts.cog) {\n                        this.hold(urlParts.cog, urlParts.params);\n                    }\n                    else if (urlParts.space) {\n                        this.hold(urlParts.space, urlParts.params);\n                    }\n                    else if (urlParts.place) {\n                        this.hold(urlParts.place, urlParts.params);\n                    }\n                    else {\n                        this.hold(urlParts.user, urlParts.params);\n                    }\n                }\n\n                // Get the current Place that is being displayed\n                // Modified for OS2.\n                var currentPlace = undefined;\n                if( this.roadieVersion && this.roadieVersion === \"2\" )\n                    currentPlace = this.getCurrentPlace();\n                else\n                    currentPlace = the.app.services.placeService.getCurrentPlace();\n\n                // Test if the current place is the shown and determine whether to do a Place or Space nav\n                if( currentPlace.id === urlParts.place ){\n                    this.visitSpace({ spaceId: urlParts.space });\n                } else {\n                    // If a user is specified attempt to load the users Place\n                    if( urlParts.user ){\n                        // Request a specific users Home.\n                        //this.delayedVisitPlace.delay(50, undefined, undefined, [ { place: { \"id\": urlParts.place, \"ownerId\": urlParts.user } } ]);\n                        this.delayedVisitPlace.delay(50, undefined, undefined, [ { place: { \"name\": \"Home\", \"ownerId\": urlParts.user } } ]);\n                        //this.visitPlace( { place: { \"name\": \"Home\", \"ownerId\": urlParts.user } } );\n                    } else {\n                        // Request the authenticated users Home\n                        this.delayedVisitPlace.delay(50, undefined, undefined, [ { place: { \"name\": \"Home\", \"ownerId\": urlParts.user } } ]);\n                        //this.visitPlace( { place: { \"name\": \"Home\"  } } );\n                    }\n\n                    // Add a subsequent Space nav to the render pipeline\n                    if( urlParts.space ){\n                        this._renderPipeline[ urlParts.place ] = urlParts.space;\n                    }\n                }\n            } else if( linkType === \"anchor\" ){\n                // With a regular anchor the roadie will attempt to redirect to that package\n                window.location.replace( url );\n            }\n        };\n\n        RoadieCore.prototype.getState = function () {\n            // var pulse = Ext.JSON.decode(this.contextPulse);\n            var pulse = JSON.parse( this.contextPulse );\n            return pulse;\n        };\n\n        /**\n         *\n         * @param bean {Object} A valid PumpCo bean such as a Site, place, Space or Cog\n         */\n        RoadieCore.prototype.multiPassRenderer = function( bean ){\n            // Attempt to get the next request from the render pipeline by Bean Id\n            the.log.debug( this, \"MULTIPASS:  Render for id=\" + bean.id );\n\n            // Find any pipeline requests for this object\n            var key = this._renderPipeline[ bean.id ];\n\n            // Exit if no further requests are found\n            if( !key ){\n                the.log.debug( this, \"MULTIPASS: Nothing to render for key:\" + bean.id );\n                return;\n            }\n\n            // Delete the pipeline request as we are about to process\n            delete this._renderPipeline[ bean.id ];\n\n            var beanType = bean.getType();\n            if( beanType === \"place\" ){\n                the.log.debug( this, \"MULTIPASS: Space navigate to key [\" + key + \"]\" );\n\n                // AMONIS: 05/05/2016: Not a great fix. Look for \"'\" to differentiate between an Id\n                // and a String ( relative ) space name.\n                // Expect to see '' at start and end ( not in the middle )\n                if( key.indexOf( \"'\" ) === 0 ){\n                    // Remove 'System.spaceName' single quotes from around the space name\n                    key = key.substring( 1, key.length-1 );\n\n                    this.visitSpace( { spaceName:key } );\n                } else {\n                    this.visitSpace( { spaceId:key } );\n                }\n\n            }\n\n            return this;\n        };\n\n        /**\n         * Method to interact with the PlaceManager to allow a new Place to be loaded dynamically\n         * This is a destructive action and will tear down any existing Place\n         * @param params { place: { id:String, name:String } }\n         */\n        RoadieCore.prototype.visitPlace = function (params) {\n            if (the.app.services && the.app.services.placeService) {\n                // New style boot process\n\n                // If no owner is specified use logged in user.\n                if (!params.place.ownerId) {\n                    params.place.ownerId = the.app.model.user.id;\n                }\n\n                // REquest for the place to be shown\n                the.app.services.placeService.show(params.place);\n\n                // Add the place\n                the.app.services.placeService.add(undefined, params.place);\n\n            } else {\n                // Old style boot process. DEPRECATED\n\n                // Remove all previous Places\n                the.app.controller.placeManager.remove(params);\n\n                var placeSpec = {};\n                if (params.place.id) {\n                    placeSpec.id = params.place.id;\n                }\n                if (params.place.name) {\n                    placeSpec.name = params.place.name;\n                }\n                if (params.place.ownerId) {\n                    placeSpec.ownerId = params.place.ownerId;\n                }\n\n                placeSpec.parentContainer = the.app.model.site.placeContainer;\n\n\n                // Ask PlaceManager to show the spaces when it is ready\n                the.app.controller.placeManager.add(placeSpec);\n            }\n        };\n\n        /**\n         * Method to interact with the SpaceManager to allow new Spaces to be loaded and navigated to.\n         * This is not destructive and will preserve / cache any existing spaces for rapid navigation\n         */\n        RoadieCore.prototype.visitSpace = function (params) {\n            if (the.app.services && the.app.services.spaceService) {\n                // New style boot process\n                var key = params.spaceId ? { id: params.spaceId } : { name: params.spaceName };\n\n                the.app.services.spaceService.show(key);\n\n                the.log.debug(this, \"NEW: Visiting space[\" + key.id + \"]\");\n            } else {\n                // Old style boot process. DEPRECATED\n                // Check to see if the space is being refreshed.\n                if (params.refresh && params.refresh === true) {\n\n                    // Remove all references of the spaces\n                    the.app.controller.spaceManager.remove(params.spaceName);\n\n                }\n                the.app.controller.spaceManager.show({ id: params.spaceId, name: params.spaceName });\n            }\n\n        };\n\n        /**\n         *\n         * @param params\n         */\n        RoadieCore.prototype.visitSite = function (params) {\n\n            // Set the authToken in the Model\n            the.app.model.user.authToken = params.authToken;\n\n            // Defaults tp remove all existing sites\n            the.app.services.siteService.remove();\n\n            the.app.services.siteService.add(params.site);\n\n            //pumpco.core.shared.SpecParser.parse( { \"site\": { id:params.siteId } } )\n            the.log.debug(this, \"Site navigation complete.\");\n        };\n\n\n        return RoadieCore;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/services/roadiecore.js?");

/***/ }),

/***/ "./src/services/site.js":
/*!******************************!*\
  !*** ./src/services/site.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n    Events\r\n    An events controller for passing information between processing in the system.\r\n    Aimed at complex Aysnchronous events, not DOM events.\r\n    @author Andy Monis\r\n\r\n    Kernel Calls\r\n    \"security.hasAuthMechanism\": returns true or false if a valid auth mechanism is found\r\n    \"security.autoLogin\": attempts to authenticate using auth mechanism found\r\n*/\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! knockout */ \"knockout\"), __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! beans/site */ \"./src/beans/site.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko, events, log, SiteBean ){\r\n        // This runs before Main has been called.\r\n        log.debug( \"services/site\" );\r\n\r\n        /**\r\n         * Constructor\r\n         */\r\n        function Site ( params ) {\r\n            this.name    = \"site\";\r\n            this.version = \"0.0.1\";\r\n\r\n            // The main Site ViewModel which will be mapped directly to the pulses\r\n            this.kernel = params.kernel;\r\n            // @property runtime: Internal property set by the Kernel. Contains settings to determine how it is running.\r\n            this.runtime        = params.runtime || {};\r\n\r\n            var model    = params.model;\r\n\r\n            // Add a new Observable for the Site Model\r\n            model.sites = this.sites = ko.observableArray( [] );\r\n\r\n            // AMONIS: 07/09/2015: Store the Desired Application param. Part of the Specify an App project.\r\n            this._appParams = params.appParams;\r\n\r\n            // AMONIS: 13/01/2016: Store a reference to the requested system site information. Allows re-use id oauth fails\r\n            this.systemSiteSpec = undefined;\r\n            /*\r\n                EVENTS\r\n             */\r\n\r\n            // Register to listen to 'site.add' events\r\n            events.on( \"site.addSystemSite\",    function( params ){ this.addSystem( params ); },    this );\r\n\r\n            //events.on( \"site.addUserSite\",      function( params ){ this.addUser( params ); },      this );\r\n            // user.loaded is fired when a user has been authenticated and retreived successfully.\r\n            events.on( \"user.loaded\",      function( params ){\r\n                this.addUser( { \"id\":params.profileBody.id, \"username\":params.id });\r\n            }, this );\r\n\r\n            // Notify the Kernel that the service is ready,.\r\n            this.kernel.invoke( \"kernel.process.loaded\", { \"name\":this.name } );\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        Site.prototype = {};\r\n\r\n        /**\r\n         * Add a new site\r\n         * @param spec { id:\"siteGuid\" }\r\n         */\r\n        Site.prototype.addSystem = function( spec ){\r\n            if( !spec && !this.systemSiteSpec ){\r\n                log.debug( \"Site.addSystem(): No Site Spec provided\" );\r\n                return;\r\n            }\r\n\r\n            log.debug( \"service.site.addSystem()\" );\r\n\r\n            // Notify that that Site.add() request has been made\r\n            events.fire( \"site.add.start\", { \"site\":spec } );\r\n\r\n            // AMONIS: 13/01/2016: Store the information for possible use if oauth mechanisms fail.\r\n            if( spec )\r\n                this.systemSiteSpec = spec;\r\n\r\n            // AMONIS: 13/01/2016: Check with the Security Service if there is an auto login mehod available.\r\n            var hasAuthMechanism = this.kernel.invoke( \"security.hasAuthMechanism\", {} );\r\n            if( hasAuthMechanism ){\r\n                // Attempt the auto login using the Security Service.\r\n                log.debug( \"Try Security autologin, using oauth\" );\r\n\r\n                this.kernel.invoke( \"security.autoLogin\", {} );\r\n            } else {\r\n                // Attempt regular login using the Login Screen and System Site etc.\r\n                log.debug( \"Site.addSystem(): site.add [\" + this.systemSiteSpec.id + \":\"+ this.systemSiteSpec.name + \"]\" );\r\n\r\n                if( /*this.systemSiteSpec.id &&*/ this.systemSiteSpec.app ){\r\n                \t// Start the loading process\r\n                \tevents.fire( \"drive.get.appsystemsite\", { \"app\":this.systemSiteSpec.app, \"id\":this.systemSiteSpec.id, \"name\":this.systemSiteSpec.name, /*\"username\":this.systemSiteSpec.username,*/ \"fn\":this.loaded, \"scope\":this } );\r\n    \t        } else {\r\n    \t        \t// Start the loading process\r\n                \tevents.fire( \"drive.get.systemsite\", { \"id\":this.systemSiteSpec.id, /*\"username\":this.systemSiteSpec.username,*/ \"fn\":this.loaded, \"scope\":this } );\r\n    \t        }\r\n            }\r\n\r\n        };\r\n\r\n        /**\r\n         * Add a new site\r\n         * @param spec { id:\"userGuid\", username:\"pauline.smith\" }\r\n         */\r\n        Site.prototype.addUser = function( spec ){\r\n            if( !spec ){\r\n                log.debug( \"Site.addUser(): No Site Spec provided\" );\r\n                return;\r\n            }\r\n\r\n            log.debug( \"Site.addUser(): site.add [\" + spec.id + \"]\" );\r\n\r\n            // Notify that that Site.add() request has been made\r\n            events.fire( \"site.add.start\", { \"site\":spec } );\r\n\r\n            this.delayedShowOrCancel( \"Loading site [\" + spec.id + \"] for \" + spec.username );\r\n\r\n            // AMONIS: 07/09/2015: Static App specification\r\n            // If the _appParams are set, use that \"id\" in preference to the default id's to get a Site Fixture from Drive.\r\n            // Request a Site Spec but merge the data of Id's with Fixture in drive.\r\n            if( this._appParams ){\r\n            \t// Start the STANDALONE APP loading process\r\n            \tevents.fire( \"drive.get.appsite\", { \"app\":this._appParams, \"id\":spec.id, \"username\":spec.username, \"fn\":this.loaded, \"scope\":this } );\r\n            } else {\r\n            \t// Start the DEFAULT loading process\r\n            \tevents.fire( \"drive.get.usersite\", { \"id\":spec.id, \"username\":spec.username, \"fn\":this.loaded, \"scope\":this } );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###delayedShowOrCancel\r\n         * Displays a snackbar message after a wait, or cancels it.\r\n         * @param {JSON} msg [description]\r\n         * @return {JSON}     [description]\r\n         */\r\n        Site.prototype.delayedShowOrCancel = function( msg ){\r\n            if( this._delayedShowOrCancel ){\r\n                clearTimeout( this._delayedShowOrCancel );\r\n                delete this._delayedShowOrCancel;\r\n\r\n                // AMONIS: 13/07/2016: Hide the message from the user that the site has been requested\r\n                this.kernel.invoke( \"snackbar.hide\" );\r\n            } else {\r\n                this._delayedShowOrCancel = setTimeout( function(){\r\n                    // AMONIS: 13/07/2016: Display to the user that the site has been requested\r\n                    this.kernel.invoke( \"snackbar.show\", { \"msg\":msg } );\r\n                }.bind( this ), 5000 );\r\n            }\r\n        };\r\n\r\n        Site.prototype.find = function( id ){\r\n            var site = undefined;\r\n            __.eachSync2( this.sites(), function( item, index, collection ){\r\n                if( item.id === id )\r\n                    site = item;\r\n            } );\r\n            return site;\r\n        };\r\n\r\n\r\n        Site.prototype.hide = function( id ){\r\n            var obj = this.find( id );\r\n\r\n            obj.oVisible( false );\r\n            events.fire( \"site.hidden\", { \"id\":id } );\r\n        };\r\n\r\n\r\n        Site.prototype.show = function( id ){\r\n            var site = this.find( id );\r\n\r\n            log.debug( \"Site.show(\" + id + \")\" );\r\n\r\n            if( site ){\r\n                this.hide( this.current );\r\n                site.oVisible( true );\r\n                events.fire( \"site.shown\", site );\r\n\r\n                // Send a synchronous event to show a Place ( this just registers to show )\r\n                var placeId = site.place.Home.id === \"\" ? site.place.Mobile.id : site.place.Home.id ;\r\n                events.fire( \"place.show\", { \"id\":placeId }, { \"sync\":true } );\r\n            } else {\r\n                // Place not known. Do we need to get it.\r\n                log.debug( \"Site.show(): Site NOT FOUND [\" + id + \"]\" );\r\n            }\r\n        };\r\n\r\n        Site.prototype.loaded = function( site, error ){\r\n        \tlog.debug( \"service.site.loaded()\" );\r\n\r\n        \tif( site ){\r\n        \t\t// Site is a valid bean\r\n        \t\t//\r\n                // AMONIS: 14/07/2016: Hide the spinner\r\n                this.kernel.invoke( \"spinner.hide\" );\r\n\r\n                this.delayedShowOrCancel();\r\n\r\n        \t\t// This is the end of the major loading of the site spec.\r\n\t            events.fire( \"site.loaded\", site );\r\n\r\n\t            // Store a reference to the current site\r\n\t            this.current = site.id;\r\n\r\n\t            // Push the site into the model\r\n\t            this.sites.push( site );\r\n\r\n\t            // Make the site visible;\r\n\t            this.show( site.id );\r\n\r\n\t            // As we have just loaded a site, we now need to load the default Place\r\n\t            var placeId = site.place.Home.id === \"\" ? site.place.Mobile.id : site.place.Home.id ;\r\n\t            if( !placeId || placeId === \"\" ){\r\n\t                log.emergency( \"EMERGENCY: PlaceService: No placeId found. Halting...\" )   ;\r\n\r\n\t                // @meta error error-place01 Error is thrown when there is no placeId for the Home or Mobile place.\r\n\t                this.kernel.invoke( \"toast.alert\", { \"msg\":\"error: No 'Mobile' version found. Consider switching to the 'Desktop' version\" } );\r\n\t            } else {\r\n\t                events.fire( \"place.add\", { \"id\":placeId } );\r\n\t            }\r\n\r\n                // Mark the end of a load. If a matching site was marked to record, output the timings\r\n                var perf = __markEnd( site.id  );\r\n                if( perf !== undefined ) the.log.emergency( perf );\r\n\r\n                // Notify that that Space.loaded() request has been made\r\n                events.fire( \"site.add.finish\", { \"site\":site } );\r\n        \t} else {\r\n                // This section is triggered if the Site Service fails to load a Site correctly.\r\n        \t\tlog.debug( this.name + \": Invalid Site returned with error: \" + error );\r\n\r\n                // AMONIS: 13/07/2016: Hide the message from the user that the site has been requested\r\n                this.kernel.invoke( \"snackbar.show\", { msg:this.name + \": Invalid Site returned with error: \" + error } );\r\n\r\n                // Trigger a load event failure.\r\n                events.fire( \"site.load.fail\", {} );\r\n        \t}\r\n\r\n        };\r\n\r\n        /**\r\n         * ### toString\r\n         * @return {[type]} [description]\r\n         */\r\n        Site.prototype.toString = function(){\r\n            return this.name + \":\" + this.version;\r\n        }\r\n\r\n        // Return the Animal function\r\n        return Site;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n/*\r\n    SITE.OWNER JSON\r\n    {\r\n        \"id\": \"0036ebcb69f670be00000001\",\r\n        \"domain\": \"patient\",\r\n        \"preferences\": {\r\n            \"location\": [{\r\n                \"label\": \"time zone\",\r\n                \"type\": \"tz\",\r\n                \"value\": \"Europe/London\"\r\n            },\r\n            {\r\n                \"label\": \"locale\",\r\n                \"type\": \"locale\",\r\n                \"value\": \"en-gb\"\r\n            }],\r\n            \"units\": [{\r\n                \"label\": \"heart rate\",\r\n                \"type\": \"rate\",\r\n                \"value\": \"bpm\"\r\n            },\r\n            {\r\n                \"label\": \"blood reading\",\r\n                \"type\": \"reading\",\r\n                \"value\": \"mmol/L\"\r\n            },\r\n            {\r\n                \"label\": \"capacity\",\r\n                \"type\": \"capacity\",\r\n                \"value\": \"L\"\r\n            },\r\n            {\r\n                \"label\": \"height\",\r\n                \"type\": \"height\",\r\n                \"value\": \"in\"\r\n            },\r\n            {\r\n                \"label\": \"weight\",\r\n                \"type\": \"weight\",\r\n                \"value\": \"lb\"\r\n            },\r\n            {\r\n                \"label\": \"blood pressure\",\r\n                \"type\": \"bloodPressure\",\r\n                \"value\": \"mmHg\"\r\n            },\r\n            {\r\n                \"label\": \"blood glucose\",\r\n                \"type\": \"bloodGlucose\",\r\n                \"value\": \"mmol/L\"\r\n            },\r\n            {\r\n                \"label\": \"energy\",\r\n                \"type\": \"energy\",\r\n                \"value\": \"kcal\"\r\n            },\r\n            {\r\n                \"label\": \"distance\",\r\n                \"type\": \"distance\",\r\n                \"value\": \"yd\"\r\n            }]\r\n        }\r\n    }\r\n*/\r\n\n\n//# sourceURL=webpack://AOS/./src/services/site.js?");

/***/ }),

/***/ "./src/services/space.js":
/*!*******************************!*\
  !*** ./src/services/space.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * # Services.Space\r\n *\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n */\r\n\r\n\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! knockout */ \"knockout\"), __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! utils/i18n */ \"./src/utils/i18n.js\"), __webpack_require__(/*! mixins/endpoint */ \"./src/mixins/endpoint.js\"), __webpack_require__(/*! beans/space */ \"./src/beans/space.js\"), __webpack_require__(/*! bindings/space */ \"./src/bindings/space.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko, events, log, i18n, Endpoint, Space, SpaceBinding ){\r\n        var _this;\r\n\r\n        // This runs before Main has been called.\r\n        log.debug( \"services/space\" );\r\n\r\n        var model = undefined;\r\n\r\n        /**\r\n         * ## *Space*\r\n         * Service manages all of the Spaces in the running platform\r\n         * A Space is hosted inside a Place and contains 0..* Cogs. Logocally a\r\n         * Space is similar to a Room in a house. People can be invited into\r\n         * your Space and they can be given permission to access / use Cogs in\r\n         * your Space.\r\n         * ```js\r\n         * --------------       ---------------\r\n         * | ---------- |       | ----- ----- |\r\n         * | |        | |       | |cog| |cog| |\r\n         * | |        | |       | ----- ----- |\r\n         * | | 1 cog  | |       |             |\r\n         * | |        | |       |             |\r\n         * | ---------- |       |             |\r\n         * |   space    |       |   space     |\r\n         * --------------       ---------------\r\n         * ```\r\n         * @param {type} params\r\n         */\r\n        function Space ( params ) {\r\n            _this = this;\r\n\r\n            // **property** name.      Internal Service name.\r\n            this.name       = \"space\";\r\n\r\n            // **property** version.    Internal verson number. ( not actually used at present )\r\n            this.version    = \"0.0.1\";\r\n            // **property** current.    Internal Pointer to the current space.\r\n            this.current    = undefined;\r\n\r\n            // **property** platform.  Either Desktop or Mobile depend on current running environment.\r\n            this.platform   = params.platform;\r\n\r\n            // **property** kernel.    Internal Pointer. a reference to the Kernel\r\n            this.kernel     = params.kernel;\r\n\r\n            // **property** runtime: Internal property set by the Kernel. Contains settings to determine how it is running.\r\n            this.runtime     = params.runtime || {};\r\n\r\n            // **private** _spaceShowOrder: Internal property to record the order of Space Show requests.\r\n            // This is important as the loading is Async so earlier requested spaces MAY load faster than\r\n            // later requests and then display. i.e. if the HomeSpace is very big\r\n            this._spaceShowOrder = [];\r\n\r\n            // The main Place ViewModel which will be mapped directly to the pulses\r\n            model    = params.model;\r\n            this.extendModel( model );\r\n\r\n            // Add a new Observable for the Place Model\r\n            model.spaces = this.spaces = ko.observableArray( [] );\r\n            this.spaces.getChildren = function( id ){\r\n                return [];\r\n            };\r\n\r\n            // Register to listen to 'place.add' events\r\n            events.on( \"cog.added\",  function( params ){ this.added( params.cog, params.error ); }, this );\r\n            events.on( \"space.add\",  function( params ){ this.add( params ); }, this );\r\n            events.on( \"space.show\", function( params ){ this.eventShow( params ); }, this );\r\n            // Event triggered to request navigating to the Home space for the user.\r\n            events.on( \"space.request.home\", function( params ){ this.eventRequestHome( params ); }, this );\r\n\r\n            // Listener to place events\r\n            events.on( \"place.shown\", function( params ){ this.eventPlaceShown( params ); }, this );\r\n\r\n            // Register Kernel API calls\r\n            // usage:   space = this.kernel.invoke( \"getSpace\", {} );\r\n            //          space = this.kernel.invoke( \"getSpace\", { \"id\":\"123\" } );\r\n            this.kernel.addApi( \"getSpace\",             this.getSpace,      this );\r\n            // usage: space = this.kernel.invoke( \"getSpaceBy\", { \"type\":\"appName\", \"name\":\"ConvCentre\" } );\r\n            this.kernel.addApi( \"space.getSpaceBy\",     this.getSpaceBy,    this );\r\n\r\n\r\n            // Add in the Legacy API for cogs\r\n            this.addLegacyAPI();\r\n\r\n            __mixin( this, new Endpoint( params ) );\r\n\r\n            this.addPulsing();\r\n\r\n            // Notify the Kernel that the service is ready,.\r\n            this.kernel.invoke( \"kernel.process.loaded\", { \"name\":this.name } );\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        Space.prototype = {};\r\n\r\n\r\n        /**\r\n         * ### addPulsing\r\n         * Add in the pulsing handlers\r\n         */\r\n        Space.prototype.addPulsing = function(){\r\n\r\n            this.initEndpoint( this.name, [\r\n                // Request sent to Space to enable \"edit\" mode\r\n                { \"className\":\"internal.system.space.rearrange.request\",  \"targetName\":this.name }\r\n            ] );\r\n\r\n            // Register handler for event core place, usually to say that it has changed.\r\n            this.addPulseHandler( \"internal.system.space.rearrange.request\", this.internalSystemSpaceRearrangeRequest.bind( this ) );\r\n        };\r\n\r\n// @DEPRECATED Ext V1 code\r\n        Space.prototype.addLegacyAPI = function(){\r\n            // Create UserUtils namespace\r\n            __ns( \"pumpco.utils.UserUtils\" );\r\n\r\n            /**\r\n             * ### getCurrentSpaceName\r\n             * Returns the current Space Name that this cog is hosted in.\r\n             */\r\n            pumpco.utils.UserUtils.getCurrentSpaceName = function(){\r\n                var space = _this.find( _this.current );\r\n\r\n                // Return the space name if found or undefined\r\n                return space ? space.name : undefined;\r\n            }\r\n        };\r\n// @DEPRECATED Ext V1 code\r\n\r\n        /**\r\n         * ### extendModel\r\n         * @param  {type} model\r\n         * @return {type}       [description]\r\n         */\r\n        Space.prototype.extendModel = function( model ){\r\n            /**\r\n             * ### getSpaces\r\n             * function to extend the Model capabilities for the SpaceService to get the\r\n             * Spaces for the Place ( id )\r\n             * @param id {string} id of a place to get the spaces for\r\n             */\r\n            model.getSpaces = function( id ){\r\n                var space = [];\r\n                for( var i=0; i<model.spaces().length; i++ ){\r\n                    var cog = model.spaces()[ i ];\r\n                    if( cog.parentId === id ){\r\n                        space.splice( space.length, 0, cog );\r\n                    }\r\n                }\r\n                return space;\r\n            };\r\n        };\r\n\r\n        /**\r\n         * ### makeMobileName\r\n         * @param  {type} name\r\n         * @return {type}      [description]\r\n         */\r\n        Space.prototype.makeMobileName = function( name ){\r\n            var mobileName = name.toLowerCase();\r\n            var dot = mobileName.indexOf( \".\" );\r\n\r\n            var firstPart = name.substring( 0, dot + 1 );\r\n\r\n            var lastPart = name.substring( dot + 1 );\r\n            lastPart = lastPart.substring( 0, 1 ).toUpperCase() + lastPart.substring( 1 );\r\n\r\n            var mobileName = firstPart + \"mobile\" + lastPart;\r\n\r\n            return mobileName;\r\n        };\r\n\r\n        /**\r\n         * ### eventRequestHome\r\n         * Handles the \"space.request.home\" event\r\n         * Checks for an initialSpace property and uses that in preference over the default Home space.\r\n         * Shows the Space as a result\r\n         */\r\n        Space.prototype.eventRequestHome = function( params ){\r\n            var place = this.kernel.invoke( \"getPlace\", {} );\r\n\r\n            // Check for an initialSpace, that overrides the default Home space\r\n            if( place.initialSpace && place.initialSpace.length > 0 ){\r\n                // Use the top listed initial space\r\n                this.eventShow( { name:place.initialSpace[0] } );\r\n            } else {\r\n                // Use the regular default, which is the first space.\r\n                this.eventShow( { name:place.space[0].name } );\r\n            }\r\n        }\r\n\r\n        /**\r\n         * ### eventShow\r\n         * @param  {type} params\r\n         * @return {type}        [description]\r\n         */\r\n        Space.prototype.eventShow = function( params ){\r\n        \t//var existingSpace = this.find( )\r\n        \tvar existingSpace;\r\n\r\n        \tif( params.name ){\r\n                // Find by name may return multiple spaces, if you are visiting someone.\r\n                // Therefore we need, search within the currently visible \"Place\" as a default.\r\n                var place = this.kernel.invoke( \"getPlace\", {} );\r\n\r\n                // Check for Desktop Version of Space\r\n                existingSpace = this.findByNameAndParent( params.name, place.id );\r\n\r\n                // Check for Mobile Version of Space\r\n                if( !existingSpace ){\r\n                    // Check for Mobile variant of Space\r\n                    var mobileName = this.makeMobileName( params.name );\r\n                    existingSpace = this.findByNameAndParent( mobileName, place.id );\r\n                }\r\n            }\r\n\r\n        \tif( params.id )\r\n        \t\texistingSpace = this.find( params.id );\r\n\r\n            // AMONIS: 28/09/2017: Only refresh the Space if it is not currently being shown\r\n        \tif( existingSpace && existingSpace.id !== this.current ){\r\n                // AMONIS: 15/06/2017: Add the show request to the spaceShowOrder to preserve order of requests\r\n                this._spaceShowOrder.push( existingSpace.id );\r\n        \t\t// This space has been visited before.\r\n        \t\tthis.show( existingSpace.id );\r\n        \t} else {\r\n\t\t\t\t// This space has not been visited before.\r\n\t\t\t\t// Add it ( i.e. load it from the drive )\r\n\t\t\t\tthis.add( params );\r\n\t\t\t}\r\n        };\r\n\r\n        /**\r\n         * ### eventPlaceShown\r\n         * Handles what happens on place navigation.\r\n         * AMONIS: 18/03/2016: This is only really relevant when re-showing ( re-visiting ) a users place.\r\n         * VITAL: Initially a new space is created and shown, but in the case of an existing place being re-visited\r\n         * We need to alert that space that was previously being shown, that is is now visible again.\r\n         * This is only usually required if the same place is being visited over and over again, without\r\n         * swapping spaces\r\n         */\r\n        Space.prototype.eventPlaceShown = function( json ){\r\n            var place = json.place;\r\n            var options = json.options;\r\n\r\n            // Get all spaces for the current place\r\n            var spaces = this.findByParentId( json.place.id );\r\n\r\n            // iterate over all of the spaces for the place\r\n            for( var i=0; i<spaces.length; i++ ){\r\n                // Signal that the visible space has been re-shown\r\n                // This is picked up by the Cog, which will cause any re-loading / alteration of data to happen.\r\n                // ( Aslong as the cog is programmed correctly )\r\n\r\n                if( spaces[ i ].oVisible() ){\r\n                    // Update the \"current\" space pointer, for quick reference.\r\n                    this.current = spaces[ i ].id;\r\n\r\n                    // Fire an event\r\n                    events.fire( \"space.shown\", { space:spaces[ i ], options:options } );\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ### add\r\n         * @param {type} spec\r\n         */\r\n        Space.prototype.add = function( spec ){\r\n            if( !spec ){\r\n                log.debug( \"Space.add(): No Space Id provided\" );\r\n                return;\r\n            }\r\n\r\n            // AMONIS: 15/06/2017: Add the show request to the spaceShowOrder to preserve order of requests\r\n            this._spaceShowOrder.push( spec.id || spec.name );\r\n\r\n            log.debug( \"Space.add(): space.add [\" + spec.id + \"]\" );\r\n\r\n            // Notify that that Place.add() request has been made\r\n            events.fire( \"space.add.start\", { \"space\":spec } );\r\n\r\n            // Start the loading process\r\n            // If searching by by name, you may not get an exact match ( multiple backpacks may exist ) as name is NOT unique.\r\n            // Pass in the current PLACE ID as well, to use as a reference.\r\n            var place = this.kernel.invoke( \"getPlace\", {} );\r\n            events.fire( \"drive.get.space\", { \"id\":spec.id, \"name\":spec.name, \"parentId\":place.id, \"fn\":this.loaded, \"scope\":this } );\r\n        };\r\n\r\n        /**\r\n         * ### added\r\n         * @param  {type} cog\r\n         * @param  {type} error\r\n         * @return {type}       [description]\r\n         */\r\n        Space.prototype.added = function( cog, error ){\r\n            var space = this.find( cog.parentId );\r\n\r\n            if( error ){\r\n                // an error occurred loading the Cog.\r\n                // Just log this for now\r\n                log.emergency( \"An error occurred loading cog [\" + cog.id + \"]. \" + error );\r\n            }\r\n\r\n            // Chekc that a space exists\r\n            if( !space ){\r\n                log.debug( \"Space.added(): No space found for cog [\" + cog.id + \"]\" );\r\n                return;\r\n            }\r\n\r\n            // Increment the space added cound and compare to the expected length\r\n            space.added++;\r\n\r\n            if( space.component.length === space.added ){\r\n                // AMONIS: 15/06/2017: Add the show request to the spaceShowOrder to preserve order of requests\r\n                // this._spaceShowOrder.push( space.id );\r\n                // If the two match, the number of cogs equals the number of components\r\n                // The space is now ready to show.\r\n                this.show( space.id );\r\n\r\n\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ### find\r\n         * @param  {type} id\r\n         * @return {type}    [description]\r\n         */\r\n        Space.prototype.find = function( id ){\r\n            var obj = undefined;\r\n            __.eachSync2( this.spaces(), function( item, index, collection ){\r\n                if( item.id === id )\r\n                    obj = item;\r\n            } );\r\n            return obj;\r\n        };\r\n\r\n        /**\r\n         * ### findByName\r\n         * @param  {type} name\r\n         * @return {type}      [description]\r\n         */\r\n        Space.prototype.findByName = function( name ){\r\n            var obj = undefined;\r\n            __.eachSync2( this.spaces(), function( item, index, collection ){\r\n                if( item.name === name )\r\n                    obj = item;\r\n            } );\r\n            return obj;\r\n        };\r\n\r\n        /**\r\n         * ### findByNameAndParent\r\n         * @param  {type} name\r\n         * @param  {type} parentId\r\n         * @return {type}          [description]\r\n         */\r\n        Space.prototype.findByNameAndParent = function( name, parentId ){\r\n            var obj = undefined;\r\n            __.eachSync2( this.spaces(), function( item, index, collection ){\r\n                if( item.name === name && item.parentId === parentId )\r\n                    obj = item;\r\n            } );\r\n            return obj;\r\n        };\r\n\r\n        /**\r\n         * ### findByParentId\r\n         * @param  {type} id\r\n         * @return {type}    [description]\r\n         */\r\n        Space.prototype.findByParentId = function( id ){\r\n            var objs = [];\r\n            __.eachSync2( this.spaces(), function( item, index, collection ){\r\n                if( item.parentId === id )\r\n                    objs.push( item );\r\n            } );\r\n            return objs;\r\n        };\r\n\r\n        /**\r\n         * ### findByAppName\r\n         * Finds a Space by AppName.\r\n         * This allows identification of a Space by a role, when Mobile and Desktop versions exist.\r\n         * .e.g convCentreSpace and mobileConvCentreSpace.\r\n         * would both be requested by AppName as \"ConvCentre\"\r\n         */\r\n        Space.prototype.findByAppName = function( appName ){\r\n            var objs = [];\r\n            __.eachSync2( this.spaces(), function( item, index, collection ){\r\n                if( item.params && item.params.appName && item.params.appName === appName )\r\n                    objs.push( item );\r\n            } );\r\n            return objs;\r\n        };\r\n\r\n        /**\r\n         * ### getSpace\r\n         * Returns the current Place\r\n         */\r\n        Space.prototype.getSpace = function( params ){\r\n            params = params || {};\r\n\r\n            var key = this.current;\r\n            if( params.id )\r\n                key = params.id;\r\n\r\n            var space = this.find( key );\r\n\r\n            return space;\r\n        };\r\n\r\n        /**\r\n         * ### getSpaceBy\r\n         * Returns the Space ( if found )\r\n         */\r\n        Space.prototype.getSpaceBy = function( params ){\r\n            if( params.type === \"appName\" ){\r\n                var spaces = this.findByAppName( params.name );\r\n                return spaces[ 0 ];\r\n            } else {\r\n                return [];\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ### show\r\n         * shows once the space has been resolved ( locally or remotely ) and loaded.\r\n         * @param  {type} id\r\n         * @return {type}    [description]\r\n         */\r\n        Space.prototype.show = function( id ){\r\n            var space = this.find( id );\r\n\r\n            events.fire( \"space.pre.shown\", { spaceId:id } );\r\n            // console.log( \"space.pre.shown:\" + id );\r\n\r\n            if( space ){\r\n                // debugger\r\n                // AMONIS: 15/06/2017\r\n                // Check the _spaceShowOrder to see if this space should be shown.\r\n                // If it is missing it may have been part of an earlier request, since overridden.\r\n                var index = this._spaceShowOrder.indexOf( space.id );\r\n                if( index === -1 )\r\n                    index = this._spaceShowOrder.indexOf( space.name );\r\n\r\n                // AMONIS: 16/06/2017: On show the space if it was found in the rendering list.\r\n                // It may not be if there were multiple requests and a later request got here first\r\n                // because it is has a smaller load time?\r\n                if( index >= 0 ){\r\n                    // AMONIS: 15/06/2017: Clear the _spaceShowOrder from this Space and before\r\n                    // This prevents older requests from overriding this.\r\n                    this._spaceShowOrder.splice( 0, index + 1 );\r\n\r\n                    // Hide all other spaces with this parent\r\n                    var spaces = this.findByParentId( space.parentId )\r\n\r\n                    // Hide the spaces with this parent\r\n                    __.eachSync2( spaces, function( item, index, collection ){\r\n                        item.oVisible( false );\r\n                    } );\r\n\r\n                    // Send a pulse to notify that the space is not visible\r\n                    if( this.current ){\r\n\r\n                        var currentSpace = this.find( this.current );\r\n\r\n                        events.fire( \"space.hidden\", currentSpace );\r\n                    }\r\n\r\n                    // Show just the selected space\r\n                    space.oVisible( true );\r\n\r\n                    // AMONIS: 25/04/2018: Show or hide the header depending upon resources layout.spa flag\r\n                    // Coupled with header defaulting to hidden header\r\n                    if( __get( 'layout.spa', space ) === true ){\r\n                        this.kernel.invoke( \"header.hide\" );\r\n                    } else {\r\n                        this.kernel.invoke( \"header.show\" );\r\n                    }\r\n\r\n                    // Update the current space\r\n                    this.current = id;\r\n\r\n                    // Fire an event to notify Cog Service to notify cogs of visibility etc.\r\n                    events.fire( \"space.shown\", { space:space, options:{} } );\r\n                }\r\n            } else {\r\n                // Space not known. Do we need to get it.\r\n                log.debug( \"Space.show(): space NOT FOUND [\" + spec.id + \"]\" );\r\n            }\r\n\r\n        };\r\n\r\n        /**\r\n         * ### loaded\r\n         * All of this will happen Async ( with the events ) therefore this will not complete in order.\r\n         * It is likely that the Show will be triggered before the cogs have been finished adding, which in\r\n         * the first instance is fine as the cogs will auto show.\r\n\r\n         * NOTE: Mobile / Desktop space checking is done in Drive getSpace()\r\n         */\r\n        Space.prototype.loaded = function( bean, error ){\r\n            // Error handling from Drive Loading.\r\n            if( error ){\r\n                // The Drive was not able to load the Space. Alert a message and stop.\r\n                // AMONIS: 23-02-2015: Don't toast this, nobody cares!!!\r\n                // this.kernel.invoke( \"toast.show\", { \"msg\":\"Space [\" + error.key + \"] not found\" } );\r\n                log.emergency( \"Space [\" + error.key + \"] not found\" );\r\n\r\n                return -1;\r\n            }\r\n\r\n            var locale = this.kernel.invoke( \"getUserLocale\", {} );\r\n\r\n            // Update any references in bean with i18n values and Store the bean\r\n            if( locale ){\r\n                bean.i18n( locale.value );\r\n            }\r\n\r\n            this.store( bean );\r\n\r\n            // As we have just loaded a Space, we now need to load all of the Cogs in the space\r\n            for( var i=0; i<bean.component.length; i++ ){\r\n                events.fire( \"cog.add\", { \"id\":bean.component[ i ].id } );\r\n            }\r\n\r\n            // Notify that that Space.loaded() request has been made\r\n            // console.log( \"loaded:\" + bean.id );\r\n            events.fire( \"space.add.finish\", { \"space\":bean } );\r\n        };\r\n\r\n        /**\r\n         * ### internalSystemSpaceRearrangeRequest\r\n         * Assumes the currently selected space is wanting to be modified.\r\n         * @param {JSON} exchange [description]\r\n         */\r\n        Space.prototype.internalSystemSpaceRearrangeRequest = function( exchange ){\r\n            var ns   = exchange.getPulseClass();\r\n            var body = exchange.getPulseBody();\r\n\r\n            // Get the current space\r\n            var space = this.getSpace();\r\n\r\n            if( body.editmode ){\r\n                // Determine the edit mode setting\r\n                var mode = body.editmode || false;\r\n\r\n                // Set the Space to Editable\r\n                space.editMode( mode );\r\n\r\n                // Request each cog be made editable\r\n                // AMONIS: 24/08/2016: Should I just pass the Space Id and let the CogService sort this out??\r\n                space.each( function( i, comp ){\r\n                    // Shake all of the cogs\r\n                    events.fire( \"cog.status.modify\", { id:comp.id, editmode:mode } );\r\n                } );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ### store\r\n         * @param  {type} bean\r\n         * @return {type}      [description]\r\n         */\r\n        Space.prototype.store = function( bean ){\r\n            var exists = this.find( bean.id );\r\n\r\n            if( !exists ){\r\n                this.spaces.push( bean );\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ### toString\r\n         * @return {type} [description]\r\n         */\r\n        Space.prototype.toString = function(){\r\n            return this.name + \":\" + this.version;\r\n        }\r\n\r\n        // Return the Class function\r\n        return Space;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/services/space.js?");

/***/ }),

/***/ "./src/services/toast.js":
/*!*******************************!*\
  !*** ./src/services/toast.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n  .\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n      __webpack_require__(/*! knockout */ \"knockout\"),\r\n      __webpack_require__(/*! core/events */ \"./src/core/events.js\"),\r\n      __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"),\r\n      __webpack_require__(/*! mixins/endpoint */ \"./src/mixins/endpoint.js\"),\r\n      __webpack_require__(/*! utils/hash */ \"./src/utils/hash.js\"),\r\n      __webpack_require__(/*! bindings/toast */ \"./src/bindings/toast.js\"),\r\n      __webpack_require__(/*! bindings/snackbar */ \"./src/bindings/snackbar.js\"),\r\n      // \"bindings/spinner\",\r\n      __webpack_require__(/*! bindings/loader */ \"./src/bindings/loader.js\")\r\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko, events, log, Endpoint, Hash ){\r\n        var _this;\r\n\r\n        /*\r\n            #services.Toast\r\n            An toast controller that alerts the user to events that have happened in the system\r\n\r\n            AMONIS: 14/07/2016: TODO rename this service\r\n            The \"increasingly\" badly named Toast service. This should really be called the\r\n            Information service as it provides Information and Feedback to the user.\r\n            Toast / SnackBar / Spinner and maybe system OK / Cancel ?\r\n\r\n            @author Andy Monis\r\n        */\r\n        function Toast ( params ) {\r\n            _this = this;\r\n\r\n            this.name    = \"toast\";\r\n            this.version = \"0.0.1\";\r\n\r\n            // @property **count**:     a count of all the messages.\r\n            this._count     = 0;\r\n            // @property **autoHide**:  automatically hide the toasts as a default;\r\n            this._autoHide  = true;\r\n            // @property **enabled**:   disabled(false) if no (\"#toast\") element found\r\n            this._enabled   = false;\r\n            // @property **timeout**:   the time to show / hide messages in.\r\n            this._timeout   = 4000; // ms\r\n            // @property **mode**:      sets what and how many toasts are visible.\r\n            /* TODO: Implement a method to allow the Toast to be set. */\r\n            this.mode       = Toast.QUIET;\r\n\r\n            // @property **kernel**: Internal pointer to the kernel for OS level talkback & events.\r\n            this.kernel     = params.kernel;\r\n            // @property **model**: Internal pointer to the model to add Service model requirements to in oganised manner.\r\n            this.model      = params.model;\r\n            // @property **pump**: Internal pointer to the pump to allow pulsing and routing.\r\n            this.pump       = params.pump;\r\n            // @property runtime: Internal property set by the Kernel. Contains settings to determine how it is running.\r\n            this.runtime        = params.runtime || {};\r\n\r\n            // @property **_flags**: Internal count if a message has already been shown\r\n            this._flags = {\r\n                pumpSocketError: 0\r\n            }\r\n\r\n            // Spinner\r\n            // params.model.spinner = {\r\n            //     hidden: ko.observable( true )\r\n            // };\r\n\r\n            // Loader\r\n            // AMONIS: 23/11/2016\r\n            // Defaulted to 50% for the start, as it is picking up from where the bootstrap loader left off\r\n            this.model.loader = {\r\n                value: ko.observable( 50 ),\r\n                hidden: ko.observable( false )\r\n            };\r\n\r\n            // SnackBar\r\n            params.model.snackBar = {\r\n                msg:    ko.observable( \"\" ),\r\n                hidden: ko.observable( true )\r\n            };\r\n\r\n            // Create and extend the model\r\n            params.model.toast = this.toast ={\r\n                //\"messages\": ko.observableArray([]),\r\n                \"messages\": new Hash(),\r\n                \"tmpl\":     \"toast-message\"\r\n            };\r\n\r\n            // Bind to UI element ( expects #toast to exist )\r\n            this._toastEl = $(\"#toast\");\r\n            if( this._toastEl.length > 0 )\r\n                this._enabled = true;\r\n\r\n            /*\r\n                Endpoint Mixin ( Sets )\r\n             */\r\n            __mixin( this, new Endpoint( params ) );\r\n\r\n            this.initEndpoint( this.name, [\r\n                { className: \"internal.system.toast.update\",     targetName: \"toast\" },\r\n                { className: \"pumpCo.event.achievement.updated\", targetName: \"toast\" }\r\n            ] );\r\n\r\n            /*\r\n                Pulse Handlers\r\n             */\r\n            this.registerPulseHandlers();\r\n\r\n            /*\r\n                System Event Handlers\r\n             */\r\n            events.on( \"kernel.postservice\",            function(params){\r\n                // Need to make sure that the scope is bound correctly to \"this\" service and not the console.\r\n                this.kernel.invoke( \"addConsoleMethod\", { \"ns\":\"toast.show\", \"fn\":function( msg ){ _this.show( msg ); } } );\r\n                this.kernel.invoke( \"addConsoleMethod\", { \"ns\":\"toast.auto\", \"fn\":function( yesno ){ _this.autoHide( yesno ); } } );\r\n            }, this );\r\n\r\n            events.on( \"pump.socket-connected\",         function(params){this.show( \"Connection success.\",  true, Toast.VERBOSE );}, this );\r\n            events.on( \"pump.socket-notconnected\",      function(params){\r\n                var msg = \"Connection problem<br>\" + params.reason;\r\n                this.show( msg,  true, Toast.VERBOSE );\r\n            }, this );\r\n            events.on( \"pump.socket-error\",             function(params){\r\n                // only show if not seen before\r\n                if( this._flags.pumpSocketError === 0 ){\r\n                    // added sendSignoutEvent call to be triggered on button click.\r\n                    this.show( \"Your session has been inactive for too long. For security it has been disconnected. \",\r\n                    false,\r\n                    Toast.SILENT,\r\n                    function(){\r\n                        // Show a Toast message confirming action.\r\n                        events.fire( \"kernel.reboot\", {} );\r\n                    } );\r\n                }\r\n                // incrememnt count to prevent reshowning\r\n                this._flags.pumpSocketError++;\r\n            }, this );\r\n            events.on( \"pump.socket-transport-failure\", function(params){this.show( \"Connection transport.\",true, Toast.VERBOSE );}, this );\r\n            events.on( \"pump.socket-close\",             function(params){this.show( \"Connection closed.\",   true, Toast.VERBOSE );}, this );\r\n            events.on( \"pump.socket-reconnect\",         function(params){\r\n                var msg = \"Reconnecting...<br>\" + params.reason + \"<br>\" + params.error;\r\n                this.show( \"Connection reconnect\", true, Toast.VERBOSE );\r\n            }, this );\r\n\r\n            events.on( \"header.signout\",                function(params){this.show( \"goodbye\",   true );}, this );\r\n\r\n            // events.on( \"space.show\", function(params){\r\n            //     console.log( \"SPACE SHOW\" )\r\n            //     this.show( \"on our way\",true, Toast.SILENT );\r\n            // } , this );\r\n\r\n            /*\r\n                Loader\r\n             */\r\n            // events.on( \"site.add.start\", function( params ){ console.log( \"site-add:\" + Date.now()  ); } );\r\n            // events.on( \"site.add.finish\", function( params ){ console.log( \"site-added:\" + Date.now() ); } );\r\n            // events.on( \"place.add.start\", function( params ){ console.log( \"place-add:\" + Date.now() ); } );\r\n            // events.on( \"place.add.finish\", function( params ){ console.log( \"place-added:\" + Date.now() ); } );\r\n            events.on( \"site.add.start\",    function( params ){ this.showLoader(\"site.add.start\"); }, this );\r\n            events.on( \"place.add.start\",   function( params ){ this.showLoader(\"place.add.start\"); }, this );\r\n            // events.on( \"space.add.start\",   function( params ){ this.showLoader(\"space.add.start\"); }, this );\r\n            events.on( \"space.show\",        function( params ){ this.showLoader(\"space.show\"); }, this );\r\n            // events.on( \"cog.add.start\",     function( params ){ this.showLoader(); }, this );\r\n            // events.on( \"space.add.finish\",  function( params ){ this.hideLoader(\"space.add.finish\"); }, this );\r\n            // events.on( \"place.add.finish\",  function( params ){ this.hideLoader(); }, this );\r\n            events.on( \"space.shown\",       function( params ){ this.hideLoader(\"space.shown\"); }, this );\r\n            events.on( \"space.exception\",   function( params ){ this.hideLoader(\"space.exception\"); }, this );\r\n            events.on( \"place.shown\",       function( params ){ this.hideLoader(\"place.shown\"); }, this );\r\n            events.on( \"place.exception\",   function( params ){ this.hideLoader(\"place.exception\"); }, this );\r\n            // events.on( \"cog.add.finish\",    function( params ){ this.hideLoader(); }, this );\r\n\r\n            // Register Kernel API calls\r\n            // Displays a popup message. usage: this.kernel.invoke( \"toast.show\", { \"msg\":\"hello\" } );\r\n            this.kernel.addApi( \"toast.show\",           function( params ){ this.show( params.msg, true ); },   this );\r\n            // Displays a permenent message. usage: this.kernel.invoke( \"toast.alert\", { \"msg\":\"hello\" } );\r\n            this.kernel.addApi( \"toast.alert\",          function( params ){ this.show( params.msg, false ); },  this );\r\n            // Displays a permenent ok-cancel message. usage: this.kernel.invoke( \"toast.alert\", { \"msg\":\"hello\" } );\r\n            this.kernel.addApi( \"toast.okcancel\",       function( params ){ this.show( params.msg, false, Toast.QUIET, { okFn:params.okFn, cancelFn:params.cancelFn } ); }, this );\r\n\r\n            // SNACKBAR Listeners\r\n            // Displays a popup message. usage: this.kernel.invoke( \"snackbar.show\", { \"msg\":\"hello\" } );\r\n            this.kernel.addApi( \"snackbar.show\",        function( params ){ this.showSnackBar( params.msg ); }, this );\r\n            // Displays a permenent message. usage: this.kernel.invoke( \"snackbar.hide\");\r\n            this.kernel.addApi( \"snackbar.hide\",        function( params ){ this.hideSnackBar(); }, this );\r\n\r\n\r\n\r\n            // SPINNER Listeners\r\n            // Displays a popup message. usage: this.kernel.invoke( \"spinner.show\" );\r\n            // this.kernel.addApi( \"spinner.show\",        function( params ){ this.showSpinner(); }, this );\r\n            // Displays a permenent message. usage: this.kernel.invoke( \"spinner.hide\" );\r\n            // this.kernel.addApi( \"spinner.hide\",        function( params ){ this.hideSpinner(); }, this );\r\n\r\n            // Notify the Kernel that the service is ready,.\r\n            this.kernel.invoke( \"kernel.process.loaded\", { \"name\":this.name } );\r\n        }\r\n\r\n        // Toast Constants to allow configurable chattyness\r\n        Toast.SILENT  = 0;\r\n        Toast.QUIET   = 1;\r\n        Toast.CHATTY  = 2;\r\n        Toast.VERBOSE = 3;\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        Toast.prototype = {};\r\n\r\n        /**\r\n         * ###registerPulseEventHandlers\r\n         * Registers listeners to common Pulse Events and shows an appropriate Toast message.\r\n         *\r\n         * **internal.system.toast.update**\r\n         *\r\n         * ```js\r\n            \"pulseBody\": {\r\n                \"message\": message\r\n            }\r\n         * ```\r\n         *\r\n         * **pumpCo.event.achievement.updated**\r\n         *\r\n         * ```js\r\n            \"pulseBody\": {\r\n                \"status\": {\r\n                    \"code\": \"success\"\r\n                },\r\n                \"userId\": \"0036ebcb84837a5400000001\",\r\n                \"achievement\": {\r\n                    \"count\": 1,\r\n                    \"group\": \"system.achievement.keyDocuments\",\r\n                    \"name\": \"upload1\",\r\n                    \"label\": \"i18n label\",\r\n                    \"progress\": 1,\r\n                    \"when\": \"2015-01-28T08:53:30Z\"\r\n                }\r\n            }\r\n         * ```\r\n         *\r\n         */\r\n        Toast.prototype.registerPulseHandlers = function(){\r\n            // internal.system.toast.update is fired by any cog that wants to alert a message to the user\r\n            this.addPulseHandler( \"internal.system.toast.update\", function( exchange ){\r\n                var value = __get( \"message\", _this.unwrapPulse(exchange) );\r\n\r\n                if( value ){ this.show( value ); }\r\n            } );\r\n\r\n            // pumpCo.event.achievement.updated is fired by the Backend when an achievement is achieved\r\n            this.addPulseHandler( \"pumpCo.event.achievement.updated\", function( exchange ){\r\n                var achievement = __get( \"achievement\", _this.unwrapPulse(exchange) );\r\n\r\n                if( !achievement )\r\n                    return -1;\r\n\r\n                var label = achievement.label || achievement.name;\r\n                if( achievement ){ this.show( \"congratulations, you have achieved \" + label ); }\r\n            } );\r\n        };\r\n\r\n        /**\r\n         * ###unwrapPulse\r\n         * A simple helper to unwrap a pulse reliably\r\n         * @params {Exchange} exchange The pulse exchange to unwrap\r\n         * @returns PulseBody or undefined\r\n         */\r\n        Toast.prototype.unwrapPulse = function( exchange ){\r\n            var body = exchange.getPulseBody();\r\n            if( body )\r\n                return body\r\n            else\r\n                return undefined;\r\n        };\r\n\r\n        /**\r\n         * ###newToast\r\n         * Constructs a new Toast item with appropriate closure to auto hide or add click handlers etc.\r\n         * @params {string} id The id of the item\r\n         * @params {string} msg The message to display\r\n         * @params {boolean} auto Flag to determine whether to auto close or not.\r\n         * @params {function} extraFn An extra function that can be called when the ok button is clicked.\r\n         */\r\n        Toast.prototype.newToast = function( id, msg, auto, callbacks ){\r\n            // Default the callback handlers\r\n            callbacks = callbacks || {};\r\n\r\n            var timeout = this._timeout - 1000;\r\n\r\n            // The below is a little tricky. Essentially _hider is a callback function\r\n            // set on the timer, that is executed when this object is created.\r\n            // When it executes it has \"me\" available in a closure and can set\r\n            // its visible property ( in the collection that it is about to be added to )\r\n            // When this is done the HTML data-bind flips a class in and allows pre-remove\r\n            // animations to take place.\r\n            var hiderFn = function( result ){\r\n                var id = me.id;\r\n\r\n                if( result === \"ok\" ){\r\n                  if( callbacks.okFn ) callbacks.okFn.call( this );\r\n                }\r\n                if( result === \"cancel\" ){\r\n                  if( callbacks.cancelFn ) callbacks.cancelFn.call( this );\r\n                }\r\n                // trigger the extraFn\r\n                // if( me.extraFn ) me.extraFn.call( this );\r\n\r\n                // Purge the message from the Toast Service.\r\n                setTimeout( function(){\r\n                    _this.purge( id );\r\n                }, 1000 );\r\n\r\n                // Set the visible flag to false\r\n                me.visible(false);\r\n            };\r\n\r\n            // Set auto call \"hiderFn\" after 1s or manual closing\r\n            var hider = auto ? setTimeout( hiderFn, 1000 ) : hiderFn;\r\n\r\n            // Create a closure item, for access later.\r\n            var me = {\r\n                // _hider will either be a function, which can be attached to a button\r\n                // or a function on a timer, which will be automatically called.\r\n                // \"hiderFn\":hider,\r\n                \"visible\":ko.observable( true ),\r\n                \"id\":id,\r\n                \"msg\":msg,\r\n                \"auto\":auto,\r\n                \"btnOk\": function(){ hiderFn( \"ok\" ); },\r\n                // Selectively add cancel option\r\n                \"btnCancel\": callbacks.cancelFn ? function(){ hiderFn( \"cancel\" ); } : undefined\r\n            };\r\n\r\n            return me;\r\n        };\r\n\r\n        /**\r\n         * ###show\r\n         * @params msg to show\r\n         * shows a toast message on screen\r\n         * @param callbacks { okFn:okFn, cancel:cancelFn }\r\n         */\r\n        Toast.prototype.show = function( msg, auto, level, callbacks ){\r\n            callbacks = callbacks || {};\r\n            level = level || Toast.QUIET;\r\n\r\n            if( !this._enabled )\r\n                return ;\r\n\r\n            // Set auto close ( default to true )\r\n            auto = auto === undefined ? this._autoHide : auto;\r\n\r\n\r\n            var id = this._count++;\r\n\r\n            if( level <= this.mode ){\r\n                // Create a new Toast object and add to the collection.\r\n                this.toast.messages.insert( this.newToast( id, msg, auto, callbacks ) );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###purge\r\n         * @params id of the message to purge\r\n         * calle don a time to remove the item;\r\n         */\r\n        Toast.prototype.purge = function( id ){\r\n            this.toast.messages.remove( id );\r\n        };\r\n\r\n        /**\r\n         * ###autoHide\r\n         * Allows the Toast Service \"autoHide\" property to be overridden\r\n         * @params {boolean} value Either true or false depending on autoHide message requirements\r\n         */\r\n        Toast.prototype.autoHide = function( value ){\r\n            // Act as a setter if a param is passed in.\r\n            if( value !== undefined ){\r\n                this._autoHide = value;\r\n            }\r\n            // Return the current value for good measure.\r\n            return this._autoHide;\r\n        };\r\n\r\n        /*\r\n            SnackBar\r\n            A **very** basic implementation\r\n         */\r\n\r\n        /**\r\n         * ###showSnackBar\r\n         * Makes the snackbar visible & updates the message\r\n         */\r\n        Toast.prototype.showSnackBar = function( msg ){\r\n            // Update the SnackBar message\r\n            this.model.snackBar.msg( msg );\r\n\r\n            // Make the SnackBar visible\r\n            this.model.snackBar.hidden( false );\r\n        };\r\n\r\n        /**\r\n         * ###hideSnackBar\r\n         * Makes the snackbar invisible\r\n         */\r\n        Toast.prototype.hideSnackBar = function(){\r\n            // Hide the snackbar from view\r\n            this.model.snackBar.hidden( true );\r\n        };\r\n\r\n        /*\r\n            SPINNER\r\n            A **very** basic implementation\r\n         */\r\n\r\n        /**\r\n         * ###showSnackBar\r\n         * Makes the sapinner visible\r\n         */\r\n        // Toast.prototype.showSpinner= function(){\r\n        //     // Make the SnackBar visible\r\n        //     this.model.spinner.hidden( false );\r\n        // };\r\n\r\n        /**\r\n         * ###hideSnackBar\r\n         * Makes the snackbar invisible\r\n         */\r\n        // Toast.prototype.hideSpinner = function(){\r\n        //     // Hide the snackbar from view\r\n        //     this.model.spinner.hidden( true );\r\n        // };\r\n\r\n        /*\r\n            LOADER\r\n         */\r\n\r\n        /**\r\n         * ###incLoader\r\n         * Timer event to increment the loader along\r\n         * Stops running if the bar is hidden\r\n         * @return {JSON} [description]\r\n         */\r\n        Toast.prototype.incLoader = function(){\r\n            // Increment the loader ( if it is not already maxed out )\r\n            if( this.model.loader.value() < 100 ){\r\n                this.model.loader.value( this.model.loader.value() + 1 );\r\n\r\n                // keep incrementing ( if not hidden )\r\n                if( this.model.loader.hidden() === false ){\r\n                    setTimeout( this.incLoader.bind( this ), 200 );\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###showLoader\r\n         * Shows the loader bar ( defaults to 50% width ) then starts timer\r\n         * @return {JSON} [description]\r\n         */\r\n        Toast.prototype.showLoader = function( action ){\r\n\r\n            // Check if the loader is currently hidden\r\n            if( this.model.loader.hidden() === true ){\r\n                // console.log( \"SHOW LOADER\" + action);\r\n                // Show the loader\r\n                this.model.loader.hidden( false );\r\n                // set the width to 50\r\n                this.model.loader.value( 50 );\r\n                // Start the incremental loader\r\n                setTimeout( this.incLoader.bind( this ), 200 );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###hideLoader\r\n         * Hides the loader bar ( time will auto stop )\r\n         * @return {JSON} [description]\r\n         */\r\n        Toast.prototype.hideLoader = function( action ){\r\n            // console.log( \"HIDE LOADER \" + action );\r\n            // Hide the loader\r\n            this.model.loader.value( 50 );\r\n            // set the loader to hidden\r\n            this.model.loader.hidden( true );\r\n        };\r\n\r\n        /**\r\n         * ###userOkCancel\r\n         * Hides the loader bar ( time will auto stop )\r\n         * @return {JSON} [description]\r\n         */\r\n        Toast.prototype.userOkCancel = function( params ){\r\n            console.log( \"Toast: userOkCancel\" );\r\n        };\r\n\r\n        /**\r\n         * ###toString\r\n         * Service helper for aquiring details\r\n         */\r\n        Toast.prototype.toString = function(){\r\n            return this.name + \":\" + this.version;\r\n        }\r\n\r\n        return Toast;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/services/toast.js?");

/***/ }),

/***/ "./src/services/user.js":
/*!******************************!*\
  !*** ./src/services/user.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n    User\r\n\r\n    IMPORTANT\r\n    Part of the User information is discovered via the Profile Pulse\r\n    Part of the User information is passed back in the User Site Pulse\r\n\r\n    @author Andy Monis\r\n*/\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! knockout */ \"knockout\"), __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! mixins/endpoint */ \"./src/mixins/endpoint.js\"), __webpack_require__(/*! utils/store */ \"./src/utils/store.js\"), __webpack_require__(/*! utils/i18n */ \"./src/utils/i18n.js\"), __webpack_require__(/*! beans/user */ \"./src/beans/user.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko, events, log, Endpoint, Store, i18n, UserBean ){\r\n        // This runs before Main has been called.\r\n        log.debug( \"services/user\" );\r\n\r\n        var USER_LOADED         = \"user.loaded\";\r\n        var USER_MODIFIED       = \"user.modified\";\r\n        var USER_LOCALE_UPDATED = \"user.locale.updated\";\r\n\r\n        var STORE_KEY       = \"user\";\r\n        var STORE_USER      = STORE_KEY + \".user\";\r\n\r\n        /**\r\n         * Constructor\r\n         */\r\n        function User ( params ) {\r\n            this.name    = \"user\";\r\n            this.version = \"0.0.1\";\r\n\r\n            /*\r\n                Endpoint Mixin\r\n             */\r\n            __mixin( this, new Endpoint( params ) );\r\n\r\n            // The main Place ViewModel which will be mapped directly to the pulses\r\n            this.kernel  = params.kernel;\r\n            var model    = params.model;\r\n            this.pump    = params.pump;\r\n            // @property runtime: Internal property set by the Kernel. Contains settings to determine how it is running.\r\n            this.runtime        = params.runtime || {};\r\n\r\n            // Add a new Observable for the Place Model\r\n            model.user = this.user = ko.observable( {} );\r\n\r\n            // Set the current user from a Param if provided. Used if the Pulse cannot be relied upon. ( running standalone )\r\n            if( params.user ){\r\n                this.loaded( params.user );\r\n            }\r\n\r\n            /*\r\n                Pulse Handlers\r\n             */\r\n            this.initEndpoint( this.name, [\r\n                // Internal event sent when a user has been successfully loaded\r\n                { \"className\":\"internal.user.load\",             \"targetName\":this.name },\r\n                // Internal event to notify that the user profile has been updated. Usually sent via the Profile Cog\r\n                { \"className\":\"internal.event.user.profile\",    \"targetName\":this.name },\r\n                // Internal Request for the user information\r\n                { \"className\":\"internal.user.profile.request\",  \"targetName\":this.name },\r\n                // Internal Response for the user information\r\n                { \"className\":\"internal.user.profile.response\", \"targetName\":\"PumpHouse\" },\r\n                // Internal Request to update the profile\r\n                // PumpHouse generated event, which occurs when the Place changes, re-request the user\r\n                { \"className\":\"pumpCo.event.core.place\",            \"targetName\":this.name },\r\n\r\n                { \"className\":\"internal.user.profile.save.request\",     \"targetName\":this.name},\r\n                { \"className\":\"internal.user.profile.save.response\",    \"targetName\":\"PumpHouse\"},\r\n                { \"className\":\"pumpCo.user.profile.save.request\",       \"targetName\":\"PumpHouse\"},\r\n                { \"className\":\"pumpCo.user.profile.save.response\",      \"targetName\":this.name},\r\n                { \"className\":\"internal.user.profile.event\",            \"targetName\":\"PumpHouse\"}\r\n            ] );\r\n\r\n            // Internal.User.Load can only be sent once a user has authenticated\r\n            this.addPulseHandler( \"internal.user.load\",             function( exchange ){\r\n                var body = exchange.getPulseBody();\r\n                this.load.call( this, body );\r\n            }.bind( this ) );\r\n\r\n            // **legacy** handler for cog notifications that something has changed\r\n            this.addPulseHandler( \"internal.event.user.profile\",    this.modified );\r\n            // **handler** for PH noficiations that the Place ( profile ) has changed\r\n            this.addPulseHandler( \"pumpCo.event.core.place\",        this.modified.bind( this ) );\r\n\r\n            this.addPulseHandler( \"internal.user.profile.request\", this.internalUserProfileRequest.bind( this ) );\r\n\r\n            // AMONIS: 18/11/2016: Support Profile Updating via internal pulses\r\n            this.addPulseHandler( \"internal.user.profile.save.request\", this.internalUserProfileSaveRequest.bind( this ) );\r\n            this.addPulseHandler( \"pumpCo.user.profile.save.response\", this.pumpcoUserProfileSaveResponse.bind( this ) );\r\n\r\n            /*\r\n                System Event Handlers\r\n             */\r\n            events.on( \"site.loaded\", function(params){ this.setSiteUser( params ); }, this );\r\n            events.on( \"security.auth.success\", this.load.bind( this ) );\r\n            events.on( \"security.auth.offline\", this.load.bind( this ) );\r\n\r\n            // **listener** \"security.auth.no.token\" clears out any user related cache information\r\n            events.on( \"security.auth.no.token\",  function( params ){ this.kernel.invoke( \"drive.clear\", \"user.user\" );}, this );\r\n\r\n            // THIS IS WRONG. DON'T CALL FUNCTIONS VIA EVENTS, CALL USING KERNEL API ( SEE BELOW )\r\n            events.on( \"user.get\", function(params){this.getUser( params.fn, params.scope );}, this );\r\n\r\n            // Register Kernel API calls\r\n            this.kernel.addApi( \"getUser\", this.getUserSync, this );\r\n            // **api** user.get.auth Returns the authenticated user, can be used to check if logged in. e.g. var user = this.kernel.invoke( \"user.get.auth\" );\r\n            this.kernel.addApi( \"user.get.auth\", this.getUserSync, this );\r\n            this.kernel.addApi( \"getUserLocale\", this.getUserLocaleSync, this );\r\n\r\n            // Notify the Kernel that the service is ready,.\r\n            this.kernel.invoke( \"kernel.process.loaded\", { \"name\":this.name } );\r\n\r\n            /**\r\n             * TESTING - Allow mocking of config\r\n             */\r\n            // if( params.test ){\r\n            //     // The MockUser is expected to be a complete Bean\r\n            //     if( params.test.mockUser )\r\n            //         this.user( params.test.mockUser );\r\n            // }\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        User.prototype = {};\r\n\r\n        /**\r\n         * @method  getUser\r\n         * @event   user.get { \"callback\":fn, \"scope\":obj }\r\n         * returns the current user that is authenticated with the User Service\r\n         */\r\n        User.prototype.getUser = function( callback, scope ){\r\n            scope = scope || this;\r\n            // Call the callback with a JS Object of the user ( Changes to that Obj will have no effect on the User Model )\r\n            callback.call( scope, ko.toJS( this.user ) );\r\n        };\r\n\r\n        /**\r\n         * @method  getUserSync\r\n         * @event   user.get { \"callback\":fn, \"scope\":obj }\r\n         * returns the current user that is authenticated with the User Service\r\n         */\r\n        User.prototype.getUserSync = function( callback, scope ){\r\n            return ko.toJS( this.user );\r\n        };\r\n\r\n        /**\r\n         * @method  getUserLocaleSync\r\n         * @event   user.get { \"callback\":fn, \"scope\":obj }\r\n         * returns the current user that is authenticated with the User Service\r\n         */\r\n        User.prototype.getUserLocaleSync = function( callback, scope ){\r\n            // AMONIS: 14/03/2016: Return the authenticated user local or a compatible version\r\n            // based on the current browser language settings.\r\n            var user = ko.toJS( this.user );\r\n            if( user && user.id ){\r\n                // Return the User locale in the format of {type: \"locale\", label: \"locale\", value: \"sv-se\"}\r\n                return user.location.locale;\r\n            } else {\r\n                // Get the Locale from the browser and map in to compatible structure.\r\n                // This would only usually be done when not authenticated.\r\n                return { type:\"locale\", label:\"locale\", value:the.getLocale() }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Add a new Place\r\n         */\r\n        User.prototype.load = function( body ){\r\n            events.fire( \"drive.get.user\", { \"id\":\"auth-user\", \"fn\":this.loaded, \"scope\":this } );\r\n        };\r\n\r\n        /**\r\n         * @method modified\r\n         * Trigger in response to a internal.event.user.profile, probably sent by the profile cog. ( OLD as of 2017 )\r\n         * Triggered in response to pumpCo.event.core.place, which is fired from PH when the profile changes\r\n         * Re-requests\r\n         */\r\n        User.prototype.modified = function( exchange ){\r\n            // Start the loading process\r\n            // AMONIS: 31/03/2016: Added refresh param to pulse tp clear the user and re-request from backend.\r\n            events.fire( \"drive.get.user\", { \"id\":\"auth-user\", \"fn\":this.loaded, \"scope\":this, refresh:true } );\r\n        };\r\n\r\n        /**\r\n         * @event loaded\r\n         * Called following a successful load of a user ( from IO or cache ).\r\n         * When a new user is loaded, trigger the loading of the User Site from Drive.\r\n         */\r\n        User.prototype.loaded = function( bean ){\r\n            log.info( \"User.loaded(): RECEIVED:\" + bean.id );\r\n\r\n            var action = USER_LOADED;\r\n            if( this.user().id ){\r\n                // The user already exists. So this loading of the user is in response to a profile change,\r\n                // either locally or remotely. Ergo it is a modify.\r\n                action = USER_MODIFIED;\r\n            }\r\n\r\n            // Check the current authenticated user id ( the last person to login )\r\n            var storedUser = Store.get( STORE_USER, bean.id );\r\n            if( storedUser && storedUser.id === bean.profileBody.id ){\r\n                log.debug( \"services/user: same login. no action\" );\r\n            } else {\r\n                // AMONIS: 29/02/2016: In response to the over aggressive \"clear\"ing\r\n                // of the cache on OAuth error. \"Clean\" ( only remove Drive. files ) the\r\n                // cache only if a different user logs in. This is required as Native App\r\n                // stores ID's etc so they need to be cleared down.\r\n                this.kernel.invoke( \"drive.clean\", {} );\r\n\r\n                log.debug( \"services/user: different login, cleaning drive.\" );\r\n            }\r\n\r\n            Store.set( STORE_USER, { id:bean.profileBody.id, username:bean.profileBody.username } );\r\n\r\n            // Store the bean in the model\r\n            this.user( bean );\r\n\r\n            // AMONIS: 14-03-2016: IMPORTANT\r\n            // The Site Spec has the correct Location and TimeZone information in. The User Pulse is incorrect.\r\n            // The function ( setSiteUser ) below corrects this, so DO NOT do an location / timezone work yet.\r\n\r\n            // user.loaded\r\n            events.fire( action, bean );\r\n        };\r\n\r\n        /**\r\n         * @event setSiteUser\r\n         * Called when a site is loaded ( See EXAMPLE OWNER for site.owner detils below )\r\n         */\r\n        User.prototype.setSiteUser = function( site ){\r\n            if( this.user && this.user().id ){\r\n                var loc = __get( \"owner.preferences.location\", site );\r\n                if( loc ){\r\n                    // User is logged in so update the preferences\r\n                    this.user().setLocation( loc );\r\n\r\n                    // Trigger an Event so that i18n singleton can reflect that change.\r\n                    events.fire( USER_LOCALE_UPDATED, this.user().location.locale );\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###internalUserProfileRequest\r\n         * Internal handler that returns the user information.\r\n         * @return {JSON} [description]\r\n         */\r\n        User.prototype.internalUserProfileRequest = function( exchange ){\r\n            log.debug( \"USER.internalUserProfileRequest()\" );\r\n            var header = exchange.getPulseHeader();\r\n            var body   = exchange.getPulseBody();\r\n\r\n            var compId = header.componentId;\r\n            var result = ko.toJS( this.user );\r\n\r\n            this.pulse( \"internal.user.profile.response\", result, undefined, undefined, compId );\r\n        };\r\n\r\n        /**\r\n         * ###internalUserProfileSaveRequest\r\n         * @param  {Exchange} exchange [description]\r\n         */\r\n        User.prototype.internalUserProfileSaveRequest = function( exchange ){\r\n            var header = exchange.getPulseHeader();\r\n            var body   = exchange.getPulseBody();\r\n\r\n            var compId = header.componentId;\r\n            var body = body;\r\n\r\n            this.pulse( \"pumpCo.user.profile.save.request\", body, undefined, undefined, compId );\r\n        };\r\n\r\n        /**\r\n         * ###pumpcoUserProfileSaveResponse\r\n         * Response after a save request\r\n         * @param {JSON} exchange [description]\r\n         * @return {JSON}          [description]\r\n         */\r\n        User.prototype.pumpcoUserProfileSaveResponse = function( exchange ){\r\n            var header = exchange.getPulseHeader();\r\n            var body   = exchange.getPulseBody();\r\n\r\n            // Get the Drive to refresh the User Profile\r\n            events.fire( \"drive.get.user\", { \"id\":\"auth-user\", \"fn\":this.profileSaved, \"refresh\":true, \"scope\":this } );\r\n        };\r\n\r\n        /**\r\n         * ###modified\r\n         * Called by the Drive in response to loading an updated profile\r\n         * @param {JSON} bean [description]\r\n         * @return {JSON}      [description]\r\n         */\r\n        User.prototype.profileSaved = function( userBean ){\r\n            // Store the bean in the model\r\n            if( userBean ) this.user( userBean );\r\n\r\n            // Pulse to let anything listening that the Profile has been updated ( you may want to get it again )\r\n            this.pulse( \"internal.user.profile.event\", { \"status\":\"updated\" } );\r\n        };\r\n\r\n\r\n        User.prototype.toString = function(){\r\n            return this.name + \":\" + this.version;\r\n        }\r\n\r\n        // Return the Animal function\r\n        return User;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/services/user.js?");

/***/ }),

/***/ "./src/utils/dom.js":
/*!**************************!*\
  !*** ./src/utils/dom.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Pump API and Application 2.0.0\n * Copyright(c) 2014 Pumpco Inc.\n\n\n */\n\n// # utils.dom\n// Some generic DOM helpers that ease the burden on Cog and Services when manipulating the DOM.\n// Depends on JQuery to normalise the DOM support\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! jquery */ \"jquery\"), __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( $, events, Log  ){\n\n        var _instance = undefined;\n\n        // Intended for browser usage support.\n        // Not implemented at the present\n        function checkSupport(){}\n\n        // ## Dom\n        // Singleton\n        function Dom () {\n        }\n\n        // Create a new prototype object to base this on ( in this case a base object )\n        Dom.prototype = {};\n\n        // ### select( selector ) e.g. select( \"#123\" );\n        // A wrapper for JQuery to prevent requirement to have to import this as well.\n        // You can just use DOM to get the JQuery object.\n        Dom.prototype.select = function( selector ){\n            return $( selector );\n        };\n\n        // ### addLink( id, url )\n        // Primarily used to dynamically include a CSS Link ( external CSS file ).\n        // Calling a second time with the same Id removes the CSS\n        Dom.prototype.addCss = function( id, url ){\n            var cssLink = $( \"#\" + id );\n\n            if( cssLink.length === 0 ){\n                $( \"head\" ).append( \"<link id=\\\"\" + id + \"\\\" rel=\\\"stylesheet\\\" type=\\\"text/css\\\" media=\\\"screen\\\" href=\\\"\" + url + \"\\\">\" );\n            } else {\n                cssLink.remove();\n            }\n        };\n\n        // ### addStyle( id, style )\n        // Primarily used to dynamically include a CSS style ( inline CSS ).\n        // Calling a second time with the same Id removes the CSS\n        Dom.prototype.addStyle = function( id, style ){\n            var cssLink = $( \"#\" + id );\n\n            if( cssLink.length === 0 ){\n                $( \"head\" ).append( \"<style id=\\\"\" + id + \"\\\" rel=\\\"stylesheet\\\" type=\\\"text/css\\\" media=\\\"screen\\\">\" + style + \"</style>\" );\n            } else {\n                cssLink.remove();\n            }\n        };\n\n        /**\n         * ###constrain\n         * Constrains a CSS class to a specific parent selector.\n         * Allows CSS to be applied at the COG level without effecting the whole\n         * system.\n         * @params {string} selector e.g. #cog or div[name='abc']\n         * @params {string} style The style to constrain e.g. .inline { this:that }\n         * Limited to supporting .classes only\n         * Maybe should strip # to prevent trying to override other styles\n         */\n        Dom.prototype.constrain = function( selector, style ){\n            // AMONIS: 15/04/2015: Updated with new selector to only match\n            // . outside of a { } so that it doesn't corrupt the CSS style.\n            //style = style.replace( /^[ \\.]+/g, selector + \" .\" );\n            // AMONIS: 01/04/2016: Modified the regex to use \\w to mathc a-zA-Z0-9\n            // var res = style.match( /[ \\.a-z0-9\\-\\+\\s\\n():]+{/g );\n            // AMONIS: 04/05/2016: Modified to accept > and * for direct descendents\n            // var res = style.match( /[[ \\.\\w\\-\\+\\s\\n():]+{/g );\n            var res = style.match( /[[@ \\.\\w\\-\\+\\s\\n():\\*>]+{/g );\n\n\n            // If no matches found, simply return the style\n            if( !res || res===null )\n                return style;\n\n            // Iterate over all the matches\n            for( var i=0; i<res.length; i++ ){\n                // Construct a new constrained style in the form of #this .style\n                var match = res[ i ];\n                // AMONIS: 07/03/2017 Do not process @media style queries\n                if( match.indexOf( \"@\" ) === -1 ){\n                    // Relplace any leading ( trailing ) carriage returns and trim spaces\n                    var flattened = match.replace(/[\\n\\r]/g, ' ').trim();\n\n                    // prepend a carriage return and the selector onto the front of the CSS.\n                    // This scopes it to the parent cog\n                    var modified = \"\\n\\r\" + selector + \" \" + flattened;\n\n                    // Update the style string\n                    style = style.replace( match, modified );\n                }\n            }\n\n            // return the constrained css\n            return style;\n        };\n\n        /**\n         * ###\n            .nav-image-fallback { background-image: url( \"paper.gif\" ); }\n            .nav-image-fallback { background-image: url( 'paper.gif' ); }\n            .nav-image-fallback { background-image: url(\"paper.gif\"); }\n            .nav-image-fallback { background-image: url('paper.gif'); }\n         */\n        Dom.prototype.constrainUrls = function( basePath, style ){\n            // AMONIS: 16/11/2015: attempt to select file urls\n            var res = style.match( /url\\(['\"]*(.*)['\"]*\\)/g );\n            var re = /url\\(['\"]*(.*)['\"]*\\)/g;\n\n            // If no matches found, simply return the style\n            if( !res || res===null )\n                return style;\n\n            // Iterate over all the matches\n            for( var i=0; i<res.length; i++ ){\n\n                // Construct a new constrained style in the form of #this .style\n                var match = res[ i ];\n\n                // Ignore data: urls in css\n                if( match.indexOf( \"data:\" ) === -1 ){\n                    // find start of url\n                    var index = match.indexOf( \"'\" ) === -1 ? match.indexOf( '\"' ) : match.indexOf( \"'\" );\n                    if( index > -1 ){\n                        // Add the basepath to the correct location\n                        var modified = match.substring( 0, index + 1 ) + basePath + match.substring( index + 1 );\n\n                        // Update the style string\n                        style = style.replace( match, modified );\n                    }\n                }\n\n            }\n\n            // return the constrained css\n            return style;\n        };\n\n        // Create and return the instance\n        if( !_instance )\n            _instance = new Dom();\n\n        return _instance;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/utils/dom.js?");

/***/ }),

/***/ "./src/utils/hash.js":
/*!***************************!*\
  !*** ./src/utils/hash.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//\r\n// Pump API and Application 2.0.0.\r\n//\r\n// Copyright(c) 2015 Pumpco Inc.\r\n//\r\n\r\n// # model.Hash\r\n// ## *An Observable Hash model*\r\n//\r\n\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! knockout */ \"knockout\"), __webpack_require__(/*! the */ \"the\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko ){\r\n\r\n        /**\r\n         * ###Hash Constructor\r\n         * @params key {string} Sets the key used to index the objects. Defaults to \"id\"\r\n         */\r\n    \tfunction Hash( key ){\r\n            this.array = ko.observableArray( [] );\r\n            this.key = key || \"id\";\r\n        }\r\n        Hash.prototype = {};\r\n\r\n        /**\r\n         * ###push\r\n         * Adds an item to the collection.\r\n         * @params {object} item, the object to store in the collection. Expects that the item contains the key to index by\r\n         */\r\n        Hash.prototype.push = function( item ){\r\n            this.array.splice( this.array().length, 0, item );\r\n        };\r\n\r\n        /**\r\n         * ###length\r\n         * Returns the length of the collection i.e. the number of items stored\r\n         * @return {int} length of the collection\r\n         */\r\n        Hash.prototype.length = function(){\r\n            return this.array().length;\r\n        };\r\n\r\n        /**\r\n         * ###find\r\n         * finds a item by the key, in the collection. The finding function can be overridden with custom\r\n         * matching functionality if desired\r\n         * @params {string} id, the key to search for\r\n         * @params {function} fn. the matching function to use with params ( the-item, the-index, the-entire-collection )\r\n         * @returns {object} the item found or undefined;\r\n         */\r\n        Hash.prototype.find = function( id, fn ){\r\n            var key = this.key;\r\n\r\n            fn = fn || function( item, index, collection ){\r\n                if( item[ key ] === id )\r\n                    obj = item;\r\n\r\n                // Pass through -1 to break the loop\r\n                return obj ? -1 : 0;\r\n            };\r\n\r\n            var obj = undefined;\r\n\r\n            __.eachSync2( this.array(), fn );\r\n\r\n            return obj;\r\n        };\r\n\r\n        /**\r\n         * ###indexOf\r\n         * @param  {type} id\r\n         * @return {type}    [description]\r\n         */\r\n        Hash.prototype.indexOf = function( id, fn ){\r\n            var key = this.key;\r\n\r\n            var _index = -1;\r\n\r\n            fn = fn || function( item, index, collection ){\r\n                if( item[ key ] === id ){\r\n                    _index = index;\r\n                }\r\n\r\n                // Pass through -1 to break the loop\r\n                return _index > -1 ? -1 : 0;\r\n            };\r\n\r\n            __.eachSync2( this.array(), fn );\r\n\r\n            return _index;\r\n        };\r\n\r\n        /**\r\n         * ###insert\r\n         * Inserts an item to the collection. Does exactly the same ass Push\r\n         * @params {object} item, the object to store in the collection. Expects that the item contains the key to index by\r\n         */\r\n        Hash.prototype.insert = function( item ){\r\n            this.array.splice( this.array().length, 0, item );\r\n        };\r\n\r\n        /**\r\n         * ###remove\r\n         * removes an item from the collection by id\r\n         * @params {string} id, the key to the item to remove\r\n         */\r\n        Hash.prototype.remove = function( id ){\r\n            var key = this.key;\r\n\r\n            var _index = -1;\r\n            this.find( id, function( item, index, collection ){\r\n                if( item[ key ] === id ){\r\n                    _index = index;\r\n                    return -1;\r\n                }\r\n            } );\r\n\r\n            // Remove the item if found\r\n            if( _index !== -1 )\r\n                this.array.splice( _index, 1 );\r\n        };\r\n\r\n        /**\r\n         * ###empty\r\n         * removes all items from the collection\r\n         */\r\n        Hash.prototype.empty = function(){\r\n            this.array( [] );\r\n        };\r\n\r\n        /**\r\n         * ###data\r\n         * returns a handle to an array of the data for easier output\r\n         * @return [{objects}]\r\n         */\r\n        Hash.prototype.data = function(){\r\n            return this.array;\r\n        }\r\n\r\n        /**\r\n         * ###splice\r\n         * @param  {type} start\r\n         * @param  {type} end\r\n         * @param  {type} newItems\r\n         * @return {type}          [description]\r\n         */\r\n        Hash.prototype.splice = function( start, end, newItems ){\r\n            this.array.splice( start, end );\r\n        };\r\n\r\n        return Hash;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/utils/hash.js?");

/***/ }),

/***/ "./src/utils/history.js":
/*!******************************!*\
  !*** ./src/utils/history.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0\r\n * Copyright(c) 2014 Pumpco Inc.\r\n\r\n\r\n */\r\n\r\n/**\r\n * @class utils.History ( Static )\r\n * Handles history actions\r\n * @author Andy Monis\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, Log ){\r\n\r\n    \tvar _instance;\r\n\r\n    \tvar addEvent = (function () {\r\n\t\t\tif (document.addEventListener) {\r\n\t\t\t\treturn function (el, type, fn) {\r\n\t\t\t\t  if (el && el.nodeName || el === window) {\r\n\t\t\t\t    el.addEventListener(type, fn, false);\r\n\t\t\t\t  } else if (el && el.length) {\r\n\t\t\t\t    for (var i = 0; i < el.length; i++) {\r\n\t\t\t\t      addEvent(el[i], type, fn);\r\n\t\t\t\t    }\r\n\t\t\t\t  }\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn function (el, type, fn) {\r\n\t\t\t\t  if (el && el.nodeName || el === window) {\r\n\t\t\t\t    el.attachEvent('on' + type, function () { return fn.call(el, window.event); });\r\n\t\t\t\t  } else if (el && el.length) {\r\n\t\t\t\t    for (var i = 0; i < el.length; i++) {\r\n\t\t\t\t      addEvent(el[i], type, fn);\r\n\t\t\t\t    }\r\n\t\t\t\t  }\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t})();\r\n\r\n        // Constructor\r\n        function History () {\r\n        \tthis.histories = [];\r\n\r\n        \tthis.id \t= 0;\r\n        \tthis.path \t= \"#home/\";\r\n        \tthis.place \t= \"\";\r\n        \tthis.space \t= \"\";\r\n\r\n            this._html5 = true;\r\n\r\n        \tif (typeof history.pushState === 'undefined') {\r\n\t\t\t\tLog.debug( 'HTML5 History API NOT available' );\r\n\r\n                // Set the html5 flag to false\r\n                this._html5 = false;\r\n\t\t\t} else {\r\n\t\t\t\tLog.debug( 'HTML5 History API available' );\r\n\r\n\t\t\t  \t// Push an initial entry on initialisation.\r\n\t\t\t  \t// This makes the first back just do nothing ( rather than leaving the site )\r\n\t\t\t\thistory.pushState( { \"id\":this.id++ }, \"\", window.location.href );\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * @event popstate\r\n\t\t\t * Handlers the browser \"back\" button click event.\r\n\t\t\t */\r\n        \taddEvent(window, 'popstate', function (event) {\r\n        \t\t// Determine if an event state object exists\r\n\r\n        \t\tif( event.state ){\r\n        \t\t\tvar obj = _instance.histories.pop();\r\n\r\n                    if( obj && obj.id === ( event.state.id + 1 ) ){\r\n\t\t\t\t\t    Log.info( obj.id + \"/\" + obj.place.name + \"/\" + obj.space.name );\r\n\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n        \t\t} else {\r\n        \t\t\tLog.warning( \"Back again will leave site\" );\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n        \t\t}\r\n\t\t\t});\r\n\r\n\t\t\taddEvent(window, 'hashchange', function (event) {\r\n\t\t\t\t// Not implemented\r\n\t\t\t});\r\n\r\n\t\t\taddEvent(window, 'pageshow', function (event) {\r\n\t\t\t\t// Not implemented\r\n\t\t\t});\r\n\r\n\t\t\taddEvent(window, 'pagehide', function (event) {\r\n\t\t\t\t// Not implemented\r\n\t\t\t});\r\n\r\n\t\t\t// Fired from place.service when a place is shown\r\n\t\t\tevents.on( \"place.shown\", function( params ){ this.placeShown( params ); }, this );\r\n\t\t\t// Fired from space.service when a space is shown\r\n\t\t\tevents.on( \"space.shown\", function( params ){ this.spaceShown( params ); }, this );\r\n        };\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        History.prototype = {};\r\n\r\n        /**\r\n         * @method placeShown\r\n\t\t * stores the current place for reference when its changed\r\n         */\r\n        History.prototype.placeShown = function( json ){\r\n        \tthis.place = json.place;\r\n        };\r\n\r\n\t\t/**\r\n         * @method spaceShown\r\n\t\t * stores the current space for reference when its changed.\r\n\t\t * also adds a new entry to the history stack\r\n         */\r\n        History.prototype.spaceShown = function( json ){\r\n        \tthis.space = json.space;\r\n\r\n        \tvar historyObject = {\r\n        \t\t\"id\": \t\tthis.id++,\r\n        \t\t\"place\": \t{\r\n        \t\t\t\"id\": \tthis.place.id,\r\n        \t\t\t\"name\": this.place.name\r\n        \t\t},\r\n        \t\t\"space\": \t{\r\n        \t\t\t\"id\": \tthis.space.id,\r\n        \t\t\t\"name\": this.space.name\r\n        \t\t},\r\n        \t};\r\n\r\n        \tthis.histories.push( historyObject );\r\n\r\n            if( this._html5 )\r\n        \t   history.pushState( { \"id\":historyObject.id }, \"\", window.location.href );\r\n        };\r\n\r\n        // Return the instance\r\n        if( !_instance )\r\n            _instance = new History();\r\n\r\n        return _instance;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/utils/history.js?");

/***/ }),

/***/ "./src/utils/i18n.js":
/*!***************************!*\
  !*** ./src/utils/i18n.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0\r\n * Copyright(c) 2014 Pumpco Inc.\r\n  \r\n  \r\n */\r\n\r\n// # utils.dom\r\n// Some generic DOM helpers that ease the burden on Cog and Services when manipulating the DOM. \r\n// Depends on JQuery to normalise the DOM support\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, log ){\r\n\r\n        var _instance = undefined;\r\n\r\n        // ## I18n \r\n        // Singleton\r\n        function I18n () {\r\n            // **property** {json} lang: the language pack to use. Defaults to {}; \r\n            this._lang   = {};\r\n            Object.defineProperty( this, \"lang\", { \r\n                get: function(){ return this._lang; },\r\n                set: function( value ){ this._lang = value; }\r\n            } );\r\n\r\n            // **property** {string} locale: teh locale to use, to lookup i18n keys. Defaults to \"en\";\r\n            this._locale = \"en\";\r\n            Object.defineProperty( this, \"locale\", { \r\n                get: function(){ return this._locale; },\r\n                set: function( value ){ this._locale = value; }\r\n            } );\r\n\r\n            events.on( \"user.locale.updated\", this.eventLocaleUpdated, this );\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        I18n.prototype = {};   \r\n\r\n        /**\r\n         * ###eventLocaleUpdated\r\n         * Event handler, which listens for user.locale.updated events. It sets thge locale based on this\r\n         * @params { value:\"sv-se\" }\r\n         */\r\n        I18n.prototype.eventLocaleUpdated = function( params ){\r\n            this.locale = params.value;\r\n        };\r\n\r\n        /**\r\n         * ###resolve\r\n         * Resolves an i18n key into a language string\r\n         * Uses the resources/lang.json file\r\n         * Returns the i18n string or \"\"\r\n         * @params {string} key: The key to match\r\n         */\r\n        I18n.prototype.resolve = function( key ){\r\n            // find a language pack ( usually key will be \"en\" and match the lang )\r\n            var languagePack = this._lang[ this._locale ];\r\n\r\n\r\n            // Sometimes locale is \"en-gb\", strip the later part if no specific pack is available and check the parent\r\n            if( !languagePack ){\r\n                parent = this._locale.split( \"-\" )[ 0 ];\r\n                languagePack = this._lang[ parent ];\r\n            }\r\n\r\n            // If no loanguage pack exists, return empty string\r\n            if( !languagePack )\r\n                return \"\";\r\n\r\n            // Return the token in the language pack of enpty string\"\r\n            return languagePack[ key ] || \"\";\r\n\r\n        };\r\n\r\n        // Create and return the instance\r\n        if( !_instance )\r\n            _instance = new I18n(); \r\n\r\n        return _instance;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://AOS/./src/utils/i18n.js?");

/***/ }),

/***/ "./src/utils/loader.js":
/*!*****************************!*\
  !*** ./src/utils/loader.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n  .\r\n */\r\n\r\n/**\r\n * # apps.appbuilder.loader\r\n * ## _An async 'local' file loader_\r\n * Loads files from the local file system as if requested via http\r\n *\r\n * ####Usage:\r\n *\r\n * ```js\r\n *     tbc\r\n * ```\r\n *\r\n */\r\n\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! utils/log */ \"./src/utils/log.js\"), __webpack_require__(/*! jquery */ \"jquery\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( log, jquery ){\r\n        /**\r\n         * ## Builder\r\n         * Extends apps.App and creates a new Builder instance\r\n         * @param {object} config Object containing all options\r\n         */\r\n        function Loader( callback ) {\r\n            // **property** internal store of downloaded files\r\n            this.files = {};\r\n\r\n            // Set the completed callback\r\n            this.finishedCallback = callback;\r\n        };\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        Loader.prototype = {};\r\n\r\n        /**\r\n         * ###load\r\n         * Async loads the files specified\r\n         * @params [filepaths] files An array of paths to files\r\n         * @returns {} A collection containing all of the data loaded\r\n         */\r\n        Loader.prototype.load = function( config ){\r\n        \t// Only a JS file is really mandatory ( otherwise the cog will do nothing ).\r\n        \t// Load mandatory files, and skip anything not required.\r\n\r\n            this.files = config;\r\n\r\n            // Fire requests only after registering all required files,\r\n            // to prevent problematic early ( incomplete ) returning.\r\n            for( var key in config ){\r\n                var collection = config[ key ];\r\n\r\n                for( var request in collection ){\r\n                    this.asyncLoad.call( this, key, request );\r\n                }\r\n            }\r\n\r\n            // Trigger the 'finished' process, for situations where no valid requests\r\n            // are sent ( usually a new cog specified but not fixtured );\r\n            this.finished();\r\n        }\r\n\r\n        /**\r\n         * ###asyncLoad\r\n         * Performs the AJAX load using JQuery\r\n         * @param {JSON} filename [description]\r\n         * @param {JSON} fileurl  [description]\r\n         * @return {JSON}          [description]\r\n         */\r\n        Loader.prototype.asyncLoad = function( filename, fileurl ){\r\n          // AMONIS: 23/05/2018: Implementing browser fetch which would allow jquery removal\r\n          // Window.fetch detection. Modern browser support with fallback to\r\n          // existing jquery ajax object as a backup\r\n          if( window.fetch ){\r\n            fetch(fileurl)\r\n              .then( function(response){\r\n                var responseText = response.text().then( function( text ) {\r\n                  this.loaded.call( this, filename, fileurl, text );\r\n                }.bind(this));\r\n              }.bind(this))\r\n              .catch( function(err) {\r\n                this.loaded.call( this, filename, fileurl, \"error\" );\r\n              }.bind(this));\r\n          } else {\r\n            // Fire the async request ( Using JQuery )\r\n            $.ajax( {\r\n                dataType: \"text\",\r\n                url: fileurl\r\n            } )\r\n            .done( function( content ){\r\n                this.loaded.call( this, filename, fileurl, content );\r\n            }.bind( this ) )\r\n            .fail( function( xhr, status, err ){\r\n                this.loaded.call( this, filename, fileurl, \"error\" );\r\n            }.bind( this ) );\r\n          }\r\n        };\r\n\r\n        /**\r\n         * loaded\r\n         * Stores the response against the request name or \"error\"\r\n         * @param {JSON} name    [description]\r\n         * @param {JSON} uri     [description]\r\n         * @param {JSON} content [description]\r\n         * @return {JSON}         [description]\r\n         */\r\n        Loader.prototype.loaded = function( name, uri, content ){\r\n            // AMONIS: 06/07/2015: Modified to load an array of files for JS\r\n            this.files[ name ][ uri ] = content;\r\n\r\n            // Fire finished that checks for all downloads\r\n            this.finished();\r\n        };\r\n\r\n        /**\r\n         * ###finished\r\n         * Repeatidly called to check that all requests have an answer\r\n         * e.g. success or failure\r\n         * @return {JSON} [description]\r\n         */\r\n        Loader.prototype.finished = function(){\r\n            var finished = true;\r\n\r\n            for( var key in this.files ){\r\n                var collection = this.files[ key ];\r\n\r\n                for( var request in collection ){\r\n                    var content = collection[ request ];\r\n                    if( content === undefined || content.indexOf( \"http\" ) === 0 ){\r\n                        // This still looks like a url request that has not been\r\n                        // replaced with content yet...\r\n                        finished = false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if( !finished ){\r\n                return false;\r\n            }\r\n\r\n            // trigger callback\r\n            this.finishedCallback( this.files );\r\n\r\n            return true;\r\n        };\r\n\r\n        return Loader;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/utils/loader.js?");

/***/ }),

/***/ "./src/utils/log.js":
/*!**************************!*\
  !*** ./src/utils/log.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0\r\n * Copyright(c) 2014 Pumpco Inc.\r\n */\r\n\r\n/**\r\n * @class utils.Log ( Static )\r\n * Provides a consistent logging interface\r\n * @author Andy Monis\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ){\r\n\r\n        var _log = undefined;\r\n\r\n        // Constructor\r\n        function Log ( config ) {\r\n            config = config || {};\r\n\r\n        \tthis._styles = {\r\n        \t\t\"ok\": \t\t\"color:#5bb75b;\",\r\n        \t\t\"error\": \t\"color:#da4f49;\"\r\n        \t}\r\n\r\n            this._level = 0;\r\n\r\n            this._ns = config.namespace || \"\";\r\n\r\n            this.clearLoggerMethods();\r\n\r\n            this.createLoggerMethods();\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        Log.prototype = {};\r\n\r\n        /**\r\n         * ### clearLoggerMethods\r\n         * Defaults the loggers to null methods\r\n         * This maintains performance ( without if ) when logging is disabled\r\n         * @return {[type]} [description]\r\n         */\r\n        Log.prototype.clearLoggerMethods = function(){\r\n            this.debug      = this.nullFn;\r\n            this.info       = this.nullFn;\r\n            this.warning    = this.nullFn;\r\n            this.error      = this.nullFn;\r\n            this.emergency  = this.nullFn;\r\n        };\r\n\r\n        /**\r\n         * ### createLoggerMethods\r\n         * Binds the logger properties to an implementation\r\n         * Only binds relevant loggers, otherwise leaves as nullFn for performance\r\n         * @return {[type]} [description]\r\n         */\r\n        Log.prototype.createLoggerMethods = function(){\r\n\r\n            //Old IE6 check for no 'console' object\r\n            if( typeof( console ) === \"undefined\" )\r\n               return false;\r\n\r\n            // Old IE8 check for no console.log ( which is only available when the debugger is opened )\r\n            if( !console.log )\r\n                return false;\r\n\r\n            // Map the Console Logger\r\n            this.consoleLogger = this._consoleLogger;\r\n\r\n            // Map the DOM logger\r\n            this.domLogger = function(){};\r\n\r\n            if( this._level >= 4 ){\r\n                this.debug = this.logger ;\r\n            }\r\n            if( this._level >= 3 ){\r\n                this.info = this.logger ;\r\n            }\r\n            if( this._level >= 2 ){\r\n                this.warning = this.logger ;\r\n            }\r\n            if( this._level >= 1 ){\r\n                this.error = this.logger ;\r\n            }\r\n            if( this._level >= 0 ){\r\n                this.emergency = this.logger;\r\n            }\r\n            if( this._level >= 0 ){\r\n            \tthis.styled = function( msg, state ){\r\n            \t\tvar style = this._styles[ state ] || \"\";\r\n\r\n            \t\tthis.logger( msg, style );\r\n            \t}.bind( this );\r\n            }\r\n        };\r\n\r\n        Log.prototype._consoleLogger = function( msg, style ){\r\n            style = style || \"\";\r\n\r\n        \tif( style !== \"\" ){\r\n        \t\tmsg = \"%c\" + msg;\r\n        \t}\r\n\r\n            console.log( msg, style);\r\n        };\r\n\r\n        /**\r\n         * ###logger\r\n         * Checks for namespace match to reduce log results\r\n         * @param {JSON} msg   [description]\r\n         * @param {JSON} ns    [description]\r\n         * @param {JSON} style [description]\r\n         * @return {JSON}       [description]\r\n         */\r\n        Log.prototype.logger = function( msg, ns, style ){\r\n            ns = ns || \"\";\r\n\r\n            if( ns.toLowerCase().indexOf( this._ns ) > -1 ){\r\n                // Log to the console\r\n                this.consoleLogger.call( this, msg, style );\r\n            }\r\n        };\r\n\r\n        Log.prototype.nullFn = function(){ /* nullFn */ };\r\n\r\n        Log.prototype.consoleLogger = function(){};\r\n\r\n        Log.prototype.pulse= function(){};\r\n\r\n        Log.prototype.level = function( level ){\r\n            if( level ){\r\n                this._level = level;\r\n                this.clearLoggerMethods();\r\n                this.createLoggerMethods();\r\n            }\r\n\r\n            return _log._level;\r\n        };\r\n\r\n        /**\r\n         * ###namespace\r\n         * AMONIS: 13/10/2016: Sets the namespace, to only log messages that match\r\n         * case insensitive.\r\n         * \"system\" or \"system.navigationCog\" would match system.navigationCog ( wild is assumed )\r\n         * @param {JSON} namespace [description]\r\n         * @return {JSON}           [description]\r\n         */\r\n        Log.prototype.namespace = function( namespace ){\r\n            if( namespace ){\r\n                this._ns = namespace.toLowerCase();\r\n            }\r\n            return this._ns;\r\n        };\r\n\r\n        // Return the instance\r\n        if( !_log )\r\n            _log = new Log();\r\n\r\n        return _log;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/utils/log.js?");

/***/ }),

/***/ "./src/utils/params.js":
/*!*****************************!*\
  !*** ./src/utils/params.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//\n// Pump API and Application 2.0.0.\n//\n// Copyright(c) 2015 Pumpco Inc.\n//\n\n// # utils.Params§\n// ## *URL/startup param management*\n//\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [  ], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){\n\n        /**\n         * ###Params Constructor\n         */\n    \tfunction Params(){}\n\n        Params.prototype = {};\n\n        /**\n\t\t * [_applyDebugParams description]\n\t\t * Creates a set of startup params from PH defined startup params and browser provided inline ones\n\t\t * @param {JSON} _startup [description]\n\t\t * @param {JSON} _inline  [description]\n\t\t * @return {JSON}          [description]\n\t\t */\n\t\t// Params.applyCogParams = function( _startup, _inline ){\n\t\t// \tvar res = _startup || [];\n    //\n\t\t// \tif( !_inline )\n\t\t// \t\treturn res;\n    //\n\t\t// \t//&params=[{\"name\":\"HealthPump.HealthPumpLoginCog\",\"value\":{\"useForm\":false}}]\n\t\t// \tvar jsonStr = decodeURI( _inline );\n\t\t// \tvar json = JSON.parse( jsonStr );\n    //\n\t\t// \t// Iterate over all inline props provided\n\t\t// \tfor( var inline=0; inline<json.length; inline++ ){\n\t\t// \t\tvar inlineParam = json[ inline ];\n    //\n\t\t// \t\t// Iterate over all existing props from PumpHouse\n\t\t// \t\tvar foundIndex = -1;\n\t\t// \t\tfor( var existing=0; existing<res.length; existing++ ){\n\t\t// \t\t\tvar existingParam = res[ existing ];\n    //\n\t\t// \t\t\tif( existingParam.name === inlineParam.name ){\n\t\t// \t\t\t\tfoundIndex = existing;\n\t\t// \t\t\t\tbreak;\n\t\t// \t\t\t}\n\t\t// \t\t}\n    //\n\t\t// \t\tif( foundIndex === -1 ){\n\t\t// \t\t\t// No existing entry, so push on\n\t\t// \t\t\tres.push( inlineParam );\n\t\t// \t\t} else {\n\t\t// \t\t\t// Found existing entry, merge together\n\t\t// \t\t\tfor( var prop in inlineParam.value ){\n\t\t// \t\t\t\tes[ foundIndex ].value[ prop ] = inlineParam.value[ prop ]\n\t\t// \t\t\t}\n\t\t// \t\t}\n\t\t// \t}\n    //\n\t\t// \treturn res\n\t\t// };\n\n        /**\n\t\t * ### getParam\n\t\t * @param  {[type]} name\n\t\t * @param  {[type]} config\n\t\t * @param  {[type]} def\n\t\t * @return {[type]}        [description]\n\t\t */\n\t\tParams.getParam = function( name, config, def ){\n\t\t\t// Retreive the param from the URL ( via a querystring ) or default.\n\t\t\tvar param = def;\n\n\t\t\t// Retrieve the queryString param\n\t\t\tvar queryString = the.getQueryStringParam( name );\n\t\t\tif( queryString ){\n\t\t\t\t// If it is valid, map \"true\" & \"false\" from strings to booleans\n\t\t\t\tif( queryString === \"true\" || queryString === \"false\" ){\n\t\t\t\t\t// Convert string \"true\" or \"false\" to boolean\n\t\t\t\t\tparam = JSON.parse( queryString );\n\t\t\t\t} else {\n\t\t\t\t\t// Use the string value\n\t\t\t\t\tparam = queryString;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check the startup params ( usually provide statically in html )\n\t\t\t// for the same name and override\n\t\t\tif( config && config[ name ] ){\n\t\t\t\tparam = config[ name ];\n\t\t\t}\n\n\t\t\t// Return the property\n\t\t\treturn param;\n\t\t};\n\n        /**\n\t\t * ###_location\n\t\t * AMONIS: 22/09/2015: calculate the most appropriate base url\n\t\t */\n\t\tParams.getLocation = function( _params ){\n\t\t\tvar val = {};\n\n\t\t\tif( _params.location ){\n\t\t\t\tval.origin = _params.location.protocol + \"://\" + _params.location.host;\n\t\t\t\tval.href = _params.location.protocol + \"://\" + _params.location.host + _params.location.path;\n\t\t\t\tval.fqdn = true;\n\t\t\t\tval.host = the.loc.host;\n\t\t\t} else {\n\t\t\t\tval.origin = the.loc.getOrigin();\n\t\t\t\tval.href = the.loc.getBase();\n\t\t\t\tval.fqdn = false;\n\t\t\t\tval.host = the.loc.host;\n\t\t\t}\n\n\t\t\t// AMONIS: 31/03/2016: Added PumpFacePath for use by My and Card Template resolving\n\t\t\t// Default to \"\" which uses the current relative path ( mainly for a wrapped app )\n\t\t\tval.pumpface = _params.pumpfacePath || \"\";\n\t\t\t// AMONIS: 12/05/2017: Add in a specific reference to the fixtures directory ( so that it can be overridden in development )\n\t\t\tval.fixtures = _params.pumpfaceFixtures || \"PumpHouse/fixture/\";\n\n\t\t\tif( _params.wrapped === true ){\n\t\t\t\t// Running inside cordova\n\t\t\t\tval.fixtures = _params.pumpfaceFixtures || \"fixtures/\";\n\t\t\t}\n\n\t\t\treturn val;\n\t\t};\n\n        // Singleton\n        return Params;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack://AOS/./src/utils/params.js?");

/***/ }),

/***/ "./src/utils/roadieurl.js":
/*!********************************!*\
  !*** ./src/utils/roadieurl.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2015 Pumpco Inc.\r\n *\r\n  .\r\n  .\r\n */\r\n\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! utils/log */ \"./src/utils/log.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( events, Log ){\r\n\r\n        // *private* _instance reference to the created instance.\r\n        var _instance = undefined;\r\n\r\n        // *private* _urlRegex Definition of the Regex to parse a well formed Roadie Url\r\n        var _urlRegex =  /^(?:([a-z]+):\\/\\/)?(['0-9.\\-_A-Za-z]+)?\\/(['0-9.\\-_A-Za-z]+)?\\/?(['0-9.\\-_A-Za-z]+)?\\/?(['0-9.\\-_A-Za-z]+)?\\/?(['0-9.\\-_A-Za-z]+)?\\/?(['0-9.\\-_A-Za-z]+)?(\\?[^#]*)?$/;\r\n\r\n        // *private* _urlNames The names used in the object and url\r\n        var _urlNames = [ \"url\", \"protocol\", \"verb\", \"identifier\", \"user\", \"place\", \"space\", \"cog\", \"params\" ];\r\n\r\n        // ## RoadieUrl\r\n        // **Singleton**\r\n        function RoadieUrl () {\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        RoadieUrl.prototype = {};\r\n\r\n        /**\r\n         * ###generate\r\n         * Method generate takes a number of parameters and formats them into a valid Roadie URL.\r\n         * This method DOES NOT contain any logic to determine these values.\r\n         * @param {JSON}  A valid object containing the following.\r\n         *\r\n         * ```js\r\n         * {\r\n         *      \"protocol\":     {String}, // roadie\r\n         *      \"verb\":         {String}, // visit\r\n         *      \"identifier\":   {String}, // space\r\n         *      \"user\":         {String}, // 00285feb310ef21200000001\r\n         *      \"place\":        {String}, // 0499e8e72052a16d00000001\r\n         *      \"space\":        {String}, // 04c600e632ffd4ee00000001\r\n         *      \"cog\":          {String}, //\r\n         *      \"params\":       {String}  //\r\n         * }\r\n         *\r\n         * ```\r\n         * Should output something similar to\r\n         * ```js\r\n         * \"roadie://visit/space/00285feb310ef21200000001/0499e8e72052a16d00000001/04c600e632ffd4ee00000001\"\r\n         * ```\r\n         */\r\n        RoadieUrl.prototype.generate = function( config ){\r\n            // protocol, verb, identifier, user, place, space, cog, params\r\n            var template = \"{0}://{1}{2}{3}{4}{5}{6}{7}\";\r\n\r\n            var protocol    = config.protocol || \"roadie\";\r\n            var verb        = config.verb || \"visit\";\r\n            var identifier  = config.identifier ? \"/\" + config.identifier : \"\";\r\n            var user        = config.user ? \"/\" + config.user : \"\";\r\n            var place       = config.place ? \"/\" + config.place : \"\";\r\n            var space       = config.space ? \"/\" + config.space : \"\";\r\n            var cog         = config.cog ? \"/\" + config.cog : \"\";\r\n            // Parse the params accepting either in the string form \"x=y\" or object for {x:y}\r\n            var params      = config.params ? \"?\" + this.objectToQueryString( config.params ) : \"\";\r\n\r\n            var result = phil.printf( template, protocol, verb, identifier, user, place, space, cog, params );\r\n\r\n            return result;\r\n        };\r\n\r\n        /**\r\n         * ###queryStringToObject\r\n         * Converts a querysting into an object ( json )\r\n         * @params {String} querystring the input data\r\n         * @returns {Object}\r\n         *\r\n         * param1=hello&param2=world\r\n         * would be converted to\r\n         * ```js\r\n         * {\r\n         *      param1: \"hello\",\r\n         *      param2: \"world\"\r\n         * }\r\n         * ```\r\n         */\r\n        RoadieUrl.prototype.queryStringToObject = function( querystring ){\r\n            if( !querystring )\r\n                return undefined;\r\n\r\n            var obj = {};\r\n\r\n            var items = querystring.split( \"&\" );\r\n            for( var i=0; i<items.length; i++ ){\r\n                var parts = items[ i ].split( \"=\" );\r\n                if( parts.length === 2 )\r\n                    obj[ parts[ 0 ] ] = parts[ 1 ];\r\n            }\r\n\r\n            return obj;\r\n        };\r\n\r\n        /**\r\n         * ###queryStringToObject\r\n         * Converts a querysting into an object ( json )\r\n         * @params {String} querystring the input data\r\n         * @returns {Object}\r\n         *\r\n         * param1=hello&param2=world\r\n         * would be converted to\r\n         * ```js\r\n         * {\r\n         *      param1: \"hello\",\r\n         *      param2: \"world\"\r\n         * }\r\n         * ```\r\n         */\r\n        RoadieUrl.prototype.objectToQueryString = function( obj ){\r\n            // return if the obj is not valid\r\n            if( !obj )\r\n                return undefined;\r\n\r\n            // return the object if it is NOT an object i.e. someone has passed in a string\r\n            if( typeof obj !== \"object\" )\r\n                return obj;\r\n\r\n            // Construct the querystring as an array\r\n            var querystring = [];\r\n\r\n            for( var key in obj ){\r\n                // Append on the keys as neccessary\r\n                querystring.push( key + \"=\" + obj[ key ] );\r\n            }\r\n\r\n            // Join the array with & to return a string.\r\n            return querystring.join( \"&\" );\r\n        };\r\n\r\n        /**\r\n         * ###parse\r\n         * The Url navigation is a black box as far as the end user is concerned. The URL's are generated on the backend\r\n         * and passed directly to the frontend.\r\n         * The Method translates this url into a number of requests / steps to implement to navigate to a specific area\r\n         * of the site, for example, async load of a place, then move to space and cog.\r\n         * ASSUMPTION. Only basic Place navigation supported in this implementation.\r\n         * @param url String e.g. \"roadie://goto/place/user123/place123/space123/cog123?baggage=xyz\"\r\n         * @return Object undefined or { \"url\", \"protocol\", \"verb\", \"identifier\", \"user\", \"place\", \"space\", \"cog\", \"params\" }\r\n         */\r\n        RoadieUrl.prototype.parse = function( url ){\r\n            var resultsObj = undefined;\r\n\r\n            // AMONIS: 11/11/2016: Unescape the string, to remove &#47; style characters from the input\r\n            url = phil.unescape( url );\r\n\r\n            // User the regex to parse the URL\r\n            var results = _urlRegex.exec( url );\r\n\r\n            if (results) {\r\n                var resultObj = results.length > 0 ? {} : undefined;\r\n\r\n                // Map the URL to the defined names for easier developer access\r\n                for (var i = 0; i < _urlNames.length; i++) {\r\n                    resultObj[ _urlNames[i] ] = results[i];\r\n                }\r\n\r\n                // Break up the querystring and assign to object\r\n                var tempParams = undefined;\r\n                if (resultObj.params) {\r\n                    var qs = resultObj.params.substring(1);\r\n\r\n                    var tempParams = this.queryStringToObject( qs );\r\n                }\r\n\r\n                // Reassign the params\r\n                resultObj.params = tempParams;\r\n            }\r\n\r\n            // Return the result or undefined\r\n            return resultObj;\r\n        };\r\n\r\n        /**\r\n         * ###getType\r\n         * returns the type of url passed, which would be either\r\n         * \"roadie\" for a normal roadie URL\r\n         * \"anchor\" for a normal web URL\r\n         * undefined for not known\r\n         * @param {JSON} url [description]\r\n         * @return {JSON}     [description]\r\n         */\r\n        RoadieUrl.prototype.getType = function( url ){\r\n            if( !url || !url.match )\r\n                return undefined;\r\n\r\n            var matches = url.match( /^(\\w)+/g );\r\n\r\n            if( matches.length === 0 )\r\n                return undefined;\r\n\r\n            if( matches[0] === \"http\" || matches[0] === \"https\" )\r\n                return \"anchor\";\r\n            else if( matches[0] === \"roadie\" )\r\n                return \"roadie\";\r\n            else\r\n                return undefined;\r\n        };\r\n\r\n        /**\r\n         * Method to Parse an External Roadie URL and create an Internal Roadie URL for future use.\r\n         * Expects the part after the # to be in the form of\r\n         * visit/user/00285feb310ef21200000001\r\n         * i.e. visit this user.\r\n         * @param url {String} The url direct from the browser\r\n         * @return internalUrl {String} the internal Roadie URL or undefined if not an external Roadie URL\r\n         */\r\n        RoadieUrl.prototype.parseExternal = function( url ){\r\n            // Use the regular URL parsing\r\n            //var url = Ext.htmlDecode( url );\r\n            var url = phil.unescape( url );\r\n            var hashIndex = url.indexOf( \"#\" );\r\n\r\n            // Attempt to parse the part of the url beyond the # e.g. roadie://visit/user/00285feb310ef21200000001\r\n            // Append the \"roadie://\" and attempt to parse\r\n            var roadieObject = this.parse( url.substring( hashIndex + 1 ) );\r\n\r\n            // Generate a new internal roadie url, for pulsing.\r\n            var internal = this.generate( roadieObject );\r\n\r\n            // This should be a valid roadie object\r\n            return internal;\r\n        };\r\n\r\n\r\n        // Return the instance\r\n        if( !_instance )\r\n            _instance = new RoadieUrl();\r\n\r\n        return _instance;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/utils/roadieurl.js?");

/***/ }),

/***/ "./src/utils/store.js":
/*!****************************!*\
  !*** ./src/utils/store.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Pump API and Application 2.0.0.\r\n *\r\n * Copyright(c) 2016 Pumpco Inc.\r\n *\r\n  .\r\n  .\r\n */\r\n\r\n/*\r\n    # utils.store\r\n\r\n    Utillises a native HTML5 localstorage solution. Stores values as Key/Pair values, with all data converted to JSON String,\r\n    prior to storage.\r\n\r\n    Enhanced to support IndexedDB ( and WebSql by PolyFil for apple ), using Mozilla LocalForage, for modern browsers. This allows greater storage limits,\r\n    usually around the 50Mb mark, indexing and faster storage and retreval, mainly due to native data types being supported.\r\n\r\n    Due to fallback requirement for localstorage, the general advice was to store \"objects\", which were then JSON.stringify'd in to\r\n    the key / pair store. This is done by the browser but is still time consuming and error prone.\r\n\r\n    LocalForage supports \"native\" Object storage, removing the need to convert on Set and Get. This will be noticable on large objects, such as Site Specs etc.\r\n*/\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! knockout */ \"knockout\"), __webpack_require__(/*! core/events */ \"./src/core/events.js\"), __webpack_require__(/*! localforage */ \"localforage\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( ko, events, $forage ){\r\n\r\n        // **private** {object} _instance: internal reference for creating Singleton\r\n        var _instance = undefined;\r\n\r\n        /**\r\n         * ### formatDate\r\n         * Fast date formating for log entry\r\n         * @param  {[type]} date\r\n         * @return {[type]}      [description]\r\n         */\r\n        function formatDate(date) {\r\n            function pad( int ){\r\n                var str = \"\" + int;\r\n                return str.length < 2 ? \"0\" + str : str;\r\n            }\r\n            var _date   = new Date();\r\n            var MM = pad( parseInt( _date.getMonth() ) + 1 );\r\n            var dd = pad( _date.getDate() );\r\n            var hh = pad( _date.getHours() );\r\n            var mm = pad( _date.getMinutes() );\r\n            var ss = pad( _date.getSeconds() );\r\n            return  _date.getFullYear() + '-' + MM + '-' + dd + '_' + hh + ':' + mm + ':' + ss;\r\n        }\r\n\r\n        /**\r\n         * ###checkSupport\r\n         *\r\n         * Checks for compatibility with localstorage and sets up the \"localForage\" configuration for\r\n         * cross WebSql / IndexedDB support.\r\n         */\r\n        function checkSupport(){\r\n            try{\r\n                // Set default database size\r\n                var dbSize = 1024 * 1024 * 10; // 10MB\r\n\r\n                // Set default DB Driver order.\r\n                var driverPreferences = [ $forage.INDEXEDDB, $forage.WEBSQL, $forage.LOCALSTORAGE ];\r\n\r\n                // Configure LocalForage storage;\r\n                $forage.config({\r\n                    driver      : driverPreferences,\r\n                    name        : 'Platform',\r\n                    version     : 1.0,\r\n                    size        : dbSize, // Size of database, in bytes. WebSQL-only for now.\r\n                    storeName   : 'aos', // Should be alphanumeric, with underscores.\r\n                    description : 'aos platform storage'\r\n                });\r\n\r\n                return 'localStorage' in window && window['localStorage'] !== null ? window[ 'localStorage' ] : false;\r\n            } catch( e ){\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        /**\r\n         * ###Store\r\n         */\r\n        function Store ( config ) {\r\n            config = config || {};\r\n\r\n            // **property** _enableStaticLog Allows static logging to be used\r\n            this._flagEnableStaticLog = config.enableStatic !== undefined ? config.enableStatic : true;\r\n\r\n            // Initialise the Local Storage\r\n        \tthis.localStorage = checkSupport();\r\n        }\r\n\r\n        // Create a new prototype object to base this on ( in this case a base object )\r\n        Store.prototype = {};\r\n\r\n        Store.prototype.STORE_KEY = \"log\";\r\n\r\n        /**\r\n         * ###set\r\n         *\r\n         * Sets a key / value pair in the localstorage.\r\n         *\r\n         * **synchronous**\r\n         *\r\n         * @params {string} name\r\n         * @params {Something} value\r\n         * @params {int} days **deprecated** the days to store for.  ( Not used anymore as this was a cookies property )\r\n         */\r\n        Store.prototype.set = function( name, value, days ){\r\n            if( _instance.localStorage ){\r\n                // Store in local storage\r\n                try {\r\n                    // Test for Knockout stuff.\r\n                    var json = JSON.stringify( value );\r\n\r\n                    _instance.localStorage.setItem( name, json );\r\n                } catch ( e ){\r\n\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###setAsync\r\n         *\r\n         * Async version of Set. Sets a key / value pair in the most appropriate local storage.\r\n         * DOES NOT perform any JSON conversions.\r\n         *\r\n         * **asynchronous**\r\n         *\r\n         * @params {string} name: The key to store the data by\r\n         * @params {Something} value:  The data to store. Usually an Object\r\n         * @params {function(err,data)} success: Callback, invoked on success\r\n         */\r\n        Store.prototype.setAsync = function( name, value, success ){\r\n            if( _instance.localStorage ){\r\n                // Set the Item using Mozilla Forage\r\n                $forage.setItem( name, value, success );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###get\r\n         *\r\n         * Sync version of Get. Gets a key / value pair from local storage.\r\n         *\r\n         * **synchronous**\r\n         *\r\n         * @params {string} name: The key to retrieve the data by\r\n         */\r\n        Store.prototype.get = function( name ){\r\n            if( !name )\r\n                return undefined;\r\n\r\n            var ret = undefined;\r\n\r\n            if( _instance.localStorage ){\r\n            \ttry {\r\n\t\t\t\t\tret = _instance.localStorage.getItem( name );\r\n\r\n                \tret = JSON.parse( ret );\r\n            \t} catch ( e ){\r\n            \t\t// return undefined on error, as nothing valid is stored.\r\n            \t\tret = undefined;\r\n\r\n            \t\t// Clear the property if an error occurred\r\n            \t\t_instance.localStorage.removeItem( name );\r\n            \t}\r\n            }\r\n\r\n            return ret;\r\n        };\r\n\r\n        /**\r\n         * ###getAsync\r\n         *\r\n         * Async version of Get. Gets a key / value pair from the most appropriate local storage.\r\n         *\r\n         * **asynchronous**\r\n         *\r\n         * @params {string} name: The key to retrieve the data by\r\n         * @params {function(data)} success: Callback, invoked on success\r\n         */\r\n        Store.prototype.getAsync = function( name, success ){\r\n            if( !name )\r\n                return undefined;\r\n\r\n            if( _instance.localStorage ){\r\n                $forage.getItem( name, function( err, value ) {\r\n                    // Call the callback with the parsed data\r\n                    success( value );\r\n                });\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###getAll\r\n         * Gets all of the objects for a given key\r\n         * @params {string} name Full or partial name to get all tokens for\r\n         */\r\n        Store.prototype.getAll = function( name ){\r\n            var results = {};\r\n\r\n            if( !name )\r\n                return results;\r\n\r\n            // Search localstorage for any matching keys\r\n            for( var key in _instance.localStorage ){\r\n                // Test the name for a full / partial match\r\n                var found = key.indexOf( name );\r\n                if( found >= 0 ){\r\n                    // Remove the item from the matched query\r\n                    var item = _instance.localStorage.getItem( key );\r\n\r\n                    results[ key ] = item;\r\n                }\r\n            }\r\n\r\n            return results;\r\n        };\r\n\r\n        /**\r\n         * ###del\r\n         *\r\n         * @params {string} name The name of the property to remove. Can be partial, such as \"drive.\" to remove \"drive.abc\" and \"drive.def\"\r\n         */\r\n        Store.prototype.del = function( name ){\r\n            if( name === \"*\" ){\r\n                // Special key word * used to clear entire local storage\r\n                _instance.localStorage.clear();\r\n            } else {\r\n                // Search localstorage for any matching keys\r\n                for( var key in _instance.localStorage ){\r\n                    // Test the name for a full / partial match\r\n                    var found = key.indexOf( name );\r\n                    if( found >= 0 ){\r\n                        // Remove the item from the matched query\r\n                        _instance.localStorage.removeItem( key );\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###del\r\n         *\r\n         * Iterates over all of the keys in the storage mechanism and removes partial / full matches.\r\n         *\r\n         * @params {string} name The name of the property to remove. Can be partial, such as \"drive.\" to remove \"drive.abc\" and \"drive.def\"\r\n         */\r\n        Store.prototype.delAsync = function( name ){\r\n            if( name === \"*\" ){\r\n                // Special key word * used to clear entire local storage\r\n                // _instance.localStorage.clear();\r\n                $forage.clear();\r\n            } else {\r\n\r\n                localforage.iterate(function(value, key, iterationNumber) {\r\n                    var found = key.indexOf( name );\r\n                    if( found ){\r\n                        $forage.removeItem( key );\r\n                    }\r\n                }, function(err) {\r\n                    if (!err) {\r\n                        console.log('Iteration has completed');\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###del\r\n         *\r\n         * @params {string} name The name of the property to remove. Can be partial, such as \"drive.\" to remove \"drive.abc\" and \"drive.def\"\r\n         */\r\n        Store.prototype.delAllBut = function( base, names ){\r\n            if( !names )\r\n                return -1;\r\n\r\n            var items = [];\r\n            for( var i=0; i<names.length; i++ ){\r\n                items.push( base + \".\" + names[ i ] );\r\n            }\r\n\r\n            // Search localstorage for any matching keys\r\n            for( var key in _instance.localStorage ){\r\n\r\n                var foundBase = key.indexOf( items );\r\n                if( foundBase >= 0 ){\r\n                    // Remove any items NOT in preserve list\r\n                    if( found === -1 ){\r\n                        // Remove the item from the matched query\r\n                        _instance.localStorage.removeItem( key );\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * ###log\r\n         * Writes a log entry to local storage\r\n         * @param  {[type]} msg\r\n         * @return {[type]}     [description]\r\n         */\r\n        Store.prototype.log = function( msg ){\r\n            if( this._flagEnableStaticLog ){\r\n                var _log = this.get( this.STORE_KEY );\r\n\r\n                // Create a new instance of log if it doesn't exist\r\n                if( !_log ){\r\n                    _log = [];\r\n                }\r\n\r\n                // Trim the length of log if it goes over 50 ( maintain previous 49 results )\r\n                if( _log.length >= 50 ){\r\n                    _log.shift();\r\n                }\r\n\r\n                // Push new msg to log\r\n                _log.push( formatDate() + ' : ' + msg );\r\n\r\n                // Store the results in local storage\r\n                this.set( this.STORE_KEY, _log );\r\n            }\r\n        }\r\n\r\n        // Return the Singleton instance, or create a new one\r\n        if( !_instance )\r\n            _instance = new Store();\r\n\r\n        return _instance;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://AOS/./src/utils/store.js?");

/***/ }),

/***/ 0:
/*!***************************!*\
  !*** multi ./src/live.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./src/live.js */\"./src/live.js\");\n\n\n//# sourceURL=webpack://AOS/multi_./src/live.js?");

/***/ }),

/***/ "camelet":
/*!**************************!*\
  !*** external "camelet" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function() { module.exports = this[\"camelet\"]; }());\n\n//# sourceURL=webpack://AOS/external_%22camelet%22?");

/***/ }),

/***/ "jquery":
/*!*************************!*\
  !*** external "jQuery" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function() { module.exports = this[\"jQuery\"]; }());\n\n//# sourceURL=webpack://AOS/external_%22jQuery%22?");

/***/ }),

/***/ "knockout":
/*!*********************!*\
  !*** external "ko" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function() { module.exports = this[\"ko\"]; }());\n\n//# sourceURL=webpack://AOS/external_%22ko%22?");

/***/ }),

/***/ "localforage":
/*!******************************!*\
  !*** external "localforage" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function() { module.exports = this[\"localforage\"]; }());\n\n//# sourceURL=webpack://AOS/external_%22localforage%22?");

/***/ }),

/***/ "notifyjs":
/*!*************************!*\
  !*** external "Notify" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function() { module.exports = this[\"Notify\"]; }());\n\n//# sourceURL=webpack://AOS/external_%22Notify%22?");

/***/ }),

/***/ "phil":
/*!***********************!*\
  !*** external "phil" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function() { module.exports = this[\"phil\"]; }());\n\n//# sourceURL=webpack://AOS/external_%22phil%22?");

/***/ }),

/***/ "the":
/*!**********************!*\
  !*** external "the" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function() { module.exports = this[\"the\"]; }());\n\n//# sourceURL=webpack://AOS/external_%22the%22?");

/***/ })

/******/ });